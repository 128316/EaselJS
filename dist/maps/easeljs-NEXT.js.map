{"version":3,"sources":["easeljs-NEXT.js"],"names":["exports","Tween","Timeline","hasOwnProperty","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","StageGL","this","Error","Event","type","bubbles","arguments","undefined","cancelable","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","event","n","set","toString","name","EventDispatcher","initialize","p","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","l","splice","eventObj","e","parent","top","list","captureListeners","o","slice","_nextId","uid","Point","x","y","setValues","copy","point","Matrix2D","a","b","c","d","tx","ty","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","Math","prependTransform","rotate","angle","skew","scale","translate","identity","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","delta","abs","PI","DisplayProps","visible","alpha","shadow","compositeOperation","Rectangle","width","height","extend","pad","left","bottom","right","rect","contains","union","intersection","x1","y1","x2","y2","intersects","isEmpty","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","getBounds","shaderParamSetup","gl","stage","shaderProgram","applyFilter","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","_Filter","_this","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","getFilterBounds","output","filters","filterCount","f","test","define","options","_options","_useWebGL","update","filterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","release","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","getCacheDataURL","toDataURL","draw","drawImage","setValue","window","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","_EventDispatcher","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","isVisible","ignoreCache","drawCache","cache","updateContext","mtx","graphics","getMatrix","transform","drawAsPath","clip","_snapToPixelEnabled","globalAlpha","_applyShadow","updateCache","uncache","getDataURL","localToGlobal","getConcatenatedMatrix","globalToLocal","localToLocal","getConcatenatedDisplayProps","hitTest","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","_tick","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","_MOUSE_EVENTS","get","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","_DisplayObject","children","mouseChildren","tickChildren","hasContent","child","addChild","_len","Array","_key","silent","_removeChildAt","indexOf","addChildAt","_len2","_key2","index","pop","removeChild","_len3","_key3","good","removeChildAt","_len4","indexes","_key4","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","mode","_getObjectsUnderPoint","recursive","_cloneChildren","mouse","activeListener","currentDepth","_testMask","result","fillStyle","fill","MouseEvent","_Event","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","Stage","_Container","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","tick","beginPath","clear","backgroundColor","mimeType","fillRect","dataURL","enableMouseOver","_this2","frequency","clearInterval","_testMouseOver","setInterval","min","_this3","enable","_eventListeners","t","mouseup","_handleMouseUp","mousemove","_handleMouseMove","dblclick","_handleDoubleClick","mousedown","_handleMouseDown","_n","_o","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","nextStage","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","unshift","style","_i","_i2","pointerId","HTMLCanvasElement","VideoBuffer","video","readyState","_video","_canvas","_lastTime","_videoReady","bind","getImage","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","paused","currentAnimationFrame","framerate","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","play","stop","_goto","gotoAndStop","advance","time","fps","getFrameBounds","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","_l","getNumFrames","end","changed","isNaN","getAnimation","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","ss","_getSpaceWidth","change","spaceW","lineH","pool","_spritePool","childIndex","numKids","sprite","hasSpace","charAt","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_fill","_strokeIgnoreScale","_commitIndex","_instructions","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","getRGB","g","getHSL","hue","saturation","lightness","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","instructions","paramCount","params","base64","_BASE_64","fi","pl","charCount","num","sign","apply","store","unstore","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","_Fill","strokeStyle","lineWidth","lineCap","_STROKE_CAPS_MAP","lineJoin","_STROKE_JOINTS_MAP","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","inited","init","INDEPENDENT","startPosition","loop","timeline","assign","useTicks","actionsEnabled","autoReset","frameBounds","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","MovieClipPlugin","install","positionOrLabel","_framerate","_updateTimeline","pos","resolve","_reset","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","_renderFirstFrame","tweens","_iterator","_isArray","isArray","Symbol","iterator","_ref","done","tween","passive","_stepPosition","_addManagedChild","_setState","state","_off","labels","currentLabel","duration","SYNCHED","installPlugin","prop","_tween","startValues","endValues","ratio","wait","priority","Shadow","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","frameIndex","rectangle","images","_loop","_img","onload","_handleImageLoad","onerror","_handleImageError","_iterator2","_isArray2","_ref2","spacing","margin","count","_calculateFrames","animations","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","_img2","imgW","imgH","naturalHeight","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","H_OFFSETS","V_OFFSETS","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","start","center","hanging","middle","alphabetic","ideographic","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","AlphaMaskFilter","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","_updateShader","replace","toFixed","_getTable","spread","EDGE","adjust","factor","reduce","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","xChange","yChange","qChange","_compiledShader","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","reset","adjustColor","IDENTITY_MATRIX","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","LENGTH","toArray","_j","val","limit","freeze","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","label","__reset","Touch","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","disable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","addFrame","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","setTimeout","_run","stopAsync","clearTimeout","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","SpriteSheetUtils","_workingCanvas","_workingContext","extractFrame","_flip","il","__tmp","fl","_src","sfx","names","al","_src2","_i3","WebGLInspector","_stage","dispProps","item","_log","alternateOutput","_WebGLInspector$alter","log","_console","console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","toggleGPUDraw","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out","Ticker","versions","easeljs"],"mappings":"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","file":"../easeljs-NEXT.js","sourcesContent":["/**\n * @license\n * EaselJS\n * Visit https://createjs.com for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n(function (exports,Tween,Timeline) {\n  'use strict';\n\n  Tween = Tween && Tween.hasOwnProperty('default') ? Tween['default'] : Tween;\n  Timeline = Timeline && Timeline.hasOwnProperty('default') ? Timeline['default'] : Timeline;\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  /**\n   * @license\n   *\n   * StageGL\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  var StageGL = function StageGL() {\n    classCallCheck(this, StageGL);\n\n    throw new Error(\"\\n\\t\\t\\tStageGL is not currently supported on the EaselJS 2.0 branch.\\n\\t\\t\\tEnd of Q1 2018 is targetted for StageGL support.\\n\\t\\t\\tFollow @CreateJS on Twitter for updates.\\n\\t\\t\");\n  };\n\n  /**\n   * @license Event\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n   * Note that Event objects are often reused, so you should never\n   * rely on an event object's state outside of the call stack it was received in.\n   *\n   * @memberof core\n   * @example\n   * const evt = new Event(\"myEvent\");\n   * const dispatcher = new EventDispatcher();\n   * dispatcher.on(\"myEvent\", event => console.log(event.type));\n   * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n   *\n   * @param {string} type The event type.\n   * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n   * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n   */\n  var Event = function () {\n  \tfunction Event(type) {\n  \t\tvar bubbles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  \t\tvar cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  \t\tclassCallCheck(this, Event);\n\n  \t\t/**\n     * The type of event.\n     * @type string\n     */\n  \t\tthis.type = type;\n\n  \t\t/**\n     * The object that generated an event.\n     *\n     * @type Object\n     * @default null\n     * @readonly\n     */\n  \t\tthis.target = null;\n\n  \t\t/**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     *\n     * @type Object\n     * @default null\n     * @readonly\n     */\n  \t\tthis.currentTarget = null;\n\n  \t\t/**\n     * For bubbling events, this indicates the current event phase:\n     * <OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     *\n     * @type number\n     * @default 0\n     * @readonly\n     */\n  \t\tthis.eventPhase = 0;\n\n  \t\t/**\n     * Indicates whether the event will bubble through the display list.\n     *\n     * @type boolean\n     * @readonly\n     */\n  \t\tthis.bubbles = bubbles;\n\n  \t\t/**\n     * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n     *\n     * @type boolean\n     * @readonly\n     */\n  \t\tthis.cancelable = cancelable;\n\n  \t\t/**\n     * The epoch time at which this event was created.\n     *\n     * @type number\n     * @readonly\n     */\n  \t\tthis.timeStamp = new Date().getTime();\n\n  \t\t/**\n     * Indicates if {@link core.Event#preventDefault} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n  \t\tthis.defaultPrevented = false;\n\n  \t\t/**\n     * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n  \t\tthis.propagationStopped = false;\n\n  \t\t/**\n     * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n  \t\tthis.immediatePropagationStopped = false;\n\n  \t\t/**\n     * Indicates if {@link core.Event#remove} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n  \t\tthis.removed = false;\n  \t}\n\n  \t/**\n    * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n    * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n    * cancel the default behaviour associated with the event.\n    * @return {core.Event} this, chainable\n    */\n\n\n  \tEvent.prototype.preventDefault = function preventDefault() {\n  \t\tthis.defaultPrevented = this.cancelable;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Sets {@link core.Event#propagationStopped} to true.\n    * Mirrors the DOM event standard.\n    * @return {core.Event} this, chainable\n    */\n\n\n  \tEvent.prototype.stopPropagation = function stopPropagation() {\n  \t\tthis.propagationStopped = true;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n    * Mirrors the DOM event standard.\n    * @return {core.Event} this, chainable\n    */\n\n\n  \tEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n  \t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Causes the active listener to be removed via removeEventListener();\n    *\n    * @example\n    * myBtn.addEventListener(\"click\", event => {\n    *   event.remove(); // removes this listener.\n    * });\n    *\n    * @return {core.Event} this, chainable\n    */\n\n\n  \tEvent.prototype.remove = function remove() {\n  \t\tthis.removed = true;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a clone of the Event instance.\n    *\n    * @return {core.Event} a clone of the Event instance.\n    */\n\n\n  \tEvent.prototype.clone = function clone() {\n  \t\tvar event = new Event(this.type, this.bubbles, this.cancelable);\n  \t\tfor (var n in this) {\n  \t\t\tif (this.hasOwnProperty(n)) {\n  \t\t\t\tevent[n] = this[n];\n  \t\t\t}\n  \t\t}\n  \t\treturn event;\n  \t};\n\n  \t/**\n    * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n    *\n    * @param {Object} props A generic object containing properties to copy to the instance.\n    * @return {core.Event} this, chainable\n    */\n\n\n  \tEvent.prototype.set = function set(props) {\n  \t\tfor (var n in props) {\n  \t\t\tthis[n] = props[n];\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    *\n    * @return {string} A string representation of the instance.\n    */\n\n\n  \tEvent.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \" (type=\" + this.type + \")]\";\n  \t};\n\n  \treturn Event;\n  }();\n\n  /**\n   * @license EventDispatcher\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n   *\n   * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n   * EventDispatcher {@link core.EventDispatcher.initialize} method.\n   *\n   * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n   * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n   * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n   *\n   * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n   * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n   * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n   *\n   * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n   * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n   * includes a {@link core.Event#remove} method which removes the active listener.\n   *\n   * @memberof core\n   * @example\n   * // add EventDispatcher capabilities to the \"MyClass\" class.\n   * EventDispatcher.initialize(MyClass.prototype);\n   *\n   * // Add an event.\n   * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n   *\n   * // scope (\"this\") can be be a challenge with events.\n   * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n   * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n   * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n   */\n\n  var EventDispatcher = function () {\n\n  \t/**\n    * Static initializer to mix EventDispatcher methods into a target object or prototype.\n    *\n    * @static\n    * @example\n    * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n    * EventDispatcher.initialize(myInstance); // add to a specific instance\n    *\n    * @param {Object} target The target object to inject EventDispatcher methods into.\n    */\n  \tEventDispatcher.initialize = function initialize(target) {\n  \t\tvar p = EventDispatcher.prototype;\n  \t\ttarget.addEventListener = p.addEventListener;\n  \t\ttarget.on = p.on;\n  \t\ttarget.removeEventListener = target.off = p.removeEventListener;\n  \t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n  \t\ttarget.hasEventListener = p.hasEventListener;\n  \t\ttarget.dispatchEvent = p.dispatchEvent;\n  \t\ttarget._dispatchEvent = p._dispatchEvent;\n  \t\ttarget.willTrigger = p.willTrigger;\n  \t};\n\n  \tfunction EventDispatcher() {\n  \t\tclassCallCheck(this, EventDispatcher);\n\n  \t\t/**\n     * @private\n     * @default null\n     * @type Object\n     */\n  \t\tthis._listeners = null;\n\n  \t\t/**\n     * @private\n     * @default null\n     * @type Object\n     */\n  \t\tthis._captureListeners = null;\n  \t}\n\n  \t/**\n    * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n    * multiple callbacks getting fired.\n    *\n    * @example\n    * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n    *\n    * @param {string} type The string type of the event.\n    * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n    * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n    * @return {Function|Object} Returns the listener for chaining or assignment.\n    */\n\n\n  \tEventDispatcher.prototype.addEventListener = function addEventListener(type, listener) {\n  \t\tvar useCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  \t\tvar listeners = void 0;\n  \t\tif (useCapture) {\n  \t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n  \t\t} else {\n  \t\t\tlisteners = this._listeners = this._listeners || {};\n  \t\t}\n  \t\tvar arr = listeners[type];\n  \t\tif (arr) {\n  \t\t\tthis.removeEventListener(type, listener, useCapture);\n  \t\t\tarr = listeners[type]; // remove may have deleted the array\n  \t\t}\n  \t\tif (arr) {\n  \t\t\tarr.push(listener);\n  \t\t} else {\n  \t\t\tlisteners[type] = [listener];\n  \t\t}\n  \t\treturn listener;\n  \t};\n\n  \t/**\n    * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n    * only run once, associate arbitrary data with the listener, and remove the listener.\n    *\n    * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n    * The wrapper function is returned for use with `removeEventListener` (or `off`).\n    *\n    * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n    * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n    * to `on` with the same params will create multiple listeners.\n    *\n    * @example\n    * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n    * function handleClick (evt, data) {\n    *   data.count -= 1;\n    *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n    *   if (data.count == 0) {\n    *     alert(\"clicked 3 times!\");\n    *     myBtn.off(\"click\", listener);\n    *     // alternately: evt.remove();\n    *   }\n    * }\n    *\n    * @param {string} type The string type of the event.\n    * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n    * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n    * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n    * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n    * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n    * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n    */\n\n\n  \tEventDispatcher.prototype.on = function on(type, listener) {\n  \t\tvar scope = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  \t\tvar once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  \t\tvar data = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  \t\tvar useCapture = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  \t\tif (listener.handleEvent) {\n  \t\t\tscope = scope || listener;\n  \t\t\tlistener = listener.handleEvent;\n  \t\t}\n  \t\tscope = scope || this;\n  \t\treturn this.addEventListener(type, function (evt) {\n  \t\t\tlistener.call(scope, evt, data);\n  \t\t\tonce && evt.remove();\n  \t\t}, useCapture);\n  \t};\n\n  \t/**\n    * Removes the specified event listener.\n    *\n    * You must pass the exact function reference used when the event was added. If a proxy\n    * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n    * closure will not work.\n    *\n    * @example\n    * displayObject.removeEventListener(\"click\", handleClick);\n    *\n    * @param {string} type The string type of the event.\n    * @param {Function|Object} listener The listener function or object.\n    * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n    */\n\n\n  \tEventDispatcher.prototype.removeEventListener = function removeEventListener(type, listener) {\n  \t\tvar useCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  \t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\n  \t\tif (!listeners) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar arr = listeners[type];\n  \t\tif (!arr) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar l = arr.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tif (arr[i] === listener) {\n  \t\t\t\tif (l === 1) {\n  \t\t\t\t\tdelete listeners[type];\n  \t\t\t\t} // allows for faster checks.\n  \t\t\t\telse {\n  \t\t\t\t\t\tarr.splice(i, 1);\n  \t\t\t\t\t}\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n    * `on` method.\n    *\n    * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n    * {@link core.EventDispatcher#on} for an example.\n    *\n    * @param {string} type The string type of the event.\n    * @param {Function|Object} listener The listener function or object.\n    * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n    */\n\n\n  \tEventDispatcher.prototype.off = function off(type, listener) {\n  \t\tvar useCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  \t\tthis.removeEventListener(type, listener, useCapture);\n  \t};\n\n  \t/**\n    * Removes all listeners for the specified type, or all listeners of all types.\n    *\n    * @example\n    * // remove all listeners\n    * displayObject.removeAllEventListeners();\n    *\n    * // remove all click listeners\n    * displayObject.removeAllEventListeners(\"click\");\n    *\n    * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n    */\n\n\n  \tEventDispatcher.prototype.removeAllEventListeners = function removeAllEventListeners() {\n  \t\tvar type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  \t\tif (type) {\n  \t\t\tif (this._listeners) {\n  \t\t\t\tdelete this._listeners[type];\n  \t\t\t}\n  \t\t\tif (this._captureListeners) {\n  \t\t\t\tdelete this._captureListeners[type];\n  \t\t\t}\n  \t\t} else {\n  \t\t\tthis._listeners = this._captureListeners = null;\n  \t\t}\n  \t};\n\n  \t/**\n    * Dispatches the specified event to all listeners.\n    *\n    * @example\n    * // use a string event\n    * this.dispatchEvent(\"complete\")\n    *\n    * // use an Event instance\n    * const event = new createjs.Event(\"progress\");\n    * this.dispatchEvent(event);\n    *\n    * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n    * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n    * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n    * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n    * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n    * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n    * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n    */\n\n\n  \tEventDispatcher.prototype.dispatchEvent = function dispatchEvent(eventObj) {\n  \t\tvar bubbles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  \t\tvar cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  \t\tif (typeof eventObj === \"string\") {\n  \t\t\t// skip everything if there's no listeners and it doesn't bubble:\n  \t\t\tvar listeners = this._listeners;\n  \t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n  \t\t} else if (eventObj.target && eventObj.clone) {\n  \t\t\t// redispatching an active event object, so clone it:\n  \t\t\teventObj = eventObj.clone();\n  \t\t}\n\n  \t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n  \t\ttry {\n  \t\t\teventObj.target = this;\n  \t\t} catch (e) {} // try/catch allows redispatching of native events\n\n  \t\tif (!eventObj.bubbles || !this.parent) {\n  \t\t\tthis._dispatchEvent(eventObj, 2);\n  \t\t} else {\n  \t\t\tvar top = this;\n  \t\t\tvar list = [top];\n  \t\t\twhile (top.parent) {\n  \t\t\t\tlist.push(top = top.parent);\n  \t\t\t}\n  \t\t\tvar l = list.length;\n  \t\t\tvar i = void 0;\n\n  \t\t\t// capture & atTarget\n  \t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n  \t\t\t\tlist[i]._dispatchEvent(eventObj, 1 + (i == 0));\n  \t\t\t}\n  \t\t\t// bubbling\n  \t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n  \t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n  \t\t\t}\n  \t\t}\n  \t\treturn !eventObj.defaultPrevented;\n  \t};\n\n  \t/**\n    * Indicates whether there is at least one listener for the specified event type.\n    *\n    * @param {string} type The string type of the event.\n    * @return {boolean} Returns true if there is at least one listener for the specified event.\n    */\n\n\n  \tEventDispatcher.prototype.hasEventListener = function hasEventListener(type) {\n  \t\tvar listeners = this._listeners,\n  \t\t    captureListeners = this._captureListeners;\n  \t\treturn !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  \t};\n\n  \t/**\n    * Indicates whether there is at least one listener for the specified event type on this object or any of its\n    * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n    * specified type is dispatched from this object, it will trigger at least one listener.\n    *\n    * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n    * event flow for a listener, not just this object.\n    *\n    * @param {string} type The string type of the event.\n    * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n    */\n\n\n  \tEventDispatcher.prototype.willTrigger = function willTrigger(type) {\n  \t\tvar o = this;\n  \t\twhile (o) {\n  \t\t\tif (o.hasEventListener(type)) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t\to = o.parent;\n  \t\t}\n  \t\treturn false;\n  \t};\n\n  \t/**\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tEventDispatcher.prototype.toString = function toString() {\n  \t\treturn \"[\" + (this.constructor.name + this.name ? \" \" + this.name : \"\") + \"]\";\n  \t};\n\n  \t/**\n    * @private\n    * @param {Object|Event|string} eventObj\n    * @param {Object} eventPhase\n    */\n\n\n  \tEventDispatcher.prototype._dispatchEvent = function _dispatchEvent(eventObj, eventPhase) {\n  \t\tvar listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n  \t\tif (eventObj && listeners) {\n  \t\t\tvar arr = listeners[eventObj.type];\n  \t\t\tvar l = void 0;\n  \t\t\tif (!arr || (l = arr.length) === 0) {\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t\ttry {\n  \t\t\t\teventObj.currentTarget = this;\n  \t\t\t} catch (e) {}\n  \t\t\ttry {\n  \t\t\t\teventObj.eventPhase = eventPhase;\n  \t\t\t} catch (e) {}\n  \t\t\teventObj.removed = false;\n\n  \t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n  \t\t\tfor (var i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n  \t\t\t\tvar o = arr[i];\n  \t\t\t\tif (o.handleEvent) {\n  \t\t\t\t\to.handleEvent(eventObj);\n  \t\t\t\t} else {\n  \t\t\t\t\to(eventObj);\n  \t\t\t\t}\n  \t\t\t\tif (eventObj.removed) {\n  \t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n  \t\t\t\t\teventObj.removed = false;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \treturn EventDispatcher;\n  }();\n\n  /**\n   * @license uid\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /** @ignore */\n  var _nextId = 0;\n\n  /**\n   * Global utility for generating sequential unique ID numbers.\n   *\n   * @memberof easeljs\n   * @name easeljs.uid\n   * @example\n   * import { uid } from \"@createjs/easeljs\";\n   * var ids = [];\n   * while (ids.length <= 3) {\n   *   ids.push(uid());\n   * }\n   * // ids == [0, 1, 2, 3]\n   */\n  function uid() {\n    return _nextId++;\n  }\n\n  /**\n   * @license Point\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Represents a point on a 2 dimensional x / y coordinate system.\n   *\n   * @memberof easeljs\n   * @example\n   * let point = new Point(0, 100);\n   *\n   * @param {Number} [x] X position.\n   * @param {Number} [y] Y position.\n   */\n  var Point = function () {\n  \tfunction Point(x, y) {\n  \t\tclassCallCheck(this, Point);\n\n  \t\tthis.setValues(x, y);\n\n  \t\t// assigned in the setValues method.\n  \t\t/**\n     * X position.\n     * @property x\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Y position.\n     * @property y\n     * @type {Number}\n     */\n  \t}\n\n  \t/**\n    * Sets the specified values on this instance.\n    * @param {Number} [x=0] X position.\n    * @param {Number} [y=0] Y position.\n    * @return {easeljs.Point} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tPoint.prototype.setValues = function setValues() {\n  \t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  \t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  \t\tthis.x = x;\n  \t\tthis.y = y;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Copies all properties from the specified point to this point.\n    * @param {easeljs.Point} point The point to copy properties from.\n    * @return {easeljs.Point} This point. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tPoint.prototype.copy = function copy(point) {\n  \t\tthis.x = point.x;\n  \t\tthis.y = point.y;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a clone of the Point instance.\n    * @return {easeljs.Point} a clone of the Point instance.\n    */\n\n\n  \tPoint.prototype.clone = function clone() {\n  \t\treturn new Point(this.x, this.y);\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tPoint.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \" (x=\" + this.x + \" y=\" + this.y + \")]\";\n  \t};\n\n  \treturn Point;\n  }();\n\n  /**\n   * @license Matrix2D\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n   *\n   * <pre>\n   * This matrix can be visualized as:\n   *\n   * \t[ a  c  tx\n   * \t  b  d  ty\n   * \t  0  0  1  ]\n   *\n   * Note the locations of b and c.\n   * </pre>\n   *\n   * @param {Number} [a] Specifies the a property for the new matrix.\n   * @param {Number} [b] Specifies the b property for the new matrix.\n   * @param {Number} [c] Specifies the c property for the new matrix.\n   * @param {Number} [d] Specifies the d property for the new matrix.\n   * @param {Number} [tx] Specifies the tx property for the new matrix.\n   * @param {Number} [ty] Specifies the ty property for the new matrix.\n   */\n\n  var Matrix2D = function () {\n  \tfunction Matrix2D(a, b, c, d, tx, ty) {\n  \t\tclassCallCheck(this, Matrix2D);\n\n  \t\tthis.setValues(a, b, c, d, tx, ty);\n\n  \t\t// assigned in the setValues method.\n  \t\t/**\n     * Position (0, 0) in a 3x3 affine transformation matrix.\n     * @property a\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Position (0, 1) in a 3x3 affine transformation matrix.\n     * @property b\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Position (1, 0) in a 3x3 affine transformation matrix.\n     * @property c\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Position (1, 1) in a 3x3 affine transformation matrix.\n     * @property d\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Position (2, 0) in a 3x3 affine transformation matrix.\n     * @property tx\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Position (2, 1) in a 3x3 affine transformation matrix.\n     * @property ty\n     * @type {Number}\n     */\n  \t}\n\n  \t/**\n    * Sets the specified values on this instance.\n    * @param {Number} [a=1] Specifies the a property for the new matrix.\n    * @param {Number} [b=0] Specifies the b property for the new matrix.\n    * @param {Number} [c=0] Specifies the c property for the new matrix.\n    * @param {Number} [d=1] Specifies the d property for the new matrix.\n    * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n    * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n    * @return {Matrix2D} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tMatrix2D.prototype.setValues = function setValues() {\n  \t\tvar a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  \t\tvar b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  \t\tvar tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  \t\tvar ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  \t\t// don't forget to update docs in the constructor if these change:\n  \t\tthis.a = a;\n  \t\tthis.b = b;\n  \t\tthis.c = c;\n  \t\tthis.d = d;\n  \t\tthis.tx = tx;\n  \t\tthis.ty = ty;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Appends the specified matrix properties to this matrix. All parameters are required.\n    * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n    * @param {Number} a\n    * @param {Number} b\n    * @param {Number} c\n    * @param {Number} d\n    * @param {Number} tx\n    * @param {Number} ty\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.append = function append(a, b, c, d, tx, ty) {\n  \t\tvar a1 = this.a;\n  \t\tvar b1 = this.b;\n  \t\tvar c1 = this.c;\n  \t\tvar d1 = this.d;\n  \t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n  \t\t\tthis.a = a1 * a + c1 * b;\n  \t\t\tthis.b = b1 * a + d1 * b;\n  \t\t\tthis.c = a1 * c + c1 * d;\n  \t\t\tthis.d = b1 * c + d1 * d;\n  \t\t}\n  \t\tthis.tx = a1 * tx + c1 * ty + this.tx;\n  \t\tthis.ty = b1 * tx + d1 * ty + this.ty;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Prepends the specified matrix properties to this matrix.\n    * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n    * @param {Number} a\n    * @param {Number} b\n    * @param {Number} c\n    * @param {Number} d\n    * @param {Number} tx\n    * @param {Number} ty\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n  \tMatrix2D.prototype.prepend = function prepend(a, b, c, d, tx, ty) {\n  \t\tvar a1 = this.a;\n  \t\tvar c1 = this.c;\n  \t\tvar tx1 = this.tx;\n\n  \t\tthis.a = a * a1 + c * this.b;\n  \t\tthis.b = b * a1 + d * this.b;\n  \t\tthis.c = a * c1 + c * this.d;\n  \t\tthis.d = b * c1 + d * this.d;\n  \t\tthis.tx = a * tx1 + c * this.ty + tx;\n  \t\tthis.ty = b * tx1 + d * this.ty + ty;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Appends the specified matrix to this matrix.\n    * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n    * @param {easeljs.Matrix2D} matrix\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.appendMatrix = function appendMatrix(matrix) {\n  \t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  \t};\n\n  \t/**\n    * Prepends the specified matrix to this matrix.\n    * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n    *\n    * @example <caption>Calculate the combined transformation for a child object</caption>\n    * let o = displayObject;\n    * let mtx = o.getMatrix();\n    * while (o = o.parent) {\n    * \t // prepend each parent's transformation in turn:\n    * \t o.prependMatrix(o.getMatrix());\n    * }\n    *\n    * @param {easeljs.Matrix2D} matrix\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.prependMatrix = function prependMatrix(matrix) {\n  \t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  \t};\n\n  \t/**\n    * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n    *\n    * @example <caption>Generate a matrix representing the transformations of a display object</caption>\n    * let mtx = new Matrix2D();\n    * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n    *\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} scaleX\n    * @param {Number} scaleY\n    * @param {Number} rotation\n    * @param {Number} skewX\n    * @param {Number} skewY\n    * @param {Number} [regX]\n    * @param {Number} [regY]\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.appendTransform = function appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n  \t\tvar r = void 0,\n  \t\t    cos = void 0,\n  \t\t    sin = void 0;\n  \t\tif (rotation % 360) {\n  \t\t\tr = rotation * Matrix2D.DEG_TO_RAD;\n  \t\t\tcos = Math.cos(r);\n  \t\t\tsin = Math.sin(r);\n  \t\t} else {\n  \t\t\tcos = 1;\n  \t\t\tsin = 0;\n  \t\t}\n\n  \t\tif (skewX || skewY) {\n  \t\t\t// TODO: can this be combined into a single append operation?\n  \t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n  \t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n  \t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n  \t\t\tthis.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n  \t\t} else {\n  \t\t\tthis.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n  \t\t}\n\n  \t\tif (regX || regY) {\n  \t\t\t// append the registration offset:\n  \t\t\tthis.tx -= regX * this.a + regY * this.c;\n  \t\t\tthis.ty -= regX * this.b + regY * this.d;\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n    *\n    * Note that the above example would not account for {@link easeljs.DisplayObject#transformMatrix} values.\n    * See {@link easeljs.Matrix2D#prependMatrix} for an example that does.\n    *\n    * @example <caption>Calculate the combined transformation for a child object</caption>\n    * let o = displayObject;\n    * let mtx = new Matrix2D();\n    * do  {\n    * \t // prepend each parent's transformation in turn:\n    * \t mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n    * } while (o = o.parent);\n    *\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} scaleX\n    * @param {Number} scaleY\n    * @param {Number} rotation\n    * @param {Number} skewX\n    * @param {Number} skewY\n    * @param {Number} [regX]\n    * @param {Number} [regY]\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    */\n\n\n  \tMatrix2D.prototype.prependTransform = function prependTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n  \t\tvar r = void 0,\n  \t\t    cos = void 0,\n  \t\t    sin = void 0;\n  \t\tif (rotation % 360) {\n  \t\t\tr = rotation * Matrix2D.DEG_TO_RAD;\n  \t\t\tcos = Math.cos(r);\n  \t\t\tsin = Math.sin(r);\n  \t\t} else {\n  \t\t\tcos = 1;\n  \t\t\tsin = 0;\n  \t\t}\n\n  \t\tif (regX || regY) {\n  \t\t\t// prepend the registration offset:\n  \t\t\tthis.tx -= regX;this.ty -= regY;\n  \t\t}\n  \t\tif (skewX || skewY) {\n  \t\t\t// TODO: can this be combined into a single prepend operation?\n  \t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n  \t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n  \t\t\tthis.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n  \t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n  \t\t} else {\n  \t\t\tthis.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Applies a clockwise rotation transformation to the matrix.\n    * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.rotate = function rotate(angle) {\n  \t\tangle *= Matrix2D.DEG_TO_RAD;\n  \t\tvar cos = Math.cos(angle);\n  \t\tvar sin = Math.sin(angle);\n\n  \t\tvar a1 = this.a;\n  \t\tvar b1 = this.b;\n\n  \t\tthis.a = a1 * cos + this.c * sin;\n  \t\tthis.b = b1 * cos + this.d * sin;\n  \t\tthis.c = -a1 * sin + this.c * cos;\n  \t\tthis.d = -b1 * sin + this.d * cos;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Applies a skew transformation to the matrix.\n    * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n    * @param {Number} skewY The amount to skew vertically in degrees.\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tMatrix2D.prototype.skew = function skew(skewX, skewY) {\n  \t\tskewX *= Matrix2D.DEG_TO_RAD;\n  \t\tskewY *= Matrix2D.DEG_TO_RAD;\n  \t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Applies a scale transformation to the matrix.\n    * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n    * @param {Number} y The amount to scale vertically.\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.scale = function scale(x, y) {\n  \t\tthis.a *= x;\n  \t\tthis.b *= x;\n  \t\tthis.c *= y;\n  \t\tthis.d *= y;\n  \t\t//this.tx *= x;\n  \t\t//this.ty *= y;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Translates the matrix on the x and y axes.\n    * @param {Number} x\n    * @param {Number} y\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.translate = function translate(x, y) {\n  \t\tthis.tx += this.a * x + this.c * y;\n  \t\tthis.ty += this.b * x + this.d * y;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.identity = function identity() {\n  \t\tthis.a = this.d = 1;\n  \t\tthis.b = this.c = this.tx = this.ty = 0;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Inverts the matrix, causing it to perform the opposite transformation.\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n    */\n\n\n  \tMatrix2D.prototype.invert = function invert() {\n  \t\tvar a1 = this.a;\n  \t\tvar b1 = this.b;\n  \t\tvar c1 = this.c;\n  \t\tvar d1 = this.d;\n  \t\tvar tx1 = this.tx;\n  \t\tvar n = a1 * d1 - b1 * c1;\n\n  \t\tthis.a = d1 / n;\n  \t\tthis.b = -b1 / n;\n  \t\tthis.c = -c1 / n;\n  \t\tthis.d = a1 / n;\n  \t\tthis.tx = (c1 * this.ty - d1 * tx1) / n;\n  \t\tthis.ty = -(a1 * this.ty - b1 * tx1) / n;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns true if the matrix is an identity matrix.\n    * @return {Boolean}\n    */\n\n\n  \tMatrix2D.prototype.isIdentity = function isIdentity() {\n  \t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n  \t};\n\n  \t/**\n    * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n    * @param {easeljs.Matrix2D} matrix The matrix to compare.\n    * @return {Boolean}\n    */\n\n\n  \tMatrix2D.prototype.equals = function equals(matrix) {\n  \t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n  \t};\n\n  \t/**\n    * Transforms a point according to this matrix.\n    * @param {Number} x The x component of the point to transform.\n    * @param {Number} y The y component of the point to transform.\n    * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n    * @return {easeljs.Point} This matrix. Useful for chaining method calls.\n    */\n\n\n  \tMatrix2D.prototype.transformPoint = function transformPoint(x, y) {\n  \t\tvar pt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Point();\n\n  \t\tpt.x = x * this.a + y * this.c + this.tx;\n  \t\tpt.y = x * this.b + y * this.d + this.ty;\n  \t\treturn pt;\n  \t};\n\n  \t/**\n    * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n    * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n    * results.\n    * @param {Object} [target] The object to apply the transform properties to. If null, then a new object will be returned.\n    * @return {Object} The target, or a new generic object with the transform properties applied.\n   */\n\n\n  \tMatrix2D.prototype.decompose = function decompose() {\n  \t\tvar target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  \t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n  \t\ttarget.x = this.tx;\n  \t\ttarget.y = this.ty;\n  \t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n  \t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n  \t\tvar skewX = Math.atan2(-this.c, this.d);\n  \t\tvar skewY = Math.atan2(this.b, this.a);\n\n  \t\tvar delta = Math.abs(1 - skewX / skewY);\n  \t\tif (delta < 0.00001) {\n  \t\t\t// effectively identical, can use rotation:\n  \t\t\ttarget.rotation = skewY / Matrix2D.DEG_TO_RAD;\n  \t\t\tif (this.a < 0 && this.d >= 0) {\n  \t\t\t\ttarget.rotation += target.rotation <= 0 ? 180 : -180;\n  \t\t\t}\n  \t\t\ttarget.skewX = target.skewY = 0;\n  \t\t} else {\n  \t\t\ttarget.skewX = skewX / Matrix2D.DEG_TO_RAD;\n  \t\t\ttarget.skewY = skewY / Matrix2D.DEG_TO_RAD;\n  \t\t}\n  \t\treturn target;\n  \t};\n\n  \t/**\n    * Copies all properties from the specified matrix to this matrix.\n    * @param {easeljs.Matrix2D} matrix The matrix to copy properties from.\n    * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tMatrix2D.prototype.copy = function copy(matrix) {\n  \t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  \t};\n\n  \t/**\n    * Returns a clone of the Matrix2D instance.\n    * @return {easeljs.Matrix2D} a clone of the Matrix2D instance.\n    */\n\n\n  \tMatrix2D.prototype.clone = function clone() {\n  \t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tMatrix2D.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \" (a=\" + this.a + \" b=\" + this.b + \" c=\" + this.c + \" d=\" + this.d + \" tx=\" + this.tx + \" ty=\" + this.ty + \")]\";\n  \t};\n\n  \treturn Matrix2D;\n  }();\n  Matrix2D.DEG_TO_RAD = Math.PI / 180;\n  /**\n   * An identity matrix, representing a null transformation.\n   * @static\n   * @type {easeljs.Matrix2D}\n   * @readonly\n   */\n  Matrix2D.identity = new Matrix2D();\n\n  /**\n   * @license DisplayProps\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Used for calculating and encapsulating display related properties.\n   * @memberof easeljs\n   * @param {Number} [visible] Visible value.\n   * @param {Number} [alpha] Alpha value.\n   * @param {Number} [shadow] A Shadow instance or null.\n   * @param {Number} [compositeOperation] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n   */\n\n  var DisplayProps = function () {\n  \tfunction DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n  \t\tclassCallCheck(this, DisplayProps);\n\n  \t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n  \t\t// assigned in the setValues method.\n  \t\t/**\n     * Property representing the alpha that will be applied to a display object.\n     * @property alpha\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Property representing the shadow that will be applied to a display object.\n     * @property shadow\n     * @type {easeljs.Shadow}\n     */\n\n  \t\t/**\n     * Property representing the compositeOperation that will be applied to a display object.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing}\n     * @property compositeOperation\n     * @type {String}\n     */\n\n  \t\t/**\n     * Property representing the value for visible that will be applied to a display object.\n     * @property visible\n     * @type {Boolean}\n     */\n\n  \t\t/**\n     * The transformation matrix that will be applied to a display object.\n     * @property matrix\n     * @type {easeljs.Matrix2D}\n     */\n  \t}\n\n  \t/**\n    * Reinitializes the instance with the specified values.\n    * @param {Number} [visible=true] Visible value.\n    * @param {Number} [alpha=1] Alpha value.\n    * @param {Number} [shadow] A Shadow instance or null.\n    * @param {Number} [compositeOperation] A compositeOperation value or null.\n    * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n    * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tDisplayProps.prototype.setValues = function setValues() {\n  \t\tvar visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  \t\tvar alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  \t\tvar shadow = arguments[2];\n  \t\tvar compositeOperation = arguments[3];\n  \t\tvar matrix = arguments[4];\n\n  \t\tthis.visible = visible;\n  \t\tthis.alpha = alpha;\n  \t\tthis.shadow = shadow;\n  \t\tthis.compositeOperation = compositeOperation;\n  \t\tthis.matrix = matrix || this.matrix && this.matrix.identity() || new Matrix2D();\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n    * @param {Boolean} visible desired visible value\n    * @param {Number} alpha desired alpha value\n    * @param {easeljs.Shadow} shadow desired shadow value\n    * @param {String} compositeOperation desired composite operation value\n    * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n    * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tDisplayProps.prototype.append = function append(visible, alpha, shadow, compositeOperation, matrix) {\n  \t\tthis.alpha *= alpha;\n  \t\tthis.shadow = shadow || this.shadow;\n  \t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n  \t\tthis.visible = this.visible && visible;\n  \t\tmatrix && this.matrix.appendMatrix(matrix);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n    * For example, to get the combined display properties that would be applied to a child, you could use:\n    *\n    * @example\n    * let o = displayObject;\n    * let props = new DisplayProps();\n    * do {\n    * \t // prepend each parent's props in turn:\n    * \t props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n    * } while (o = o.parent);\n    *\n    * @param {Boolean} visible desired visible value\n    * @param {Number} alpha desired alpha value\n    * @param {easeljs.Shadow} shadow desired shadow value\n    * @param {String} compositeOperation desired composite operation value\n    * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n    * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tDisplayProps.prototype.prepend = function prepend(visible, alpha, shadow, compositeOperation, matrix) {\n  \t\tthis.alpha *= alpha;\n  \t\tthis.shadow = this.shadow || shadow;\n  \t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n  \t\tthis.visible = this.visible && visible;\n  \t\tmatrix && this.matrix.prependMatrix(matrix);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Resets this instance and its matrix to default values.\n    * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tDisplayProps.prototype.identity = function identity() {\n  \t\tthis.visible = true;\n  \t\tthis.alpha = 1;\n  \t\tthis.shadow = this.compositeOperation = null;\n  \t\tthis.matrix.identity();\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n    * @return {easeljs.DisplayProps} a clone of the DisplayProps instance.\n    */\n\n\n  \tDisplayProps.prototype.clone = function clone() {\n  \t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n  \t};\n\n  \treturn DisplayProps;\n  }();\n\n  /**\n   * @license Rectangle\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n   * Used by {@link easeljs.DisplayObjects#getBounds}.\n   *\n   * @memberof easeljs\n   * @example\n   * let rect = new Rectangle(0, 0, 100, 100);\n   *\n   * @param {Number} [x] X position.\n   * @param {Number} [y] Y position.\n   * @param {Number} [width] The width of the Rectangle.\n   * @param {Number} [height] The height of the Rectangle.\n   */\n  var Rectangle = function () {\n  \tfunction Rectangle(x, y, width, height) {\n  \t\tclassCallCheck(this, Rectangle);\n\n  \t\tthis.setValues(x, y, width, height);\n\n  \t\t// assigned in the setValues method.\n  \t\t/**\n     * X position.\n     * @property x\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Y position.\n     * @property y\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Width.\n     * @property width\n     * @type {Number}\n     */\n\n  \t\t/**\n     * Height.\n     * @property height\n     * @type {Number}\n     */\n  \t}\n\n  \t/**\n    * Sets the specified values on this instance.\n    * @param {Number} [x=0] X position.\n    * @param {Number} [y=0] Y position.\n    * @param {Number} [width=0] The width of the Rectangle.\n    * @param {Number} [height=0] The height of the Rectangle.\n    * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tRectangle.prototype.setValues = function setValues() {\n  \t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  \t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  \t\t// don't forget to update docs in the constructor if these change:\n  \t\tthis.x = x;\n  \t\tthis.y = y;\n  \t\tthis.width = width;\n  \t\tthis.height = height;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Extends the rectangle's bounds to include the described point or rectangle.\n    * @param {Number} x X position of the point or rectangle.\n    * @param {Number} y Y position of the point or rectangle.\n    * @param {Number} [width=0] The width of the rectangle.\n    * @param {Number} [height=0] The height of the rectangle.\n    * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tRectangle.prototype.extend = function extend(x, y) {\n  \t\tvar width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  \t\tif (x + width > this.x + this.width) {\n  \t\t\tthis.width = x + width - this.x;\n  \t\t}\n  \t\tif (y + height > this.y + this.height) {\n  \t\t\tthis.height = y + height - this.y;\n  \t\t}\n  \t\tif (x < this.x) {\n  \t\t\tthis.width += this.x - x;this.x = x;\n  \t\t}\n  \t\tif (y < this.y) {\n  \t\t\tthis.height += this.y - y;this.y = y;\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Adds the specified padding to the rectangle's bounds.\n    * @param {Number} top\n    * @param {Number} left\n    * @param {Number} bottom\n    * @param {Number} right\n    * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tRectangle.prototype.pad = function pad(top, left, bottom, right) {\n  \t\tthis.x -= left;\n  \t\tthis.y -= top;\n  \t\tthis.width += left + right;\n  \t\tthis.height += top + bottom;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Copies all properties from the specified rectangle to this rectangle.\n    * @param {easeljs.Rectangle} rectangle The rectangle to copy properties from.\n    * @return {easeljs.Rectangle} This rectangle. Useful for chaining method calls.\n    * @chainable\n   */\n\n\n  \tRectangle.prototype.copy = function copy(rect) {\n  \t\treturn this.setValues(rect.x, rect.y, rect.width, rect.height);\n  \t};\n\n  \t/**\n    * Returns true if this rectangle fully encloses the described point or rectangle.\n    * @param {Number} x X position of the point or rectangle.\n    * @param {Number} y Y position of the point or rectangle.\n    * @param {Number} [width=0] The width of the rectangle.\n    * @param {Number} [height=0] The height of the rectangle.\n    * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n   */\n\n\n  \tRectangle.prototype.contains = function contains(x, y) {\n  \t\tvar width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  \t\treturn x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;\n  \t};\n\n  \t/**\n    * Returns a new rectangle which contains this rectangle and the specified rectangle.\n    * @param {easeljs.Rectangle} rect The rectangle to calculate a union with.\n    * @return {easeljs.Rectangle} A new rectangle describing the union.\n   */\n\n\n  \tRectangle.prototype.union = function union(rect) {\n  \t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n  \t};\n\n  \t/**\n    * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n    * or null if they do not intersect.\n    * @param {easeljs.Rectangle} rect The rectangle to calculate an intersection with.\n    * @return {easeljs.Rectangle} A new rectangle describing the intersection or null.\n   */\n\n\n  \tRectangle.prototype.intersection = function intersection(rect) {\n  \t\tvar x1 = rect.x,\n  \t\t    y1 = rect.y,\n  \t\t    x2 = x1 + rect.width,\n  \t\t    y2 = y1 + rect.height;\n  \t\tif (this.x > x1) {\n  \t\t\tx1 = this.x;\n  \t\t}\n  \t\tif (this.y > y1) {\n  \t\t\ty1 = this.y;\n  \t\t}\n  \t\tif (this.x + this.width < x2) {\n  \t\t\tx2 = this.x + this.width;\n  \t\t}\n  \t\tif (this.y + this.height < y2) {\n  \t\t\ty2 = this.y + this.height;\n  \t\t}\n  \t\treturn x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n  \t};\n\n  \t/**\n    * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n    * @param {easeljs.Rectangle} rect The rectangle to compare.\n    * @return {Boolean} True if the rectangles intersect.\n   */\n\n\n  \tRectangle.prototype.intersects = function intersects(rect) {\n  \t\treturn rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;\n  \t};\n\n  \t/**\n    * Returns true if the width or height are equal or less than 0.\n    * @return {Boolean} True if the rectangle is empty.\n   */\n\n\n  \tRectangle.prototype.isEmpty = function isEmpty() {\n  \t\treturn this.width <= 0 || this.height <= 0;\n  \t};\n\n  \t/**\n    * Returns a clone of the Rectangle instance.\n    * @return {easeljs.Rectangle} a clone of the Rectangle instance.\n    */\n\n\n  \tRectangle.prototype.clone = function clone() {\n  \t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tRectangle.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \" (x=\" + this.x + \" y=\" + this.y + \" width=\" + this.width + \" height=\" + this.height + \")]\";\n  \t};\n\n  \treturn Rectangle;\n  }();\n\n  /**\n   * @license Filter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n   * the {@link easeljs.DisplayObject#cache} method. If an object changes, please cache it again, or use\n   * {@link easeljs.DisplayObject#updateCache}. Note that the filters must be applied before caching.\n   *\n   * Note that each filter can implement a {@link easeljs.Filter#getBounds} method, which returns the\n   * margins that need to be applied in order to fully display the filter. For example, the {@link easeljs.BlurFilter}\n   * will cause an object to feather outwards, resulting in a margin around the shape.\n   *\n   * <h4>EaselJS Filters</h4>\n   * EaselJS comes with a number of pre-built filters:\n   * <ul>\n   *   <li>{@link easeljs.AlphaMapFilter}: Map a greyscale image to the alpha channel of a display object</li>\n   *   <li>{@link easeljs.AlphaMaskFilter}: Map an image's alpha channel to the alpha channel of a display object</li>\n   *   <li>{@link easeljs.BlurFilter}: Apply vertical and horizontal blur to a display object</li>\n   *   <li>{@link easeljs.ColorFilter}: Color transform a display object</li>\n   *   <li>{@link easeljs.ColorMatrixFilter}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n   * </ul>\n   *\n   * @memberof easeljs\n   * @example\n   * shape.filters = [\n   *   new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n   *   new createjs.BlurFilter(5, 5, 10)\n   * ];\n   * shape.cache(0, 0, 100, 100);\n   */\n  var Filter = function () {\n  \tfunction Filter() {\n  \t\tclassCallCheck(this, Filter);\n\n  \t\t/**\n     * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n     * @type {Boolean}\n     * @default false\n     */\n  \t\tthis.usesContext = false;\n\n  \t\t/**\n     * Another filter that is required to act as part of this filter and created and managed under the hood.\n     * @private\n     * @type {easeljs.Filter}\n     * @default null\n     */\n  \t\tthis._multiPass = null;\n\n  \t\t/**\n     * Pre-processing shader code, will be parsed before being fed in.\n     * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n  \t\tthis.VTX_SHADER_BODY = null;\n\n  \t\t/**\n     * Pre-processing shader code, will be parsed before being fed in.\n     * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n  \t\tthis.FRAG_SHADER_BODY = null;\n  \t}\n\n  \t/**\n    * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n    * @abstract\n    * @param {easeljs.Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n    * @return {easeljs.Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n    */\n\n\n  \tFilter.prototype.getBounds = function getBounds(rect) {};\n\n  \t/**\n    * @virtual\n    * @abstract\n    * @param {WebGLContext} gl The context associated with the stage performing the render.\n    * @param {easeljs.StageGL} stage The stage instance that will be rendering.\n    * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n    */\n\n\n  \tFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {};\n\n  \t/**\n    * Applies the filter to the specified context.\n    * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n    * @param {Number} x The x position to use for the source rect.\n    * @param {Number} y The y position to use for the source rect.\n    * @param {Number} width The width to use for the source rect.\n    * @param {Number} height The height to use for the source rect.\n    * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n    * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n    * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n    * @return {Boolean} If the filter was applied successfully.\n    */\n\n\n  \tFilter.prototype.applyFilter = function applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n  \t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n  \t\ttargetCtx = targetCtx || ctx;\n  \t\tif (targetX == null) {\n  \t\t\ttargetX = x;\n  \t\t}\n  \t\tif (targetY == null) {\n  \t\t\ttargetY = y;\n  \t\t}\n  \t\ttry {\n  \t\t\tvar imageData = ctx.getImageData(x, y, width, height);\n  \t\t\tif (this._applyFilter(imageData)) {\n  \t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t} catch (e) {}\n  \t\treturn false;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tFilter.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * Returns a clone of this Filter instance.\n    * @return {easeljs.Filter} A clone of the current Filter instance.\n    */\n\n\n  \tFilter.prototype.clone = function clone() {\n  \t\treturn new Filter();\n  \t};\n\n  \t/**\n    * @abstract\n    * @param {ImageData} imageData Target ImageData instance.\n    * @return {Boolean}\n    */\n\n\n  \tFilter.prototype._applyFilter = function _applyFilter(imageData) {};\n\n  \treturn Filter;\n  }();\n\n  /**\n   * @license BitmapCache\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n   * an object. This information and functionality used to be located on a {@link easeljs.DisplayObject#cache}\n   * method in {@link easeljs.DisplayObject}, but was moved to its own class.\n   *\n   * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n   * of the object. The actual cache itself is still stored on the target with the {@link easeljs.DisplayObject#cacheCanvas}.\n   *\n   * Working with a singular image like a {@link easeljs.Bitmap}, there is little benefit to performing\n   * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n   * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n   * will not visually update until explicitly told to do so with a call to {@link easeljs.Stage#update},\n   * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n   * Caches are best used when updates will be sparse.\n   *\n   * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n   * The BitmapCache is also responsible for applying filters to objects, and reads each {@link easeljs.Filter}.\n   * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n   * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n   * when possible.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   */\n\n  var BitmapCache = function (_Filter) {\n  \tinherits(BitmapCache, _Filter);\n\n  \tfunction BitmapCache() {\n  \t\tclassCallCheck(this, BitmapCache);\n\n  \t\t/**\n     * Width of the cache relative to the target object.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this.width = undefined;\n\n  \t\t/**\n     * Height of the cache relative to the target object.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n  \t\t_this.height = undefined;\n\n  \t\t/**\n     * Horizontal position of the cache relative to the target's origin.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n  \t\t_this.x = undefined;\n\n  \t\t/**\n     * Vertical position of the cache relative to target's origin.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n  \t\t_this.y = undefined;\n\n  \t\t/**\n     * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n     * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n     * with decreased scales can save on rendering performance.\n     * @protected\n     * @type {Number}\n     * @default 1\n     */\n  \t\t_this.scale = 1;\n\n  \t\t/**\n     * The relative offset of the {@link easeljs.BitmapCache#x} position, used for drawing\n     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.offX = 0;\n\n  \t\t/**\n     * The relative offset of the {@link easeljs.BitmapCache#y} position, used for drawing\n     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.offY = 0;\n\n  \t\t/**\n     * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n     * useful to see if a cache has been updated.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.cacheID = 0;\n\n  \t\t/**\n     * Relative offset of the x position, used for drawing the cache into other scenes.\n     * Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     * @todo Is this description right? Its the same as offX.\n     */\n  \t\t_this._filterOffX = 0;\n\n  \t\t/**\n     * Relative offset of the y position, used for drawing into the cache into other scenes.\n     * Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     * @todo Is this description right? Its the same as offY.\n     */\n  \t\t_this._filterOffY = 0;\n\n  \t\t/**\n     * The cacheID when a DataURL was requested.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this._cacheDataURLID = 0;\n\n  \t\t/**\n     * The cache's DataURL, generated on-demand using the getter.\n     * @protected\n     * @type {String}\n     * @default null\n     */\n  \t\t_this._cacheDataURL = null;\n\n  \t\t/**\n     * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the actual value.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this._drawWidth = 0;\n\n  \t\t/**\n     * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the actual value.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this._drawHeight = 0;\n\n  \t\t/**\n     * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation.\n     * @protected\n     * @type {easeljs.Rectangle}\n     * @default easeljs.Rectangle\n     */\n  \t\t_this._boundRect = new Rectangle();\n\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes bounds.\n    * @param {easeljs.DisplayObject} target The object to check the filter bounds for.\n    * @param {easeljs.Rectangle} [output] Calculated bounds will be applied to this rect.\n    * @return {easeljs.Rectangle}\n    * @static\n    */\n\n\n  \tBitmapCache.getFilterBounds = function getFilterBounds(target) {\n  \t\tvar output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Rectangle();\n\n  \t\tvar filters = target.filters;\n  \t\tvar filterCount = filters && filters.length;\n  \t\tif (!!filterCount <= 0) {\n  \t\t\treturn output;\n  \t\t}\n\n  \t\tfor (var i = 0; i < filterCount; i++) {\n  \t\t\tvar f = filters[i];\n  \t\t\tif (!f || !f.getBounds) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tvar test = f.getBounds();\n  \t\t\tif (!test) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (i == 0) {\n  \t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n  \t\t\t} else {\n  \t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n  \t\t\t}\n  \t\t}\n\n  \t\treturn output;\n  \t};\n\n  \t/**\n    * Directly called via {@link easeljs.DisplayObject#cache}. Creates and sets properties needed\n    * for a cache to function, and performs the initial update.\n    * @param {easeljs.DisplayObject} target The DisplayObject this cache is linked to.\n    * @param {Number} [x=0] The x coordinate origin for the cache region.\n    * @param {Number} [y=0] The y coordinate origin for the cache region.\n    * @param {Number} [width=1] The width of the cache region.\n    * @param {Number} [height=1] The height of the cache region.\n    * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n    * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n    * and rotate cached elements with greater fidelity.\n    * @param {Object} [options] When using things like {@link easeljs.StageGL} there may be\n    * extra caching opportunities or requirements.\n    */\n\n\n  \tBitmapCache.prototype.define = function define(target) {\n  \t\tvar x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  \t\tvar height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  \t\tvar scale = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  \t\tvar options = arguments[6];\n\n  \t\tif (!target) {\n  \t\t\tthrow \"No symbol to cache\";\n  \t\t}\n  \t\tthis._options = options;\n  \t\tthis._useWebGL = options !== undefined;\n  \t\tthis.target = target;\n\n  \t\tthis.width = width >= 1 ? width : 1;\n  \t\tthis.height = height >= 1 ? height : 1;\n  \t\tthis.x = x;\n  \t\tthis.y = y;\n  \t\tthis.scale = scale;\n\n  \t\tthis.update();\n  \t};\n\n  \t/**\n    * Directly called via {@link easeljs.DisplayObject#updateCache}, but also internally. This\n    * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n    * full details of each behaviour, check the protected functions {@link easeljs.BitmapCache#_updateSurface}\n    * and {@link easeljs.BitmapCache#_drawToCache} respectively.\n    * @param {String} [compositeOperation] The DisplayObject this cache is linked to.\n    */\n\n\n  \tBitmapCache.prototype.update = function update(compositeOperation) {\n  \t\tif (!this.target) {\n  \t\t\tthrow \"define() must be called before update()\";\n  \t\t}\n\n  \t\tvar filterBounds = BitmapCache.getFilterBounds(this.target);\n  \t\tvar surface = this.target.cacheCanvas;\n\n  \t\tthis._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n  \t\tthis._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n\n  \t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n  \t\t\tthis._updateSurface();\n  \t\t}\n\n  \t\tthis._filterOffX = filterBounds.x;\n  \t\tthis._filterOffY = filterBounds.y;\n  \t\tthis.offX = this.x * this.scale + this._filterOffX;\n  \t\tthis.offY = this.y * this.scale + this._filterOffY;\n\n  \t\tthis._drawToCache(compositeOperation);\n\n  \t\tthis.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n  \t};\n\n  \t/**\n    * Reset and release all the properties and memory associated with this cache.\n    */\n\n\n  \tBitmapCache.prototype.release = function release() {\n  \t\tvar stage = this.target.stage;\n  \t\tif (this._useWebGL && this._webGLCache) {\n  \t\t\t// if it isn't cache controlled clean up after yourself\n  \t\t\tif (!this._webGLCache.isCacheControlled) {\n  \t\t\t\tif (this.__lastRT) {\n  \t\t\t\t\tthis.__lastRT = undefined;\n  \t\t\t\t}\n  \t\t\t\tif (this.__rtA) {\n  \t\t\t\t\tthis._webGLCache._killTextureObject(this.__rtA);\n  \t\t\t\t}\n  \t\t\t\tif (this.__rtB) {\n  \t\t\t\t\tthis._webGLCache._killTextureObject(this.__rtB);\n  \t\t\t\t}\n  \t\t\t\tif (this.target && this.target.cacheCanvas) {\n  \t\t\t\t\tthis._webGLCache._killTextureObject(this.target.cacheCanvas);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n  \t\t\tthis._webGLCache = false;\n  \t\t} else if (stage instanceof StageGL) {\n  \t\t\tstage.releaseTexture(this.target.cacheCanvas);\n  \t\t}\n  \t\tthis.target = this.target.cacheCanvas = null;\n  \t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n  \t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n  \t\tthis.scale = 1;\n  \t};\n\n  \t/**\n    * Returns a data URL for the cache, or `null` if this display object is not cached.\n    * Uses {@link easeljs.BitmapCache#cacheID} to ensure a new data URL is not generated if the\n    * cache has not changed.\n    * @return {String} The image data url for the cache.\n    */\n\n\n  \tBitmapCache.prototype.getCacheDataURL = function getCacheDataURL() {\n  \t\tvar cacheCanvas = this.target && this.target.cacheCanvas;\n  \t\tif (!cacheCanvas) {\n  \t\t\treturn null;\n  \t\t}\n  \t\tif (this.cacheID != this._cacheDataURLID) {\n  \t\t\tthis._cacheDataURLID = this.cacheID;\n  \t\t\tthis._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null; // incase function is\n  \t\t}\n  \t\treturn this._cacheDataURL;\n  \t};\n\n  \t/**\n    * Use context2D drawing commands to display the cache canvas being used.\n    * @param {CanvasRenderingContext2D} ctx The context to draw into.\n    * @return {Boolean} Whether the draw was handled successfully.\n    */\n\n\n  \tBitmapCache.prototype.draw = function draw(ctx) {\n  \t\tif (!this.target) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale);\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * Determine the bounds of the shape in local space.\n    * @returns {easeljs.Rectangle}\n    */\n\n\n  \tBitmapCache.prototype.getBounds = function getBounds() {\n  \t\tvar scale = this.scale;\n  \t\treturn this._boundRect.setValue(this._filterOffX / scale, this._filterOffY / scale, this.width / scale, this.height / scale);\n  \t};\n\n  \t/**\n    * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n    * create and or size the canvas as needed.\n    * @protected\n    */\n\n\n  \tBitmapCache.prototype._updateSurface = function _updateSurface() {\n  \t\tvar surface = void 0;\n  \t\tif (!this._useWebGL) {\n  \t\t\tsurface = this.target.cacheCanvas;\n  \t\t\t// create it if it's missing\n  \t\t\tif (!surface) {\n  \t\t\t\tsurface = this.target.cacheCanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  \t\t\t}\n  \t\t\t// now size it\n  \t\t\tsurface.width = this._drawWidth;\n  \t\t\tsurface.height = this._drawHeight;\n  \t\t\t// skip the webgl-only updates\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// create it if it's missing\n  \t\tif (!this._webGLCache) {\n  \t\t\tif (this._options.useGL === \"stage\") {\n  \t\t\t\tif (!(this.target.stage != null && this.target.stage.isWebGL)) {\n  \t\t\t\t\tthrow \"Cannot use 'stage' for cache because the object's parent stage is \" + (this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\");\n  \t\t\t\t}\n  \t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n  \t\t\t\tthis._webGLCache = this.target.stage;\n  \t\t\t} else if (this._options.useGL === \"new\") {\n  \t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n  \t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, { antialias: true, transparent: true, autoPurge: -1 });\n  \t\t\t\tthis._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n  \t\t\t} else {\n  \t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n  \t\t\t}\n  \t\t}\n\n  \t\t// now size render surfaces\n  \t\tvar stageGL = this._webGLCache;\n  \t\tsurface = this.target.cacheCanvas;\n\n  \t\t// if we have a dedicated stage we've gotta size it\n  \t\tif (stageGL.isCacheControlled) {\n  \t\t\tsurface.width = this._drawWidth;\n  \t\t\tsurface.height = this._drawHeight;\n  \t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n  \t\t}\n  \t\tif (this.target.filters) {\n  \t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n  \t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n  \t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n  \t\t} else if (!stageGL.isCacheControlled) {\n  \t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n  \t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n  \t\t}\n  \t};\n\n  \t/**\n    * Perform the cache draw out for context 2D now that the setup properties have been performed.\n    * @protected\n    */\n\n\n  \tBitmapCache.prototype._drawToCache = function _drawToCache(compositeOperation) {\n  \t\tvar target = this.target;\n  \t\tvar surface = target.cacheCanvas;\n  \t\tvar webGL = this._webGLCache;\n\n  \t\tif (!this._useWebGL || !webGL) {\n  \t\t\tvar ctx = surface.getContext(\"2d\");\n\n  \t\t\tif (!compositeOperation) {\n  \t\t\t\tctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n  \t\t\t}\n\n  \t\t\tctx.save();\n  \t\t\tctx.globalCompositeOperation = compositeOperation;\n  \t\t\tctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n  \t\t\tctx.translate(-this.x, -this.y);\n  \t\t\ttarget.draw(ctx, true);\n  \t\t\tctx.restore();\n\n  \t\t\tif (target.filters && target.filters.length) {\n  \t\t\t\tthis._applyFilters(target);\n  \t\t\t}\n  \t\t\tsurface._invalid = true;\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n  \t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n  \t\tsurface = this.target.cacheCanvas;\n  \t\tsurface.width = this._drawWidth;\n  \t\tsurface.height = this._drawHeight;\n  \t\tsurface._invalid = true;\n  \t};\n\n  \t/**\n    * Work through every filter and apply its individual transformation to it.\n    * @protected\n    */\n\n\n  \tBitmapCache.prototype._applyFilters = function _applyFilters() {\n  \t\tvar surface = this.target.cacheCanvas;\n  \t\tvar filters = this.target.filters;\n\n  \t\tvar w = this._drawWidth;\n  \t\tvar h = this._drawHeight;\n\n  \t\t// setup\n  \t\tvar data = surface.getContext(\"2d\").getImageData(0, 0, w, h);\n\n  \t\t// apply\n  \t\tvar l = filters.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tfilters[i]._applyFilter(data);\n  \t\t}\n\n  \t\t//done\n  \t\tsurface.getContext(\"2d\").putImageData(data, 0, 0);\n  \t};\n\n  \treturn BitmapCache;\n  }(Filter);\n\n  /**\n   * @license DisplayObject\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n   * {@link easeljs.Container}, {@link easeljs.Bitmap}, and {@link easeljs.Shape}.\n   * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n   * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n   * caching, and mouse handlers.\n   *\n   * @memberof easeljs\n   * @extends EventDispatcher\n   */\n\n  var DisplayObject = function (_EventDispatcher) {\n  \tinherits(DisplayObject, _EventDispatcher);\n\n  \tfunction DisplayObject() {\n  \t\tclassCallCheck(this, DisplayObject);\n\n  \t\t/**\n     * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n     * @type {Number}\n     * @default 1\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _EventDispatcher.call(this));\n\n  \t\t_this.alpha = 1;\n\n  \t\t/**\n     * If a cache is active, this returns the canvas that holds the image of this display object.\n     * Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n     * @see {@link easeljs.DisplayObject#cache}\n     * @type {HTMLCanvasElement | Object}\n     * @default null\n     * @readonly\n     */\n  \t\t_this.cacheCanvas = null;\n\n  \t\t/**\n     * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties.\n     * @see {@link easeljs.BitmapCache}\n     * @type {easeljs.BitmapCache}\n     * @default null\n     * @readonly\n     */\n  \t\t_this.bitmapCache = null;\n\n  \t\t/**\n     * Unique ID for this display object. Makes display objects easier for some uses.\n     * @type {Number}\n     */\n  \t\t_this.id = uid();\n\n  \t\t/**\n     * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n     * of a {@link easeljs.Container} will cause events on the Container to not fire when that child is\n     * clicked. Setting this property to `false` does not prevent the {@link easeljs.Container#getObjectsUnderPoint}\n     * method from returning the child.\n     *\n     * <strong>Note:</strong> In EaselJS 0.7.0, the `mouseEnabled` property will not work properly with nested Containers.\n     *\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.mouseEnabled = true;\n\n  \t\t/**\n     * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n     * @type Boolean\n     * @default true\n     */\n  \t\t_this.tickEnabled = true;\n\n  \t\t/**\n     * An optional name for this display object. Included in {@link easeljs.DisplayObject#toString}. Useful for debugging.\n     * @type {String}\n     * @default null\n     */\n  \t\t_this.name = null;\n\n  \t\t/**\n     * A reference to the {@link easeljs.Container} or {@link easeljs.Stage} object that\n     * contains this display object, or null if it has not been added to one.\n     * @type {easeljs.Container}\n     * @default null\n     * @readonly\n     */\n  \t\t_this.parent = null;\n\n  \t\t/**\n     * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n     * around its center, you would set regX and {@link easeljs.DisplayObject#regY} to 50.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.regX = 0;\n\n  \t\t/**\n     * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n     * its center, you would set {@link easeljs.DisplayObject#regX} and regY to 50.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.regY = 0;\n\n  \t\t/**\n     * The rotation in degrees for this display object.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.rotation = 0;\n\n  \t\t/**\n     * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n     * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n     * @type {Number}\n     * @default 1\n     */\n  \t\t_this.scaleX = 1;\n\n  \t\t/**\n     * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n     * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n     * @type {Number}\n     * @default 1\n     */\n  \t\t_this.scaleY = 1;\n\n  \t\t/**\n     * The factor to skew this display object horizontally.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.skewX = 0;\n\n  \t\t/**\n     * The factor to skew this display object vertically.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.skewY = 0;\n\n  \t\t/**\n     * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n     * null, this property is inherited from the parent container.\n     * @type {easeljs.Shadow}\n     * @default null\n     */\n  \t\t_this.shadow = null;\n\n  \t\t/**\n     * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n     * {@link easeljs.Stage#getObjectsUnderPoint} method.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.visible = true;\n\n  \t\t/**\n     * The x (horizontal) position of the display object, relative to its parent.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.x = 0;\n\n  \t\t/**\n     * The y (vertical) position of the display object, relative to its parent.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.y = 0;\n\n  \t\t/**\n     * If set, defines the transformation for this display object, overriding all other transformation properties\n     * (x, y, rotation, scale, skew).\n     * @type {easeljs.Matrix2D}\n     * @default null\n     */\n  \t\t_this.transformMatrix = null;\n\n  \t\t/**\n     * The composite operation indicates how the pixels of this display object will be composited with the elements\n     * behind it. If `null`, this property is inherited from the parent container.\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n     * @type {String}\n     * @default null\n     */\n  \t\t_this.compositeOperation = null;\n\n  \t\t/**\n     * Indicates whether the display object should be drawn to a whole pixel when {@link easeljs.Stage#snapToPixelEnabled} is true.\n     * To enable/disable snapping on whole categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.snapToPixel = true;\n\n  \t\t/**\n     * An array of Filter objects to apply to this display object. Filters are only applied / updated when {@link easeljs.DisplayObject#cache}\n     * or {@link easeljs.DisplayObject#updateCache} is called on the display object, and only apply to the area that is cached.\n     * @type {Array<easeljs.Filter>}\n     * @default null\n     */\n  \t\t_this.filters = null;\n\n  \t\t/**\n     * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n     * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n     * @type {easeljs.Shape}\n     * @default null\n     */\n  \t\t_this.mask = null;\n\n  \t\t/**\n     * A display object that will be tested when checking mouse interactions or testing {@link easeljs.Container#getObjectsUnderPoint}.\n     * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n     * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n     * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n     * ancestors (parents).\n     *\n     * If set on a {@link easeljs.Container}, children of the Container will not receive mouse events.\n     * This is similar to setting {@link easeljs.DisplayObject#mouseChildren} to false.\n     *\n     * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {@link easeljs.Stage}.\n     *\n     * @type {easeljs.DisplayObject}\n     * @default null\n     */\n  \t\t_this.hitArea = null;\n\n  \t\t/**\n     * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n     * object. You must enable mouseover events using the {@link easeljs.Stage#enableMouseOver} method to\n     * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n     *\n     * @type {String}\n     * @default null\n     */\n  \t\t_this.cursor = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.DisplayProps}\n     */\n  \t\t_this._props = new DisplayProps();\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Rectangle}\n     */\n  \t\t_this._rectangle = new Rectangle();\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Rectangle}\n     * @default null\n     */\n  \t\t_this._bounds = null;\n\n  \t\t/**\n     * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n     * or cached objects won't use this property, it's for native display of terminal elements.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Returns the {@link easeljs.Stage} instance that this display object will be rendered on, or null if it has not been added to one.\n    * @type {Stage}\n    * @readonly\n    */\n\n\n  \t/**\n    * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n    * This does not account for whether it would be visible within the boundaries of the stage.\n    * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n    * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n    */\n  \tDisplayObject.prototype.isVisible = function isVisible() {\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  \t};\n\n  \t/**\n    * Alias for drawCache(). Used by grandchildren (or deeper) in their draw method to directly\n    * call {@link easeljs.DisplayObject#drawCache}, bypassing their parent(s).\n    *\n    * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n    * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n    * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n    * @return {Boolean}\n    */\n\n\n  \tDisplayObject.prototype.draw = function draw(ctx) {\n  \t\tvar ignoreCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  \t\treturn this.drawCache(ctx, ignoreCache);\n  \t};\n\n  \t/**\n    * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n    * Returns `true` if the draw was handled (useful for overriding functionality).\n    *\n    * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n    * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n    * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n    * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n    * @return {Boolean}\n    */\n\n\n  \tDisplayObject.prototype.drawCache = function drawCache(ctx) {\n  \t\tvar ignoreCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  \t\tvar cache = this.bitmapCache;\n  \t\tif (cache && !ignoreCache) {\n  \t\t\treturn cache.draw(ctx);\n  \t\t}\n  \t\treturn false;\n  \t};\n\n  \t/**\n    * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n    * to the specified context. This is typically called prior to {@link easeljs.DisplayObject#draw}.\n    * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n    */\n\n\n  \tDisplayObject.prototype.updateContext = function updateContext(ctx) {\n  \t\tvar o = this,\n  \t\t    mask = o.mask,\n  \t\t    mtx = o._props.matrix;\n\n  \t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n  \t\t\tmask.getMatrix(mtx);\n  \t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n  \t\t\tmask.graphics.drawAsPath(ctx);\n  \t\t\tctx.clip();\n\n  \t\t\tmtx.invert();\n  \t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n  \t\t}\n\n  \t\tthis.getMatrix(mtx);\n  \t\tvar tx = mtx.tx,\n  \t\t    ty = mtx.ty;\n  \t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n  \t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n  \t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n  \t\t}\n  \t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n  \t\tctx.globalAlpha *= o.alpha;\n  \t\tif (o.compositeOperation) {\n  \t\t\tctx.globalCompositeOperation = o.compositeOperation;\n  \t\t}\n  \t\tif (o.shadow) {\n  \t\t\tthis._applyShadow(ctx, o.shadow);\n  \t\t}\n  \t};\n\n  \t/**\n    * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n    * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n    * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n    * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n    * update the cache by calling `updateCache()` again. You must specify the cached area via the x, y, w,\n    * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n    *\n    * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n    * application. Check out the {@link easeljs.Filter} class for more information. Some filters\n    * (ex. {@link easeljs.BlurFilter}) may not work as expected in conjunction with the scale param.\n    *\n    * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n    * will add padding to the canvas dimensions.\n    *\n    * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n    * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n    *\n    * @example\n    * // If you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n    * var shape = new createjs.Shape();\n    * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n    * shape.cache(-25, -25, 50, 50);\n    *\n    * @param {Number} x The x coordinate origin for the cache region.\n    * @param {Number} y The y coordinate origin for the cache region.\n    * @param {Number} width The width of the cache region.\n    * @param {Number} height The height of the cache region.\n    * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n    * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n    * \tcached elements with greater fidelity. Default is 1.\n    * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n    */\n\n\n  \tDisplayObject.prototype.cache = function cache(x, y, width, height) {\n  \t\tvar scale = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  \t\tvar options = arguments[5];\n\n  \t\tif (!this.bitmapCache) {\n  \t\t\tthis.bitmapCache = new BitmapCache();\n  \t\t}\n  \t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n  \t};\n\n  \t/**\n    * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n    * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n    * will be drawn over the existing cache using the specified compositeOperation.\n    *\n    * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n    * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n    *\n    * @example\n    * // clear current graphics\n    * shapeInstance.clear();\n    * // draw new instructions\n    * shapeInstance.setStrokeStyle(3).beginStroke(\"#FF0000\").moveTo(100, 100).lineTo(200,200);\n    * // update cache, drawing new line on top of old one\n    * shapeInstance.updateCache();\n    *\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n    * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n    */\n\n\n  \tDisplayObject.prototype.updateCache = function updateCache(compositeOperation) {\n  \t\tif (!this.bitmapCache) {\n  \t\t\tthrow \"No cache found. cache() must be called before updateCache()\";\n  \t\t}\n  \t\tthis.bitmapCache.update(compositeOperation);\n  \t};\n\n  \t/**\n    * Clears the current cache.\n    * @see {@link easeljs.DisplayObject.#cache}\n    */\n\n\n  \tDisplayObject.prototype.uncache = function uncache() {\n  \t\tif (this.bitmapCache) {\n  \t\t\tthis.bitmapCache.release();\n  \t\t\tthis.bitmapCache = undefined;\n  \t\t}\n  \t};\n\n  \t/**\n    * Returns a data URL for the cache, or null if this display object is not cached.\n    * Only generated if the cache has changed, otherwise returns last result.\n    * @return {String} The image data url for the cache.\n    */\n\n\n  \tDisplayObject.prototype.getCacheDataURL = function getCacheDataURL() {\n  \t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n  \t};\n\n  \t/**\n    * Transforms the specified x and y position from the coordinate space of the display object\n    * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n    * over a specific point on a nested display object. Returns a Point instance with x and y properties\n    * correlating to the transformed coordinates on the stage.\n    *\n    * @example\n    * displayObject.x = 300;\n    * displayObject.y = 200;\n    * stage.addChild(displayObject);\n    * let point = displayObject.localToGlobal(100, 100);\n    * // Results in x=400, y=300\n    *\n    * @param {Number} x The x position in the source display object to transform.\n    * @param {Number} y The y position in the source display object to transform.\n    * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n    * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed coordinates\n    * on the stage.\n    */\n\n\n  \tDisplayObject.prototype.localToGlobal = function localToGlobal(x, y) {\n  \t\tvar pt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Point();\n\n  \t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n  \t};\n\n  \t/**\n    * Transforms the specified x and y position from the global (stage) coordinate space to the\n    * coordinate space of the display object. For example, this could be used to determine\n    * the current mouse position within the display object. Returns a Point instance with x and y properties\n    * correlating to the transformed position in the display object's coordinate space.\n    *\n    * @example\n    * displayObject.x = 300;\n    * displayObject.y = 200;\n    * stage.addChild(displayObject);\n    * let point = displayObject.globalToLocal(100, 100);\n    * // Results in x=-200, y=-100\n    *\n    * @param {Number} x The x position on the stage to transform.\n    * @param {Number} y The y position on the stage to transform.\n    * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n    * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed position in the\n    * display object's coordinate space.\n    */\n\n\n  \tDisplayObject.prototype.globalToLocal = function globalToLocal(x, y) {\n  \t\tvar pt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Point();\n\n  \t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n  \t};\n\n  \t/**\n    * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n    * space of the target display object. Returns a Point instance with x and y properties correlating to the\n    * transformed position in the target's coordinate space. Effectively the same as using the following code with\n    * {@link easeljs.DisplayObject#localToGlobal} and {@link easeljs.DisplayObject#globalToLocal}.\n    *\n    * @example\n    * // long way\n    * let pt = this.localToGlobal(x, y);\n    * pt = target.globalToLocal(pt.x, pt.y);\n    * // shorthand\n    * let pt = this.localToLocal(x, y, target);\n    *\n    * @param {Number} x The x position in the source display object to transform.\n    * @param {Number} y The y position on the source display object to transform.\n    * @param {easeljs.DisplayObject} target The target display object to which the coordinates will be transformed.\n    * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n    * @return {easeljs.Point} Returns a Point instance with x and y properties correlating to the transformed position\n    * in the target's coordinate space.\n    */\n\n\n  \tDisplayObject.prototype.localToLocal = function localToLocal(x, y, target, pt) {\n  \t\tpt = this.localToGlobal(x, y, pt);\n  \t\treturn target.globalToLocal(pt.x, pt.y, pt);\n  \t};\n\n  \t/**\n    * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n    * Omitted parameters will have the default value set.\n    *\n    * @example\n    * displayObject.setTransform(100, 100, 2, 2);\n    *\n    * @param {Number} [x=0] The horizontal translation (x position) in pixels\n    * @param {Number} [y=0] The vertical translation (y position) in pixels\n    * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n    * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n    * @param {Number} [rotation=0] The rotation, in degrees\n    * @param {Number} [skewX=0] The horizontal skew factor\n    * @param {Number} [skewY=0] The vertical skew factor\n    * @param {Number} [regX=0] The horizontal registration point in pixels\n    * @param {Number} [regY=0] The vertical registration point in pixels\n    * @return {easeljs.DisplayObject} Returns this instance. Useful for chaining commands.\n   */\n\n\n  \tDisplayObject.prototype.setTransform = function setTransform() {\n  \t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  \t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar scaleX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  \t\tvar scaleY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  \t\tvar rotation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  \t\tvar skewX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  \t\tvar skewY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  \t\tvar regX = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  \t\tvar regY = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n\n  \t\tthis.x = x;\n  \t\tthis.y = y;\n  \t\tthis.scaleX = scaleX;\n  \t\tthis.scaleY = scaleY;\n  \t\tthis.rotation = rotation;\n  \t\tthis.skewX = skewX;\n  \t\tthis.skewY = skewY;\n  \t\tthis.regX = regX;\n  \t\tthis.regY = regY;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a matrix based on this object's current transform.\n    * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix object is returned.\n    * @return {easeljs.Matrix2D} A matrix representing this display object's transform.\n    */\n\n\n  \tDisplayObject.prototype.getMatrix = function getMatrix(matrix) {\n  \t\tvar o = this,\n  \t\t    mtx = matrix && matrix.identity() || new Matrix2D();\n  \t\treturn o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n  \t};\n\n  \t/**\n    * Generates a Matrix2D object representing the combined transform of the display object and all of its\n    * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}). This can\n    * be used to transform positions between coordinate spaces, such as with {@link easeljs.DisplayObject#localToGlobal}\n    * and {@link easeljs.DisplayObject#globalToLocal}.\n    *\n    * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix2D object is returned.\n    * @return {easeljs.Matrix2D} The combined matrix.\n    */\n\n\n  \tDisplayObject.prototype.getConcatenatedMatrix = function getConcatenatedMatrix(matrix) {\n  \t\tvar o = this,\n  \t\t    mtx = this.getMatrix(matrix);\n  \t\twhile (o = o.parent) {\n  \t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n  \t\t}\n  \t\treturn mtx;\n  \t};\n\n  \t/**\n    * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n    * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}).\n    * @param {easeljs.DisplayProps} [props] A DisplayProps object to populate with the calculated values. If null, a new DisplayProps object is returned.\n    * @return {easeljs.DisplayProps} The combined display properties.\n    */\n\n\n  \tDisplayObject.prototype.getConcatenatedDisplayProps = function getConcatenatedDisplayProps(props) {\n  \t\tprops = props ? props.identity() : new DisplayProps();\n  \t\tvar o = this,\n  \t\t    mtx = o.getMatrix(props.matrix);\n  \t\tdo {\n  \t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n  \t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n  \t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n  \t\t\tif (o != this) {\n  \t\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n  \t\t\t}\n  \t\t} while (o = o.parent);\n  \t\treturn props;\n  \t};\n\n  \t/**\n    * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n    * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n    *\n    * Please note that shape-to-shape collision is not currently supported by EaselJS.\n    *\n    * @example\n    * stage.addEventListener(\"stagemousedown\", event => {\n    *   let hit = shape.hitTest(event.stageX, event.stageY);\n    *   // hit == true when shape is clicked\n    * });\n    *\n    * @param {Number} x The x position to check in the display object's local coordinates.\n    * @param {Number} y The y position to check in the display object's local coordinates.\n    * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n    * local Point.\n   */\n\n\n  \tDisplayObject.prototype.hitTest = function hitTest(x, y) {\n  \t\tvar ctx = DisplayObject._hitTestContext;\n  \t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n  \t\tthis.draw(ctx);\n\n  \t\tvar hit = this._testHit(ctx);\n  \t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\tctx.clearRect(0, 0, 2, 2);\n  \t\treturn hit;\n  \t};\n\n  \t/**\n    * Provides a chainable shortcut method for setting a number of properties on the instance.\n    *\n    * @example\n    * let graphics = new Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n    * let shape = stage.addChild(new Shape()).set({ graphics, x: 100, y: 100, alpha: 0.5 });\n    *\n    * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n    * @return {easeljs.DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n    * @chainable\n   */\n\n\n  \tDisplayObject.prototype.set = function set(props) {\n  \t\tfor (var n in props) {\n  \t\t\tthis[n] = props[n];\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n    * Objects that have been cached will return the bounds of the cache.\n    *\n    * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n    * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n    *\n    * <table>\n    * \t<tr><td><b>All</b></td><td>\n    * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n    * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n    * \t\tthe automatic calculations listed below.\n    * \t</td></tr>\n    * \t<tr><td><b>Bitmap</b></td><td>\n    * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n    * \t</td></tr>\n    * \t<tr><td><b>Sprite</b></td><td>\n    * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n    * \t\tin the spritesheet data. See also {@link easeljs.SpriteSheet#getFrameBounds}\n    * \t</td></tr>\n    * \t<tr><td><b>Container</b></td><td>\n    * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n    * \t</td></tr>\n    * \t<tr><td><b>Shape</b></td><td>\n    * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n    * \t</td></tr>\n    * \t<tr><td><b>Text</b></td><td>\n    * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n    * \t\tnot, especially when using textBaseline values other than \"top\".\n    * \t</td></tr>\n    * \t<tr><td><b>BitmapText</b></td><td>\n    * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n    * \t\tto (x=0,y=0).\n    * \t</td></tr>\n   * </table>\n    *\n    * @example\n    * /* Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n    * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n    * bounds explicitly. *\\/\n    * let bounds = obj.getBounds();\n    * obj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n    * // getBounds will now use the set values, instead of recalculating\n    *\n    * @example\n    * // To reduce memory impact, the returned Rectangle instance may be reused internally\n    * let bounds = obj.getBounds().clone();\n    * // OR:\n    * rect.copy(obj.getBounds());\n    *\n    * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n    */\n\n\n  \tDisplayObject.prototype.getBounds = function getBounds() {\n  \t\tif (this._bounds) {\n  \t\t\treturn this._rectangle.copy(this._bounds);\n  \t\t}\n  \t\tvar cacheCanvas = this.cacheCanvas;\n  \t\tif (cacheCanvas) {\n  \t\t\tvar scale = this._cacheScale;\n  \t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);\n  \t\t}\n  \t\treturn null;\n  \t};\n\n  \t/**\n    * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n    * Objects that have been cached will return the transformed bounds of the cache.\n    *\n    * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n    * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n    *\n    * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n    * values if you need to retain it.\n    *\n    * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n    * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n    */\n\n\n  \tDisplayObject.prototype.getTransformedBounds = function getTransformedBounds() {\n  \t\treturn this._getBounds();\n  \t};\n\n  \t/**\n    * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n    * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n    * override calculated bounds.\n    *\n    * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n    * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n    *\n    * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n    * @param {Number} y The y origin of the bounds.\n    * @param {Number} width The width of the bounds.\n    * @param {Number} height The height of the bounds.\n    */\n\n\n  \tDisplayObject.prototype.setBounds = function setBounds(x, y, width, height) {\n  \t\tif (x == null) {\n  \t\t\tthis._bounds = null;\n  \t\t}\n  \t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n  \t};\n\n  \t/**\n    * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n    * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n    * are copied by reference (masks, individual filter instances, hit area)\n    *\n    * @return {easeljs.DisplayObject} A clone of the current DisplayObject instance.\n    */\n\n\n  \tDisplayObject.prototype.clone = function clone() {\n  \t\treturn this._cloneProps(new DisplayObject());\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tDisplayObject.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + (this.name ? \" (name=\" + this.name + \")\" : \"\") + \"]\";\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n    * instance copied into.\n    * @return {easeljs.DisplayObject} o\n    */\n\n\n  \tDisplayObject.prototype._cloneProps = function _cloneProps(o) {\n  \t\to.alpha = this.alpha;\n  \t\to.mouseEnabled = this.mouseEnabled;\n  \t\to.tickEnabled = this.tickEnabled;\n  \t\to.name = this.name;\n  \t\to.regX = this.regX;\n  \t\to.regY = this.regY;\n  \t\to.rotation = this.rotation;\n  \t\to.scaleX = this.scaleX;\n  \t\to.scaleY = this.scaleY;\n  \t\to.shadow = this.shadow;\n  \t\to.skewX = this.skewX;\n  \t\to.skewY = this.skewY;\n  \t\to.visible = this.visible;\n  \t\to.x = this.x;\n  \t\to.y = this.y;\n  \t\to.compositeOperation = this.compositeOperation;\n  \t\to.snapToPixel = this.snapToPixel;\n  \t\to.filters = this.filters == null ? null : this.filters.slice(0);\n  \t\to.mask = this.mask;\n  \t\to.hitArea = this.hitArea;\n  \t\to.cursor = this.cursor;\n  \t\to._bounds = this._bounds;\n  \t\treturn o;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {CanvasRenderingContext2D} ctx\n    * @param {easeljs.Shadow} [shadow=Shadow]\n    */\n\n\n  \tDisplayObject.prototype._applyShadow = function _applyShadow(ctx) {\n  \t\tvar shadow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Shadow.identity;\n\n  \t\tshadow = shadow;\n  \t\tctx.shadowColor = shadow.color;\n  \t\tctx.shadowOffsetX = shadow.offsetX;\n  \t\tctx.shadowOffsetY = shadow.offsetY;\n  \t\tctx.shadowBlur = shadow.blur;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n    */\n\n\n  \tDisplayObject.prototype._tick = function _tick(evtObj) {\n  \t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n  \t\tvar ls = this._listeners;\n  \t\tif (ls && ls[\"tick\"]) {\n  \t\t\t// reset & reuse the event object to avoid construction / GC costs:\n  \t\t\tevtObj.target = null;\n  \t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n  \t\t\tthis.dispatchEvent(evtObj);\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    * @param {CanvasRenderingContext2D} ctx\n    * @return {Boolean}\n    */\n\n\n  \tDisplayObject.prototype._testHit = function _testHit(ctx) {\n  \t\ttry {\n  \t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n  \t\t} catch (e) {\n  \t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n  \t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n  \t\t\t}\n  \t\t\treturn false;\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.Matrix2D} matrix\n    * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n    * @return {easeljs.Rectangle}\n    */\n\n\n  \tDisplayObject.prototype._getBounds = function _getBounds(matrix, ignoreTransform) {\n  \t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.Rectangle} bounds\n    * @param {easeljs.Matrix2D} matrix\n    * @param {Boolean} ignoreTransform\n    * @return {easeljs.Rectangle}\n    */\n\n\n  \tDisplayObject.prototype._transformBounds = function _transformBounds(bounds, matrix, ignoreTransform) {\n  \t\tif (!bounds) {\n  \t\t\treturn bounds;\n  \t\t}\n  \t\tvar x = bounds.x,\n  \t\t    y = bounds.y,\n  \t\t    width = bounds.width,\n  \t\t    height = bounds.height;\n\n  \t\tvar mtx = this._props.matrix;\n  \t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n  \t\tif (x || y) {\n  \t\t\tmtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y);\n  \t\t} // TODO: simplify this.\n  \t\tif (matrix) {\n  \t\t\tmtx.prependMatrix(matrix);\n  \t\t}\n\n  \t\tvar x_a = width * mtx.a,\n  \t\t    x_b = width * mtx.b;\n  \t\tvar y_c = height * mtx.c,\n  \t\t    y_d = height * mtx.d;\n  \t\tvar tx = mtx.tx,\n  \t\t    ty = mtx.ty;\n\n  \t\tvar minX = tx,\n  \t\t    maxX = tx,\n  \t\t    minY = ty,\n  \t\t    maxY = ty;\n\n  \t\tif ((x = x_a + tx) < minX) {\n  \t\t\tminX = x;\n  \t\t} else if (x > maxX) {\n  \t\t\tmaxX = x;\n  \t\t}\n  \t\tif ((x = x_a + y_c + tx) < minX) {\n  \t\t\tminX = x;\n  \t\t} else if (x > maxX) {\n  \t\t\tmaxX = x;\n  \t\t}\n  \t\tif ((x = y_c + tx) < minX) {\n  \t\t\tminX = x;\n  \t\t} else if (x > maxX) {\n  \t\t\tmaxX = x;\n  \t\t}\n\n  \t\tif ((y = x_b + ty) < minY) {\n  \t\t\tminY = y;\n  \t\t} else if (y > maxY) {\n  \t\t\tmaxY = y;\n  \t\t}\n  \t\tif ((y = x_b + y_d + ty) < minY) {\n  \t\t\tminY = y;\n  \t\t} else if (y > maxY) {\n  \t\t\tmaxY = y;\n  \t\t}\n  \t\tif ((y = y_d + ty) < minY) {\n  \t\t\tminY = y;\n  \t\t} else if (y > maxY) {\n  \t\t\tmaxY = y;\n  \t\t}\n\n  \t\treturn bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n  \t};\n\n  \t/**\n    * Indicates whether the display object has any mouse event listeners or a cursor.\n    * @protected\n    * @return {Boolean}\n    */\n\n\n  \tDisplayObject.prototype._hasMouseEventListener = function _hasMouseEventListener() {\n  \t\tvar evts = DisplayObject._MOUSE_EVENTS;\n  \t\tfor (var i = 0, l = evts.length; i < l; i++) {\n  \t\t\tif (this.hasEventListener(evts[i])) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t}\n  \t\treturn !!this.cursor;\n  \t};\n\n  \tcreateClass(DisplayObject, [{\n  \t\tkey: \"stage\",\n  \t\tget: function get() {\n  \t\t\t// uses dynamic access to avoid circular dependencies;\n  \t\t\tvar o = this;\n  \t\t\twhile (o.parent) {\n  \t\t\t\to = o.parent;\n  \t\t\t}\n  \t\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) {\n  \t\t\t\treturn o;\n  \t\t\t}\n  \t\t\treturn null;\n  \t\t}\n\n  \t\t/**\n     * Set both the {@link easeljs.DisplayObject#scaleX} and the {@link easeljs.DisplayObject#scaleY} property to the same value.\n     * Note that when you get the value, if the `scaleX` and `scaleY` are different values, it will return only the `scaleX`.\n     * @type {Number}\n     * @default 1\n     */\n\n  \t}, {\n  \t\tkey: \"scale\",\n  \t\tset: function set(value) {\n  \t\t\tthis.scaleX = this.scaleY = value;\n  \t\t},\n  \t\tget: function get() {\n  \t\t\treturn this.scaleX;\n  \t\t}\n  \t}]);\n  \treturn DisplayObject;\n  }(EventDispatcher);\n\n\n  {\n  \tvar canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n  \tif (canvas.getContext) {\n  \t\t/**\n     * @type {HTMLCanvasElement | Object}\n     * @static\n     */\n  \t\tDisplayObject._hitTestCanvas = canvas;\n  \t\t/**\n     * @type {CanvasRenderingContext2D}\n     * @static\n     */\n  \t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n  \t\tcanvas.width = canvas.height = 1;\n  \t}\n  }\n\n  /**\n   * Listing of mouse event names. Used in _hasMouseEventListener.\n   * @static\n   * @type {Array<String>}\n   * @readonly\n   */\n  DisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n\n  /**\n   * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n   * with cross domain content.\n   * @static\n   * @type {Boolean}\n   * @default false\n   */\n  DisplayObject.suppressCrossDomainErrors = false;\n\n  /**\n   * @static\n   * @type {Boolean}\n   * @default false\n   */\n  DisplayObject.snapToPixelEnabled = false;\n\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @static\n   * @type {Number}\n   */\n  DisplayObject._StageGL_NONE = 0;\n\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @static\n   * @type {Number}\n   */\n  DisplayObject._StageGL_SPRITE = 1;\n\n  /**\n   * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n   * @static\n   * @type {Number}\n   */\n  DisplayObject._StageGL_BITMAP = 2;\n\n  /**\n   * @license Container\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n   * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n   * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n   * containers have their `transform` and `alpha` properties concatenated with their parent\n   * Container.\n   *\n   * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with `x=50`\n   * and `alpha=0.7` will be rendered to the canvas at `x=150` and `alpha=0.35`.\n   * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n   *\n   * @memberof easeljs\n   * @extends easeljs.DisplayObject\n   * @example\n   * import { Container } from \"@createjs/easeljs\";\n   * const container = new Container();\n   * container.addChild(bitmapInstance, shapeInstance);\n   * container.x = 100;\n   */\n\n  var Container = function (_DisplayObject) {\n  \tinherits(Container, _DisplayObject);\n\n  \tfunction Container() {\n  \t\tclassCallCheck(this, Container);\n\n  \t\t/**\n     * The array of children in the display list. You should usually use the child management methods such as\n     * {@link easeljs.Container#addChild}, {@link easeljs.Container#removeChild}, {@link easeljs.Container#swapChildren},\n     * etc, rather than accessing this directly, but it is included for advanced uses.\n     * @type {Array}\n     * @default []\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n  \t\t_this.children = [];\n\n  \t\t/**\n     * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n     * If false, the children will be aggregated under the container - for example, a click on a child shape would\n     * trigger a click event on the container.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.mouseChildren = true;\n\n  \t\t/**\n     * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.tickChildren = true;\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Returns the number of children in the container.\n    * @type {Number}\n    * @readonly\n    */\n\n\n  \tContainer.prototype.isVisible = function isVisible() {\n  \t\tvar hasContent = this.cacheCanvas || this.children.length;\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  \t};\n\n  \tContainer.prototype.draw = function draw(ctx) {\n  \t\tvar ignoreCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  \t\tif (_DisplayObject.prototype.draw.call(this, ctx, ignoreCache)) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\t// this ensures we don't have issues with display list changes that occur during a draw:\n  \t\tvar list = this.children.slice();\n  \t\tfor (var i = 0, l = list.length; i < l; i++) {\n  \t\t\tvar child = list[i];\n  \t\t\tif (!child.isVisible()) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\t// draw the child:\n  \t\t\tctx.save();\n  \t\t\tchild.updateContext(ctx);\n  \t\t\tchild.draw(ctx);\n  \t\t\tctx.restore();\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * Adds a child to the top of the display list.\n    *\n    * @example\n    * container.addChild(bitmapInstance);\n    * // You can also add multiple children at once:\n    * container.addChild(bitmapInstance, shapeInstance, textInstance);\n    *\n    * @param {...easeljs.DisplayObject} children The display object(s) to add.\n    * @return {easeljs.DisplayObject} The child that was added, or the last child if multiple children were added.\n    */\n\n\n  \tContainer.prototype.addChild = function addChild() {\n  \t\tfor (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {\n  \t\t\tchildren[_key] = arguments[_key];\n  \t\t}\n\n  \t\tvar l = children.length;\n  \t\tif (l === 0) {\n  \t\t\treturn null;\n  \t\t}\n  \t\tvar child = children[0];\n  \t\tif (l > 1) {\n  \t\t\tfor (var i = 0; i < l; i++) {\n  \t\t\t\tchild = this.addChild(children[i]);\n  \t\t\t}\n  \t\t\treturn child;\n  \t\t}\n  \t\t// Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n  \t\tvar parent = child.parent,\n  \t\t    silent = parent === this;\n  \t\tparent && parent._removeChildAt(parent.children.indexOf(child), silent);\n  \t\tchild.parent = this;\n  \t\tthis.children.push(child);\n  \t\tif (!silent) {\n  \t\t\tchild.dispatchEvent(\"added\");\n  \t\t}\n  \t\treturn child;\n  \t};\n\n  \t/**\n    * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n    * setting its parent to this container.\n    *\n    * @example\n    * container.addChildAt(child1, index);\n    * // You can also add multiple children, such as:\n    * container.addChildAt(child1, child2, ..., index);\n    * // The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list, you could use:\n    * container.addChildAt(myShape, container.getChildIndex(otherShape));\n    * // This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n    *\n    * @param {...easeljs.DisplayObject} children The display object(s) to add.\n    * @param {Number} index The index to add the child at.\n    * @return {easeljs.DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n    */\n\n\n  \tContainer.prototype.addChildAt = function addChildAt() {\n  \t\tfor (var _len2 = arguments.length, children = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n  \t\t\tchildren[_key2] = arguments[_key2];\n  \t\t}\n\n  \t\tvar l = children.length;\n  \t\tif (l === 0) {\n  \t\t\treturn null;\n  \t\t}\n  \t\tvar index = children.pop();\n  \t\tif (index < 0 || index > this.children.length) {\n  \t\t\treturn children[l - 2];\n  \t\t}\n  \t\tif (l > 2) {\n  \t\t\tfor (var i = 0; i < l - 1; i++) {\n  \t\t\t\tthis.addChildAt(children[i], index++);\n  \t\t\t}\n  \t\t\treturn children[l - 2];\n  \t\t}\n  \t\tvar child = children[0];\n  \t\tvar parent = child.parent,\n  \t\t    silent = parent === this;\n  \t\tparent && parent._removeChildAt(parent.children.indexOf(child), silent);\n  \t\tchild.parent = this;\n  \t\tthis.children.splice(index++, 0, child);\n  \t\tif (!silent) {\n  \t\t\tchild.dispatchEvent(\"added\");\n  \t\t}\n  \t\treturn child;\n  \t};\n\n  \t/**\n    * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n    * already known.\n    *\n    * @example\n    * container.removeChild(child);\n    * // You can also remove multiple children:\n    * container.removeChild(child1, child2, ...);\n    *\n    * @param {...easeljs.DisplayObject} children The display object(s) to remove.\n    * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n    */\n\n\n  \tContainer.prototype.removeChild = function removeChild() {\n  \t\tfor (var _len3 = arguments.length, children = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n  \t\t\tchildren[_key3] = arguments[_key3];\n  \t\t}\n\n  \t\tvar l = children.length;\n  \t\tif (l === 0) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tif (l > 1) {\n  \t\t\tvar good = true;\n  \t\t\tfor (var i = 0; i < l; i++) {\n  \t\t\t\tgood = good && this.removeChild(children[i]);\n  \t\t\t}\n  \t\t\treturn good;\n  \t\t}\n  \t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n  \t};\n\n  \t/**\n    * Removes the child at the specified index from the display list, and sets its parent to null.\n    *\n    * @example\n    * container.removeChildAt(2);\n    * // You can also remove multiple children:\n    * container.removeChildAt(2, 7, ...)\n    *\n    * @param {...Number} indexes The indexes of children to remove.\n    * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n    */\n\n\n  \tContainer.prototype.removeChildAt = function removeChildAt() {\n  \t\tfor (var _len4 = arguments.length, indexes = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n  \t\t\tindexes[_key4] = arguments[_key4];\n  \t\t}\n\n  \t\tvar l = indexes.length;\n  \t\tif (l === 0) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tif (l > 1) {\n  \t\t\tindexes.sort(function (a, b) {\n  \t\t\t\treturn b - a;\n  \t\t\t});\n  \t\t\tvar good = true;\n  \t\t\tfor (var i = 0; i < l; i++) {\n  \t\t\t\tgood = good && this._removeChildAt(indexes[i]);\n  \t\t\t}\n  \t\t\treturn good;\n  \t\t}\n  \t\treturn this._removeChildAt(indexes[0]);\n  \t};\n\n  \t/**\n    * Removes all children from the display list.\n    */\n\n\n  \tContainer.prototype.removeAllChildren = function removeAllChildren() {\n  \t\tvar kids = this.children;\n  \t\twhile (kids.length) {\n  \t\t\tthis._removeChildAt(0);\n  \t\t}\n  \t};\n\n  \t/**\n    * Returns the child at the specified index.\n    * @param {Number} index The index of the child to return.\n    * @return {easeljs.DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n    */\n\n\n  \tContainer.prototype.getChildAt = function getChildAt(index) {\n  \t\treturn this.children[index];\n  \t};\n\n  \t/**\n    * Returns the child with the specified name.\n    * @param {String} name The name of the child to return.\n    * @return {easeljs.DisplayObject} The child with the specified name.\n    */\n\n\n  \tContainer.prototype.getChildByName = function getChildByName(name) {\n  \t\tvar kids = this.children;\n  \t\tvar l = kids.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tif (kids[i].name === name) {\n  \t\t\t\treturn kids[i];\n  \t\t\t}\n  \t\t}\n  \t\treturn null;\n  \t};\n\n  \t/**\n    * Performs an array sort operation on the child list.\n    *\n    * @example\n    * // Display children with a higher y in front.\n    * container.sortChildren((obj1, obj2, options) => {\n    * \t if (obj1.y > obj2.y) { return 1; }\n    *   if (obj1.y < obj2.y) { return -1; }\n    *   return 0;\n    * });\n    *\n    * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n    * @param {Function} sortFunction the function to use to sort the child list.\n    */\n\n\n  \tContainer.prototype.sortChildren = function sortChildren(sortFunction) {\n  \t\tthis.children.sort(sortFunction);\n  \t};\n\n  \t/**\n    * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n    * @param {easeljs.DisplayObject} child The child to return the index of.\n    * @return {Number} The index of the specified child. -1 if the child is not found.\n    */\n\n\n  \tContainer.prototype.getChildIndex = function getChildIndex(child) {\n  \t\treturn this.children.indexOf(child);\n  \t};\n\n  \t/**\n    * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n    * @param {Number} index1\n    * @param {Number} index2\n    */\n\n\n  \tContainer.prototype.swapChildrenAt = function swapChildrenAt(index1, index2) {\n  \t\tvar kids = this.children;\n  \t\tvar o1 = kids[index1];\n  \t\tvar o2 = kids[index2];\n  \t\tif (!o1 || !o2) {\n  \t\t\treturn;\n  \t\t}\n  \t\tkids[index1] = o2;\n  \t\tkids[index2] = o1;\n  \t};\n\n  \t/**\n    * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n    * Container.\n    * @param {easeljs.DisplayObject} child1\n    * @param {easeljs.DisplayObject} child2\n    */\n  \tContainer.prototype.swapChildren = function swapChildren(child1, child2) {\n  \t\tvar kids = this.children;\n  \t\tvar l = kids.length;\n  \t\tvar index1 = void 0,\n  \t\t    index2 = void 0;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tif (kids[i] === child1) {\n  \t\t\t\tindex1 = i;\n  \t\t\t}\n  \t\t\tif (kids[i] === child2) {\n  \t\t\t\tindex2 = i;\n  \t\t\t}\n  \t\t\tif (index1 != null && index2 != null) {\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t\tif (i === l) {\n  \t\t\treturn;\n  \t\t} // TODO: throw error?\n  \t\tkids[index1] = child2;\n  \t\tkids[index2] = child1;\n  \t};\n\n  \t/**\n    * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n    * @param {easeljs.DisplayObject} child\n    * @param {Number} index\n    */\n\n\n  \tContainer.prototype.setChildIndex = function setChildIndex(child, index) {\n  \t\tvar kids = this.children;\n  \t\tvar l = kids.length;\n  \t\tif (child.parent != this || index < 0 || index >= l) {\n  \t\t\treturn;\n  \t\t}\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tif (kids[i] === child) {\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t\tif (i === l || i === index) {\n  \t\t\treturn;\n  \t\t}\n  \t\tkids.splice(i, 1);\n  \t\tkids.splice(index, 0, child);\n  \t};\n\n  \t/**\n    * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n    * of this container.\n    * @param {easeljs.DisplayObject} child The DisplayObject to be checked.\n    * @return {Boolean} true if the specified display object either is this container or is a descendent.\n    */\n\n\n  \tContainer.prototype.contains = function contains(child) {\n  \t\twhile (child) {\n  \t\t\tif (child === this) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t\tchild = child.parent;\n  \t\t}\n  \t\treturn false;\n  \t};\n\n  \t/**\n    * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n    * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n    * transform properties including regX/Y.\n    * @param {Number} x The x position to check in the display object's local coordinates.\n    * @param {Number} y The y position to check in the display object's local coordinates.\n    * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n    * coordinates.\n    */\n\n\n  \tContainer.prototype.hitTest = function hitTest(x, y) {\n  \t\t// TODO: optimize to use the fast cache check where possible.\n  \t\treturn this.getObjectUnderPoint(x, y) != null;\n  \t};\n\n  \t/**\n    * Returns an array of all display objects under the specified coordinates that are in this container's display\n    * list. This routine ignores any display objects with {@link easeljs.DisplayObject#mouseEnabled} set to `false`.\n    * The array will be sorted in order of visual depth, with the top-most display object at index 0.\n    * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n    * For example, if testing for objects under the mouse, test on tick (instead of on {@link easeljs.DisplayObject#event:mousemove}),\n    * and only if the mouse's position has changed.\n    *\n    * <ul>\n    *   <li>By default (mode=0) this method evaluates all display objects.</li>\n    *   <li>By setting the `mode` parameter to `1`, the {@link easeljs.DisplayObject#mouseEnabled}\n    *       and {@link easeljs.DisplayObject#mouseChildren} properties will be respected.</li>\n    *   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n    *       listeners or a {@link easeljs.DisplayObject#cursor} property. That is, only objects\n    *       that would normally intercept mouse interaction will be included. This can significantly improve performance\n    *       in some cases by reducing the number of display objects that need to be tested.</li>\n    * </ul>\n    *\n    * This method accounts for both {@link easeljs.DisplayObject#hitArea} and {@link easeljs.DisplayObject#mask}.\n    *\n    * @param {Number} x The x position in the container to test.\n    * @param {Number} y The y position in the container to test.\n    * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n    * @return {Array<easeljs.DisplayObject>} An array of DisplayObjects under the specified coordinates.\n    */\n\n\n  \tContainer.prototype.getObjectsUnderPoint = function getObjectsUnderPoint(x, y) {\n  \t\tvar mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  \t\tvar arr = [];\n  \t\tvar pt = this.localToGlobal(x, y);\n  \t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n  \t\treturn arr;\n  \t};\n\n  \t/**\n    * Similar to {@link easeljs.Container#getObjectsUnderPoint}, but returns only the top-most display\n    * object. This runs significantly faster than `getObjectsUnderPoint()`, but is still potentially an expensive\n    * operation.\n    *\n    * @param {Number} x The x position in the container to test.\n    * @param {Number} y The y position in the container to test.\n    * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n    * @return {easeljs.DisplayObject} The top-most display object under the specified coordinates.\n    */\n\n\n  \tContainer.prototype.getObjectUnderPoint = function getObjectUnderPoint(x, y) {\n  \t\tvar mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  \t\tvar pt = this.localToGlobal(x, y);\n  \t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n  \t};\n\n  \tContainer.prototype.getBounds = function getBounds() {\n  \t\treturn this._getBounds(null, true);\n  \t};\n\n  \tContainer.prototype.getTransformedBounds = function getTransformedBounds() {\n  \t\treturn this._getBounds();\n  \t};\n\n  \t/**\n    * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n    * reverted to their defaults (for example `.parent`).\n    * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n    * properties of the container will be cloned, but the new instance will not have any children.\n    * @return {easeljs.Container} A clone of the current Container instance.\n    */\n\n\n  \tContainer.prototype.clone = function clone() {\n  \t\tvar recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  \t\tvar o = this._cloneProps(new Container());\n  \t\tif (recursive) {\n  \t\t\tthis._cloneChildren(o);\n  \t\t}\n  \t\treturn o;\n  \t};\n\n  \tContainer.prototype._tick = function _tick(evtObj) {\n  \t\tif (this.tickChildren) {\n  \t\t\tfor (var i = this.children.length - 1; i >= 0; i--) {\n  \t\t\t\tvar child = this.children[i];\n  \t\t\t\tif (child.tickEnabled && child._tick) {\n  \t\t\t\t\tchild._tick(evtObj);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\t_DisplayObject.prototype._tick.call(this, evtObj);\n  \t};\n\n  \t/**\n    * Recursively clones all children of this container, and adds them to the target container.\n    * @protected\n    * @param {easeljs.Container} o The target container.\n    */\n\n\n  \tContainer.prototype._cloneChildren = function _cloneChildren(o) {\n  \t\tif (o.children.length) {\n  \t\t\to.removeAllChildren();\n  \t\t}\n  \t\tvar arr = o.children;\n  \t\tvar l = this.children.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tvar clone = this.children[i].clone(true);\n  \t\t\tclone.parent = o;\n  \t\t\tarr.push(clone);\n  \t\t}\n  \t};\n\n  \t/**\n    * Removes the child at the specified index from the display list, and sets its parent to null.\n    * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n    *\n    * @protected\n    * @param {Number} index The index of the child to remove.\n    * @param {Boolean} [silent=false] Prevents dispatch of `removed` event if true.\n    * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n    */\n\n\n  \tContainer.prototype._removeChildAt = function _removeChildAt(index) {\n  \t\tvar silent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  \t\tif (index < 0 || index > this.children.length - 1) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tvar child = this.children[index];\n  \t\tif (child) {\n  \t\t\tchild.parent = null;\n  \t\t}\n  \t\tthis.children.splice(index, 1);\n  \t\tif (!silent) {\n  \t\t\tchild.dispatchEvent(\"removed\");\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Array} arr\n    * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n    * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n    * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n    * @return {easeljs.DisplayObject}\n    */\n\n\n  \tContainer.prototype._getObjectsUnderPoint = function _getObjectsUnderPoint(x, y, arr, mouse, activeListener) {\n  \t\tvar currentDepth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  \t\tif (!currentDepth && !this._testMask(this, x, y)) {\n  \t\t\treturn null;\n  \t\t}\n  \t\tvar mtx = void 0,\n  \t\t    ctx = DisplayObject._hitTestContext;\n  \t\tactiveListener = activeListener || mouse && this._hasMouseEventListener();\n\n  \t\t// draw children one at a time, and check if we get a hit:\n  \t\tvar children = this.children;\n  \t\tvar l = children.length;\n  \t\tfor (var i = l - 1; i >= 0; i--) {\n  \t\t\tvar child = children[i];\n  \t\t\tvar hitArea = child.hitArea;\n  \t\t\tif (!child.visible || !hitArea && !child.isVisible() || mouse && !child.mouseEnabled) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (!hitArea && !this._testMask(child, x, y)) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n  \t\t\tif (!hitArea && child instanceof Container) {\n  \t\t\t\tvar result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n  \t\t\t\tif (!arr && result) {\n  \t\t\t\t\treturn mouse && !this.mouseChildren ? this : result;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) {\n  \t\t\t\t\tcontinue;\n  \t\t\t\t}\n\n  \t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n  \t\t\t\tvar props = child.getConcatenatedDisplayProps(child._props);\n  \t\t\t\tmtx = props.matrix;\n\n  \t\t\t\tif (hitArea) {\n  \t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n  \t\t\t\t\tprops.alpha = hitArea.alpha;\n  \t\t\t\t}\n\n  \t\t\t\tctx.globalAlpha = props.alpha;\n  \t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n  \t\t\t\t(hitArea || child).draw(ctx);\n  \t\t\t\tif (!this._testHit(ctx)) {\n  \t\t\t\t\tcontinue;\n  \t\t\t\t}\n  \t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\t\t\tctx.clearRect(0, 0, 2, 2);\n  \t\t\t\tif (arr) {\n  \t\t\t\t\tarr.push(child);\n  \t\t\t\t} else {\n  \t\t\t\t\treturn mouse && !this.mouseChildren ? this : child;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\treturn null;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.DisplayObject} target\n    * @param {Number} x\n    * @param {Number} y\n    * @return {Boolean} Indicates whether the x/y is within the masked region.\n    */\n\n\n  \tContainer.prototype._testMask = function _testMask(target, x, y) {\n  \t\tvar mask = target.mask;\n  \t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\tvar mtx = this._props.matrix,\n  \t\t    parent = target.parent;\n  \t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n  \t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n  \t\tvar ctx = DisplayObject._hitTestContext;\n  \t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n\n  \t\t// draw the mask as a solid fill:\n  \t\tmask.graphics.drawAsPath(ctx);\n  \t\tctx.fillStyle = \"#000\";\n  \t\tctx.fill();\n\n  \t\tif (!this._testHit(ctx)) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\tctx.clearRect(0, 0, 2, 2);\n\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.Matrix2D} matrix\n    * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n    * @return {easeljs.Rectangle}\n    */\n\n\n  \tContainer.prototype._getBounds = function _getBounds(matrix, ignoreTransform) {\n  \t\tvar bounds = _DisplayObject.prototype.getBounds.call(this);\n  \t\tif (bounds) {\n  \t\t\treturn this._transformBounds(bounds, matrix, ignoreTransform);\n  \t\t}\n\n  \t\tvar mtx = this._props.matrix;\n  \t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n  \t\tif (matrix) {\n  \t\t\tmtx.prependMatrix(matrix);\n  \t\t}\n\n  \t\tvar l = this.children.length;\n  \t\tvar rect = null;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tvar child = this.children[i];\n  \t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (rect) {\n  \t\t\t\trect.extend(bounds.x, bounds.y, bounds.width, bounds.height);\n  \t\t\t} else {\n  \t\t\t\trect = bounds.clone();\n  \t\t\t}\n  \t\t}\n  \t\treturn rect;\n  \t};\n\n  \tcreateClass(Container, [{\n  \t\tkey: \"numChildren\",\n  \t\tget: function get() {\n  \t\t\treturn this.children.length;\n  \t\t}\n  \t}]);\n  \treturn Container;\n  }(DisplayObject);\n\n  /**\n   * @license MouseEvent\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n   * see the {@link easeljs.DisplayObject} and {@link easeljs.Stage} event listings.\n   * @memberof easeljs\n   * @extends core.Event\n   * @param {String} type The event type.\n   * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n   * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n   * @param {Number} stageX The normalized x position relative to the stage.\n   * @param {Number} stageY The normalized y position relative to the stage.\n   * @param {easeljs.MouseEvent} nativeEvent The native DOM event related to this mouse event.\n   * @param {Number} pointerID The unique id for the pointer.\n   * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n   * @param {Number} rawX The raw x position relative to the stage.\n   * @param {Number} rawY The raw y position relative to the stage.\n   * @param {easeljs.DisplayObject} relatedTarget The secondary target for the event.\n   */\n\n  var MouseEvent = function (_Event) {\n  \tinherits(MouseEvent, _Event);\n\n  \tfunction MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n  \t\tclassCallCheck(this, MouseEvent);\n\n  \t\t// public properties:\n  \t\t/**\n     * The normalized x position on the stage. This will always be within the range 0 to stage width.\n     * @type {Number}\n    */\n  \t\tvar _this = possibleConstructorReturn(this, _Event.call(this, type, bubbles, cancelable));\n\n  \t\t_this.stageX = stageX;\n\n  \t\t/**\n     * The normalized y position on the stage. This will always be within the range 0 to stage height.\n     * @type {Number}\n     */\n  \t\t_this.stageY = stageY;\n\n  \t\t/**\n     * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @type {Number}\n    */\n  \t\t_this.rawX = rawX == null ? stageX : rawX;\n\n  \t\t/**\n     * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @type {Number}\n    */\n  \t\t_this.rawY = rawY == null ? stageY : rawY;\n\n  \t\t/**\n     * The native MouseEvent generated by the browser. The properties and API for this\n     * event may differ between browsers. This property will be null if the\n     * EaselJS property was not directly generated from a native MouseEvent.\n     * @type {HTMLMouseEvent}\n     */\n  \t\t_this.nativeEvent = nativeEvent;\n\n  \t\t/**\n     * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n     * supplied id value.\n     * @type {Number}\n     */\n  \t\t_this.pointerID = pointerID;\n\n  \t\t/**\n     * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n     * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n     * @type {Boolean}\n     */\n  \t\t_this.primary = !!primary;\n\n  \t\t/**\n     * The secondary target for the event, if applicable. This is used for mouseout/rollout\n     * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n     * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n     *\n     * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n     * @type {easeljs.DisplayObject}\n     */\n  \t\t_this.relatedTarget = relatedTarget;\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n    * @type {Number}\n    * @readonly\n    */\n\n\n  \t/**\n    * Returns a clone of the MouseEvent instance.\n    * @return {easeljs.MouseEvent} a clone of the MouseEvent instance.\n    */\n  \tMouseEvent.prototype.clone = function clone() {\n  \t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tMouseEvent.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \" (type=\" + this.type + \" stageX=\" + this.stageX + \" stageY=\" + this.stageY + \")]\";\n  \t};\n\n  \tcreateClass(MouseEvent, [{\n  \t\tkey: \"localX\",\n  \t\tget: function get() {\n  \t\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n  \t\t}\n\n  \t\t/**\n     * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n     * @type {Number}\n     * @readonly\n     */\n\n  \t}, {\n  \t\tkey: \"localY\",\n  \t\tget: function get() {\n  \t\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n  \t\t}\n\n  \t\t/**\n     * Indicates whether the event was generated by a touch input (versus a mouse input).\n     * @type {Boolean}\n     * @readonly\n     */\n\n  \t}, {\n  \t\tkey: \"isTouch\",\n  \t\tget: function get() {\n  \t\t\treturn this.pointerID !== -1;\n  \t\t}\n  \t}]);\n  \treturn MouseEvent;\n  }(Event);\n\n  /**\n   * @license Stage\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * A stage is the root level {@link easeljs.Container} for a display list. Each time its {@link easeljs.Stage#tick}\n   * method is called, it will render its display list to its target canvas.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Container\n   * @example\n   * let stage = new Stage(\"canvasElementId\");\n   * let image = new Bitmap(\"imagePath.png\");\n   * stage.addChild(image);\n   * Ticker.addEventListener(\"tick\", event => {\n   *   image.x += 10;\n   * \t stage.update();\n   * });\n   *\n   * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n   * of a canvas object in the current document.\n   */\n\n  var Stage = function (_Container) {\n  \tinherits(Stage, _Container);\n\n  \tfunction Stage(canvas) {\n  \t\tclassCallCheck(this, Stage);\n\n  \t\t/**\n     * Indicates whether the stage should automatically clear the canvas before each render. You can set this to `false`\n     * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n     * example).\n     *\n     * @example\n     * let stage = new Stage(\"canvasId\");\n     * stage.autoClear = false;\n     *\n     * @type {Boolean}\n     * @default true\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Container.call(this));\n\n  \t\t_this.autoClear = true;\n\n  \t\t/**\n     * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n     * first stage that will be ticked (or they will clear each other's render).\n     *\n     * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n     * new canvas or mouse events will not work as expected.\n     *\n     * @example\n     * stage.enableDOMEvents(false);\n     * stage.canvas = anotherCanvas;\n     * stage.enableDOMEvents(true);\n     *\n     * @type {HTMLCanvasElement | Object}\n     */\n  \t\t_this.canvas = typeof canvas === \"string\" ? document.getElementById(canvas) : canvas;\n\n  \t\t/**\n     * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n  \t\t_this.mouseX = 0;\n\n  \t\t/**\n     * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n  \t\t_this.mouseY = 0;\n\n  \t\t/**\n     * Specifies the area of the stage to affect when calling update. This can be use to selectively\n     * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n     * @type {easeljs.Rectangle}\n     */\n  \t\t_this.drawRect = null;\n\n  \t\t/**\n     * Indicates whether display objects should be rendered on whole pixels. You can set the {@link easeljs.DisplayObject.snapToPixelEnabled}\n     * property of display objects to false to enable/disable this behaviour on a per instance basis.\n     * @type {Boolean}\n     * @default false\n     */\n  \t\t_this.snapToPixelEnabled = false;\n\n  \t\t/**\n     * Indicates whether the mouse is currently within the bounds of the canvas.\n     * @type {Boolean}\n     * @default false\n     */\n  \t\t_this.mouseInBounds = false;\n\n  \t\t/**\n     * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.tickOnUpdate = true;\n\n  \t\t/**\n     * If true, mouse move events will continue to be called when the mouse leaves the target canvas.\n     * See {@link easeljs.Stage#mouseInBounds}, and {@link easeljs.MouseEvent} x/y/rawX/rawY.\n     * @type {Boolean}\n     * @default false\n     */\n  \t\t_this.mouseMoveOutside = false;\n\n  \t\t/**\n     * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n     * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.preventSelection = true;\n\n  \t\t/**\n     * The hitArea property is not supported for Stage.\n     * @property hitArea\n     * @override\n     * @default null\n     * @private\n     */\n\n  \t\t/**\n     * Holds objects with data for each active pointer id. Each object has the following properties:\n     * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n     * @type {Object}\n     * @private\n     */\n  \t\t_this._pointerData = {};\n\n  \t\t/**\n     * Number of active pointers.\n     * @type {Number}\n     * @private\n     */\n  \t\t_this._pointerCount = 0;\n\n  \t\t/**\n     * The ID of the primary pointer.\n     * @type {String}\n     * @private\n     */\n  \t\t_this._primaryPointerID = null;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._mouseOverIntervalID = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Stage}\n     */\n  \t\t_this._nextStage = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Stage}\n     */\n  \t\t_this._prevStage = null;\n\n  \t\t_this.enableDOMEvents(true);\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Specifies a target stage that will have mouse/touch interactions relayed to it after this stage handles them.\n    * This can be useful in cases where you have multiple layered canvases and want user interactions\n    * events to pass through.\n    *\n    * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n    * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n    * Considerations when using roll over in relay targets:\n    * <ol>\n    *   <li> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</li>\n    *   <li> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</li>\n    *   <li> All relay targets will share the frequency value of the top-most stage</li>\n    * </ol>\n    *\n    * @example <caption>Relay mouse events from topStage to bottomStage</caption>\n    * topStage.nextStage = bottomStage;\n    *\n    * @example <caption>Disable DOM events</caption>\n    * stage.enableDOMEvents(false);\n    *\n    * @type {easeljs.Stage}\n    */\n\n\n  \t// public methods:\n  \t/**\n    * Each time the update method is called, the stage will call {@link easeljs.Stage#tick}\n    * unless {@link easeljs.Stage#tickOnupdate} is set to false,\n    * and then render the display list to the canvas.\n    *\n    * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {@link core.Ticker} event object, or similar object with a delta property.\n    */\n  \tStage.prototype.update = function update(props) {\n  \t\tif (!this.canvas) {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (this.tickOnUpdate) {\n  \t\t\tthis.tick(props);\n  \t\t}\n  \t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) {\n  \t\t\treturn;\n  \t\t}\n  \t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n  \t\tvar r = this.drawRect,\n  \t\t    ctx = this.canvas.getContext(\"2d\");\n  \t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\tif (this.autoClear) {\n  \t\t\tif (r) {\n  \t\t\t\tctx.clearRect(r.x, r.y, r.width, r.height);\n  \t\t\t} else {\n  \t\t\t\tctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  \t\t\t}\n  \t\t}\n  \t\tctx.save();\n  \t\tif (this.drawRect) {\n  \t\t\tctx.beginPath();\n  \t\t\tctx.rect(r.x, r.y, r.width, r.height);\n  \t\t\tctx.clip();\n  \t\t}\n  \t\tthis.updateContext(ctx);\n  \t\tthis.draw(ctx, false);\n  \t\tctx.restore();\n  \t\tthis.dispatchEvent(\"drawend\");\n  \t};\n\n  \t/**\n    * Propagates a tick event through the display list. This is automatically called by {@link easeljs.Stage#update}\n    * unless {@link easeljs.Stage#tickOnUpdate} is set to false.\n    *\n    * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n    * propagated to listeners.\n    *\n    * Some time-based features in EaselJS (for example {@link easeljs.Sprite#framerate} require that\n    * a {@link core.Ticker#event:tick} event object (or equivalent object with a delta property) be\n    * passed as the `props` parameter to `tick()`.\n    *\n    * @example\n    * Ticker.on(\"tick\", (evt) => {\n    *   // clone the event object from Ticker, and add some custom data to it:\n    * \t let data = evt.clone().set({ greeting: \"hello\", name: \"world\" });\n    * \t // pass it to stage.update():\n    * \t stage.update(data); // subsequently calls tick() with the same param\n    * });\n    *\n    * shape.on(\"tick\", (evt) => {\n    *   console.log(evt.delta); // the delta property from the Ticker tick event object\n    * \t console.log(evt.greeting, evt.name); // custom data: \"hello world\"\n    * });\n    *\n    * @emits easeljs.Stage#event:tickstart\n    * @emits easeljs.Stage#event:tickend\n    * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n    */\n\n\n  \tStage.prototype.tick = function tick(props) {\n  \t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar evtObj = new Event(\"tick\");\n  \t\tif (props) {\n  \t\t\tfor (var n in props) {\n  \t\t\t\tif (props.hasOwnProperty(n)) {\n  \t\t\t\t\tevtObj[n] = props[n];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\tthis._tick(evtObj);\n  \t\tthis.dispatchEvent(\"tickend\");\n  \t};\n\n  \t/**\n    * Default event handler that calls the Stage {@link easeljs.Stage#update} method when a {@link easeljs.DisplayObject#event:tick}\n    * event is received. This allows you to register a Stage instance as a event listener on {@link core.Ticker} directly.\n    * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n    * display object tick handlers, instead of `delta` and `paused` parameters.\n    */\n\n\n  \tStage.prototype.handleEvent = function handleEvent(evt) {\n  \t\tif (evt.type === \"tick\") {\n  \t\t\tthis.update(evt);\n  \t\t}\n  \t};\n\n  \t/**\n    * Clears the target canvas. Useful if {@link easeljs.State#autoClear} is set to `false`.\n    */\n\n\n  \tStage.prototype.clear = function clear() {\n  \t\tif (!this.canvas) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar ctx = this.canvas.getContext(\"2d\");\n  \t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\tctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  \t};\n\n  \t/**\n    * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n    * be specified as the src value of an image element.\n    *\n    * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n    * value is allowed. The default value is a transparent background.\n    * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. If an unknown MIME type\n    * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n    * @return {String} a Base64 encoded image.\n    */\n\n\n  \tStage.prototype.toDataURL = function toDataURL(backgroundColor) {\n  \t\tvar mimeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"image/png\";\n\n  \t\tvar data = void 0,\n  \t\t    ctx = this.canvas.getContext('2d'),\n  \t\t    w = this.canvas.width,\n  \t\t    h = this.canvas.height;\n\n  \t\tif (backgroundColor) {\n  \t\t\tdata = ctx.getImageData(0, 0, w, h);\n  \t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n  \t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n  \t\t\tctx.fillStyle = backgroundColor;\n  \t\t\tctx.fillRect(0, 0, w, h);\n  \t\t}\n\n  \t\tvar dataURL = this.canvas.toDataURL(mimeType);\n\n  \t\tif (backgroundColor) {\n  \t\t\tctx.putImageData(data, 0, 0);\n  \t\t\tctx.globalCompositeOperation = compositeOperation;\n  \t\t}\n\n  \t\treturn dataURL;\n  \t};\n\n  \t/**\n    * Enables or disables (by passing a frequency of 0) mouse over {@link easeljs.DisplayObject#event:mouseover}\n    * and {@link easeljs.DisplayObject#event:mouseout} and roll over events {@link easeljs.DisplayObject#event:rollover}\n    * and {@link easeljs.DisplayObject#event:rollout} for this stage's display list. These events can\n    * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n    * independently of mouse move events via the optional `frequency` parameter.\n    *\n    * @example\n    * const stage = new Stage(\"canvasId\");\n    * stage.enableMouseOver(10); // 10 updates per second\n    *\n    * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n    * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n    * responsive, but uses less CPU.\n    */\n\n\n  \tStage.prototype.enableMouseOver = function enableMouseOver() {\n  \t\tvar _this2 = this;\n\n  \t\tvar frequency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n\n  \t\tif (this._mouseOverIntervalID) {\n  \t\t\tclearInterval(this._mouseOverIntervalID);\n  \t\t\tthis._mouseOverIntervalID = null;\n  \t\t\tif (frequency === 0) {\n  \t\t\t\tthis._testMouseOver(true);\n  \t\t\t}\n  \t\t}\n  \t\tif (frequency <= 0) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis._mouseOverIntervalID = setInterval(function () {\n  \t\t\treturn _this2._testMouseOver();\n  \t\t}, 1000 / Math.min(50, frequency));\n  \t};\n\n  \t/**\n    * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n    * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n    * events from the page.\n    * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n    * new canvas or mouse events will not work as expected.\n    *\n    * @example\n    * stage.enableDOMEvents(false);\n    * stage.canvas = anotherCanvas;\n    * stage.enableDOMEvents(true);\n    *\n    * @param {Boolean} [enable=true] Indicates whether to enable or disable the events.\n    */\n\n\n  \tStage.prototype.enableDOMEvents = function enableDOMEvents() {\n  \t\tvar _this3 = this;\n\n  \t\tvar enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  \t\tvar ls = this._eventListeners;\n  \t\tif (!enable && ls) {\n  \t\t\tfor (var n in ls) {\n  \t\t\t\tvar o = ls[n];\n  \t\t\t\to.t.removeEventListener(n, o.f, false);\n  \t\t\t}\n  \t\t\tthis._eventListeners = null;\n  \t\t} else if (enable && !ls && this.canvas) {\n  \t\t\tvar t = window.addEventListener ? window : document;\n  \t\t\tls = this._eventListeners = {\n  \t\t\t\tmouseup: { t: t, f: function f(e) {\n  \t\t\t\t\t\treturn _this3._handleMouseUp(e);\n  \t\t\t\t\t} },\n  \t\t\t\tmousemove: { t: t, f: function f(e) {\n  \t\t\t\t\t\treturn _this3._handleMouseMove(e);\n  \t\t\t\t\t} },\n  \t\t\t\tdblclick: { t: this.canvas, f: function f(e) {\n  \t\t\t\t\t\treturn _this3._handleDoubleClick(e);\n  \t\t\t\t\t} },\n  \t\t\t\tmousedown: { t: this.canvas, f: function f(e) {\n  \t\t\t\t\t\treturn _this3._handleMouseDown(e);\n  \t\t\t\t\t} }\n  \t\t\t};\n  \t\t\tfor (var _n in ls) {\n  \t\t\t\tvar _o = ls[_n];\n  \t\t\t\t_o.t.addEventListener && _o.t.addEventListener(_n, _o.f, false);\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Stage instances cannot be cloned.\n    * @throws Stage cannot be cloned\n    * @override\n    */\n\n\n  \tStage.prototype.clone = function clone() {\n  \t\tthrow \"Stage cannot be cloned.\";\n  \t};\n\n  \t/**\n    * @protected\n    * @param {HTMLElement} e\n    * @returns {Object}\n    */\n\n\n  \tStage.prototype._getElementRect = function _getElementRect(e) {\n  \t\tvar bounds = void 0;\n  \t\ttry {\n  \t\t\tbounds = e.getBoundingClientRect();\n  \t\t} // this can fail on disconnected DOM elements in IE9\n  \t\tcatch (err) {\n  \t\t\tbounds = { top: e.offsetTop, left: e.offsetLeft, width: e.offsetWidth, height: e.offsetHeight };\n  \t\t}\n\n  \t\tvar offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n  \t\tvar offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n\n  \t\tvar styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n  \t\tvar padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n  \t\tvar padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n  \t\tvar padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n  \t\tvar padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth);\n\n  \t\t// note: in some browsers bounds properties are read only.\n  \t\treturn {\n  \t\t\tleft: bounds.left + offX + padL,\n  \t\t\tright: bounds.right + offX - padR,\n  \t\t\ttop: bounds.top + offY + padT,\n  \t\t\tbottom: bounds.bottom + offY - padB\n  \t\t};\n  \t};\n\n  \t/**\n    * @protected\n    * @param {Number} id\n    * @returns {Object}\n    */\n\n\n  \tStage.prototype._getPointerData = function _getPointerData(id) {\n  \t\tvar data = this._pointerData[id];\n  \t\tif (!data) {\n  \t\t\tdata = this._pointerData[id] = { x: 0, y: 0 };\n  \t\t}\n  \t\treturn data;\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.MouseEvent} [e=window.event]\n    */\n\n\n  \tStage.prototype._handleMouseMove = function _handleMouseMove() {\n  \t\tvar e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;\n\n  \t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n  \t};\n\n  \t/**\n    * @emits {@link easeljs.DisplayObject#event:mouseleave}\n    * @emits {@link easeljs.DisplayObject#event:mouseenter}\n    * @emits {@link easeljs.DisplayObject#event:pressmove}\n    * @emits {@link easeljs.Stage#event:stagemousemove}\n    * @protected\n    * @param {Number} id\n    * @param {easeljs.MouseEvent | Event} e\n    * @param {Number} pageX\n    * @param {Number} pageY\n    * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n    */\n\n\n  \tStage.prototype._handlePointerMove = function _handlePointerMove(id, e, pageX, pageY, owner) {\n  \t\tif (this._prevStage && owner === undefined) {\n  \t\t\treturn;\n  \t\t} // redundant listener.\n  \t\tif (!this.canvas) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar nextStage = this._nextStage,\n  \t\t    o = this._getPointerData(id);\n\n  \t\tvar inBounds = o.inBounds;\n  \t\tthis._updatePointerPosition(id, e, pageX, pageY);\n  \t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n  \t\t\tif (id === -1 && o.inBounds === !inBounds) {\n  \t\t\t\tthis._dispatchMouseEvent(this, inBounds ? \"mouseleave\" : \"mouseenter\", false, id, o, e);\n  \t\t\t}\n\n  \t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n  \t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n  \t\t}\n\n  \t\tnextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n  \t};\n\n  \t/**\n    * @protected\n    * @param {Number} id\n    * @param {easeljs.MouseEvent | Event} e\n    * @param {Number} pageX\n    * @param {Number} pageY\n    */\n\n\n  \tStage.prototype._updatePointerPosition = function _updatePointerPosition(id, e, pageX, pageY) {\n  \t\tvar rect = this._getElementRect(this.canvas);\n  \t\tpageX -= rect.left;\n  \t\tpageY -= rect.top;\n\n  \t\tvar w = this.canvas.width;\n  \t\tvar h = this.canvas.height;\n  \t\tpageX /= (rect.right - rect.left) / w;\n  \t\tpageY /= (rect.bottom - rect.top) / h;\n  \t\tvar o = this._getPointerData(id);\n  \t\tif (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1) {\n  \t\t\to.x = pageX;\n  \t\t\to.y = pageY;\n  \t\t} else if (this.mouseMoveOutside) {\n  \t\t\to.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX;\n  \t\t\to.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY;\n  \t\t}\n\n  \t\to.posEvtObj = e;\n  \t\to.rawX = pageX;\n  \t\to.rawY = pageY;\n\n  \t\tif (id === this._primaryPointerID || id === -1) {\n  \t\t\tthis.mouseX = o.x;\n  \t\t\tthis.mouseY = o.y;\n  \t\t\tthis.mouseInBounds = o.inBounds;\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.MouseEvent} e\n    */\n\n\n  \tStage.prototype._handleMouseUp = function _handleMouseUp(e) {\n  \t\tthis._handlePointerUp(-1, e, false);\n  \t};\n\n  \t/**\n    * @emits {@link easeljs.Stage#event:stagemouseup}\n    * @emits {@link easeljs.DisplayObject#event:click}\n    * @emits {@link easeljs.DisplayObject#event:pressup}\n    * @protected\n    * @param {Number} id\n    * @param {easeljs.MouseEvent | Event} e\n    * @param {Boolean} clear\n    * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n    */\n\n\n  \tStage.prototype._handlePointerUp = function _handlePointerUp(id, e, clear, owner) {\n  \t\tvar nextStage = this._nextStage,\n  \t\t    o = this._getPointerData(id);\n  \t\tif (this._prevStage && owner === undefined) {\n  \t\t\treturn;\n  \t\t} // redundant listener.\n\n  \t\tvar target = null,\n  \t\t    oTarget = o.target;\n  \t\tif (!owner && (oTarget || nextStage)) {\n  \t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n  \t\t}\n\n  \t\tif (o.down) {\n  \t\t\tthis._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target);o.down = false;\n  \t\t}\n\n  \t\tif (target === oTarget) {\n  \t\t\tthis._dispatchMouseEvent(oTarget, \"click\", true, id, o, e);\n  \t\t}\n  \t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n  \t\tif (clear) {\n  \t\t\tif (id == this._primaryPointerID) {\n  \t\t\t\tthis._primaryPointerID = null;\n  \t\t\t}\n  \t\t\tdelete this._pointerData[id];\n  \t\t} else {\n  \t\t\to.target = null;\n  \t\t}\n\n  \t\tnextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.MouseEvent} e\n    */\n\n\n  \tStage.prototype._handleMouseDown = function _handleMouseDown(e) {\n  \t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n  \t};\n\n  \t/**\n    * @emits {@link easeljs.Stage#event:stagemousedown}\n    * @emits {@link easeljs.DisplayObject#event:mousedown}\n    * @protected\n    * @param {Number} id\n    * @param {easeljs.MouseEvent | Event} e\n    * @param {Number} pageX\n    * @param {Number} pageY\n    * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n    */\n\n\n  \tStage.prototype._handlePointerDown = function _handlePointerDown(id, e, pageX, pageY, owner) {\n  \t\tif (this.preventSelection) {\n  \t\t\te.preventDefault();\n  \t\t}\n  \t\tif (this._primaryPointerID == null || id === -1) {\n  \t\t\tthis._primaryPointerID = id;\n  \t\t} // mouse always takes over.\n\n  \t\tif (pageY != null) {\n  \t\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n  \t\t}\n  \t\tvar target = null,\n  \t\t    nextStage = this._nextStage,\n  \t\t    o = this._getPointerData(id);\n  \t\tif (!owner) {\n  \t\t\ttarget = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n  \t\t}\n\n  \t\tif (o.inBounds) {\n  \t\t\tthis._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target);o.down = true;\n  \t\t}\n  \t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n  \t\tnextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n  \t};\n\n  \t/**\n    * @emits {@link easeljs.DisplayObject#event:mouseout}\n    * @emits {@link easeljs.DisplayObject#event:rollout}\n    * @emits {@link easeljs.DisplayObject#event:rollover}\n    * @emits {@link easeljs.DisplayObject#event:mouseover}\n    * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n    * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n    * @param {easeljs.Stage} eventTarget The stage that the cursor is actively over.\n    * @protected\n    */\n\n\n  \tStage.prototype._testMouseOver = function _testMouseOver(clear, owner, eventTarget) {\n  \t\tif (this._prevStage && owner === undefined) {\n  \t\t\treturn;\n  \t\t} // redundant listener.\n\n  \t\tvar nextStage = this._nextStage;\n  \t\tif (!this._mouseOverIntervalID) {\n  \t\t\t// not enabled for mouseover, but should still relay the event.\n  \t\t\tnextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n  \t\t\treturn;\n  \t\t}\n  \t\tvar o = this._getPointerData(-1);\n  \t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n  \t\tif (!o || !clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar e = o.posEvtObj;\n  \t\tvar isEventTarget = eventTarget || e && e.target === this.canvas;\n  \t\tvar target = null,\n  \t\t    common = -1,\n  \t\t    cursor = \"\";\n\n  \t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n  \t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n  \t\t\tthis._mouseOverX = this.mouseX;\n  \t\t\tthis._mouseOverY = this.mouseY;\n  \t\t}\n\n  \t\tvar oldList = this._mouseOverTarget || [];\n  \t\tvar oldTarget = oldList[oldList.length - 1];\n  \t\tvar list = this._mouseOverTarget = [];\n\n  \t\t// generate ancestor list and check for cursor:\n  \t\tvar t = target;\n  \t\twhile (t) {\n  \t\t\tlist.unshift(t);\n  \t\t\tif (!cursor) {\n  \t\t\t\tcursor = t.cursor;\n  \t\t\t}\n  \t\t\tt = t.parent;\n  \t\t}\n  \t\tthis.canvas.style.cursor = cursor;\n  \t\tif (!owner && eventTarget) {\n  \t\t\teventTarget.canvas.style.cursor = cursor;\n  \t\t}\n\n  \t\t// find common ancestor:\n  \t\tfor (var i = 0, l = list.length; i < l; i++) {\n  \t\t\tif (list[i] != oldList[i]) {\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t\tcommon = i;\n  \t\t}\n\n  \t\tif (oldTarget != target) {\n  \t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n  \t\t}\n\n  \t\tfor (var _i = oldList.length - 1; _i > common; _i--) {\n  \t\t\tthis._dispatchMouseEvent(oldList[_i], \"rollout\", false, -1, o, e, target);\n  \t\t}\n\n  \t\tfor (var _i2 = list.length - 1; _i2 > common; _i2--) {\n  \t\t\tthis._dispatchMouseEvent(list[_i2], \"rollover\", false, -1, o, e, oldTarget);\n  \t\t}\n\n  \t\tif (oldTarget != target) {\n  \t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n  \t\t}\n\n  \t\tnextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n  \t};\n\n  \t/**\n    * @emits {@link easeljs.DisplayObject#event:dblclick}\n    * @protected\n    * @param {easeljs.MouseEvent} e\n    * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n    */\n\n\n  \tStage.prototype._handleDoubleClick = function _handleDoubleClick(e, owner) {\n  \t\tvar target = null,\n  \t\t    nextStage = this._nextStage,\n  \t\t    o = this._getPointerData(-1);\n  \t\tif (!owner) {\n  \t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n  \t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n  \t\t}\n  \t\tnextStage && nextStage._handleDoubleClick(e, owner || target && this);\n  \t};\n\n  \t/**\n    * @protected\n    * @param {easeljs.DisplayObject} target\n    * @param {String} type\n    * @param {Boolean} bubbles\n    * @param {Number} pointerId\n    * @param {Object} o\n    * @param {easeljs.MouseEvent} [nativeEvent]\n    * @param {easeljs.DisplayObject} [relatedTarget]\n    */\n\n\n  \tStage.prototype._dispatchMouseEvent = function _dispatchMouseEvent(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n  \t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n  \t\tif (!target || !bubbles && !target.hasEventListener(type)) {\n  \t\t\treturn;\n  \t\t}\n  \t\t/*\n    // TODO: account for stage transformations?\n    this._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n    let pt = this._mtx.transformPoint(o.x, o.y);\n    let evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n    */\n  \t\tvar evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n  \t\ttarget.dispatchEvent(evt);\n  \t};\n\n  \tcreateClass(Stage, [{\n  \t\tkey: \"nextStage\",\n  \t\tget: function get() {\n  \t\t\treturn this._nextStage;\n  \t\t},\n  \t\tset: function set(stage) {\n  \t\t\tif (this._nextStage) {\n  \t\t\t\tthis._nextStage._prevStage = null;\n  \t\t\t}\n  \t\t\tif (stage) {\n  \t\t\t\tstage._prevStage = this;\n  \t\t\t}\n  \t\t\tthis._nextStage = stage;\n  \t\t}\n  \t}]);\n  \treturn Stage;\n  }(Container);\n\n  /**\r\n   * @license Canvas\r\n   * Visit http://createjs.com/ for documentation, updates and examples.\r\n   *\r\n   * Copyright (c) 2017 gskinner.com, inc.\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person\r\n   * obtaining a copy of this software and associated documentation\r\n   * files (the \"Software\"), to deal in the Software without\r\n   * restriction, including without limitation the rights to use,\r\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the\r\n   * Software is furnished to do so, subject to the following\r\n   * conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be\r\n   * included in all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n   * OTHER DEALINGS IN THE SOFTWARE.\r\n   */\n\n  /**\r\n   * Global utility for creating canvases.\r\n   * @memberof easeljs\n   * @name easeljs.createCanvas\n   * @param {Number} [width=1]\n   * @param {Number} [height=1]\r\n   */\n  function createCanvas() {\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    var c = void 0;\n    if (window.createjs !== undefined && window.createjs.createCanvas !== undefined) {\n      c = window.createjs.createCanvas();\n    }\n    if (HTMLCanvasElement) {\n      c = new HTMLCanvasElement();\n    }\n    if (c !== undefined) {\n      c.width = width;\n      c.height = height;\n      return c;\n    }\n\n    throw \"Canvas not supported in this environment.\";\n  }\n\n  /**\n   * @license VideoBuffer\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2010 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n   * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n   * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n   *\n   * @example\n   * let buffer = new VideoBuffer(video);\n   * let bitmap = new Bitmap(buffer);\n   *\n   * @param {HTMLVideoElement} video The HTML video element to buffer.\n   */\n\n  var VideoBuffer = function () {\n    function VideoBuffer(video) {\n      classCallCheck(this, VideoBuffer);\n\n\n      /**\n       * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n       * @protected\n       * @type {Number}\n       */\n      this.readyState = video.readyState;\n\n      /**\n       * @protected\n       * @type {HTMLVideoElement}\n       */\n      this._video = video;\n\n      /**\n       * @protected\n       * @type {HTMLCanvasElement}\n       */\n      this._canvas = null;\n\n      /**\n       * @protected\n       * @type {Number}\n       * @default -1\n       */\n      this._lastTime = -1;\n\n      if (this.readyState < 2) {\n        video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n      }\n      // {once: true} isn't supported everywhere, but its a non-critical optimization here.\n    }\n\n    /**\n     * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n     * Primarily for use by {@link easeljs.Bitmap}.\n     */\n\n\n    VideoBuffer.prototype.getImage = function getImage() {\n      if (this.readyState < 2) {\n        return;\n      }\n      var canvas = this._canvas,\n          video = this._video;\n      if (!canvas) {\n        canvas = this._canvas = createCanvas();\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n      }\n      if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n        var ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        this._lastTime = video.currentTime;\n      }\n      return canvas;\n    };\n\n    /**\n     * @protected\n     */\n\n\n    VideoBuffer.prototype._videoReady = function _videoReady() {\n      this.readyState = 2;\n    };\n\n    return VideoBuffer;\n  }();\n\n  /**\n   * @license Bitmap\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n   * HTML element, or a string.\n   *\n   * <strong>Notes:</strong>\n   * <ol>\n   *     <li>When using a video source that may loop or seek, use a {@link easeljs.VideoBuffer} object to\n   *      blinking / flashing.\n   *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n   *      will be displayed.</li>\n   *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n   *     the Bitmap can be cached.</li>\n   *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n   *     happens in all browsers except recent Firefox builds.</li>\n   *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n   *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n   *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n   * </ol>\n   *\n   * @memberof easeljs\n   * @extends easeljs.DisplayObject\n   * @example\n   * const bitmap = new Bitmap(\"imagePath.jpg\");\n   *\n   * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n   * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n   * If the latter, a new Image instance with the URL as its src will be used.\n   */\n\n  var Bitmap = function (_DisplayObject) {\n  \tinherits(Bitmap, _DisplayObject);\n\n  \tfunction Bitmap(imageOrUri) {\n  \t\tclassCallCheck(this, Bitmap);\n\n  \t\t/**\n     * The source image to display. This can be a CanvasImageSource\n     * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n     * If the latter, a new Image instance with the URL as its src will be used.\n     * @property image\n     * @type {CanvasImageSource | Object}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n  \t\tif (typeof imageOrUri === \"string\") {\n  \t\t\t_this.image = document.createElement(\"img\");\n  \t\t\t_this.image.src = imageOrUri;\n  \t\t} else {\n  \t\t\t_this.image = imageOrUri;\n  \t\t}\n\n  \t\t/**\n     * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n     * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n     * @type {easeljs.Rectangle}\n     * @default null\n     */\n  \t\t_this.sourceRect = null;\n\n  \t\t/**\n     * Set as compatible with WebGL.\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n  \t\treturn _this;\n  \t}\n\n  \tBitmap.prototype.isVisible = function isVisible() {\n  \t\tvar image = this.image;\n  \t\tvar hasContent = this.cacheCanvas || image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  \t};\n\n  \tBitmap.prototype.draw = function draw(ctx) {\n  \t\tvar ignoreCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  \t\tif (_DisplayObject.prototype.draw.call(this, ctx, ignoreCache)) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tvar img = this.image,\n  \t\t    rect = this.sourceRect;\n  \t\tif (img instanceof VideoBuffer) {\n  \t\t\timg = img.getImage();\n  \t\t}\n  \t\tif (img == null) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tif (rect) {\n  \t\t\t// some browsers choke on out of bound values, so we'll fix them:\n  \t\t\tvar x1 = rect.x,\n  \t\t\t    y1 = rect.y,\n  \t\t\t    x2 = x1 + rect.width,\n  \t\t\t    y2 = y1 + rect.height,\n  \t\t\t    x = 0,\n  \t\t\t    y = 0,\n  \t\t\t    w = img.width,\n  \t\t\t    h = img.height;\n  \t\t\tif (x1 < 0) {\n  \t\t\t\tx -= x1;x1 = 0;\n  \t\t\t}\n  \t\t\tif (x2 > w) {\n  \t\t\t\tx2 = w;\n  \t\t\t}\n  \t\t\tif (y1 < 0) {\n  \t\t\t\ty -= y1;y1 = 0;\n  \t\t\t}\n  \t\t\tif (y2 > h) {\n  \t\t\t\ty2 = h;\n  \t\t\t}\n  \t\t\tctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n  \t\t} else {\n  \t\t\tctx.drawImage(img, 0, 0);\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n  \t// Bitmap. This is why they have no method implementations.\n\n  \t/**\n    * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n    * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n    *\n    * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n    * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n    *\n    * @alias easeljs.Bitmap#cache\n    */\n\n  \t/**\n    * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n    * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n    *\n    * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n    * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n    *\n    * @alias easeljs.Bitmap#updateCache\n    */\n\n  \t/**\n    * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n    * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n    *\n    * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n    * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n    *\n    * @alias easeljs.Bitmap#uncache\n    */\n\n  \tBitmap.prototype.getBounds = function getBounds() {\n  \t\tvar rect = _DisplayObject.prototype.getBounds.call(this);\n  \t\tif (rect) {\n  \t\t\treturn rect;\n  \t\t}\n  \t\tvar image = this.image,\n  \t\t    o = this.sourceRect || image;\n  \t\tvar hasContent = image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n  \t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n  \t};\n\n  \t/**\n    * Returns a clone of the Bitmap instance.\n    * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n    * @return {easeljs.Bitmap} A clone of the Bitmap instance.\n    */\n\n\n  \tBitmap.prototype.clone = function clone(node) {\n  \t\tvar img = this.image;\n  \t\tif (img != null && node != null) {\n  \t\t\timg = img.cloneNode();\n  \t\t}\n  \t\tvar bmp = new Bitmap(img);\n  \t\tif (this.sourceRect) {\n  \t\t\tbmp.sourceRect = this.sourceRect.clone();\n  \t\t}\n  \t\tthis._cloneProps(bmp);\n  \t\treturn bmp;\n  \t};\n\n  \treturn Bitmap;\n  }(DisplayObject);\n\n  /**\n   * @license Sprite\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n   * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n   * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n   * play frames as an animation, and even sequence animations together.\n   *\n   * @memberof easeljs\n   * @extends easeljs.DisplayObject\n   * @example\n   * let sprite = new Sprite(spriteSheet);\n   * sprite.gotoAndStop(\"frameName\");\n   *\n   * Until {@link easeljs.Sprite#gotoAndStop} or {@link easeljs.Sprite#gotoAndPlay} is called,\n   * only the first defined frame defined in the sprite sheet will be displayed.\n   *\n   * @see {@link easeljs.SpriteSheet \"More information on setting up frames and animations.\"}\n   * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n   * dimensions, and frame data.\n   * @param {String | Number} [frameOrAnimation] The frame number or animation to play initially.\n   */\n\n  var Sprite = function (_DisplayObject) {\n  \tinherits(Sprite, _DisplayObject);\n\n  \tfunction Sprite(spriteSheet, frameOrAnimation) {\n  \t\tclassCallCheck(this, Sprite);\n\n  \t\t/**\n     * The frame index that will be drawn when draw is called. Note that with some {@link easeljs.SpriteSheet}\n     * definitions, this will advance non-sequentially. This will always be an integer value.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n  \t\t_this.currentFrame = 0;\n\n  \t\t/**\n     * Returns the name of the currently playing animation.\n     * @type {String}\n     * @readonly\n     */\n  \t\t_this.currentAnimation = null;\n\n  \t\t/**\n     * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n     * sheet of icons, set paused to true, and display the appropriate icon by setting `currentFrame`.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.paused = true;\n\n  \t\t/**\n     * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\n     * @type {easeljs.SpriteSheet}\n     * @readonly\n     */\n  \t\t_this.spriteSheet = spriteSheet;\n\n  \t\t/**\n     * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n     * from 0 to n-1, where n is the number of frames in the current animation.\n     * This could be a non-integer value if using time-based playback, or if the animation's speed is not an integer.\n     * @see {@link easeljs.Sprite#framerate}\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.currentAnimationFrame = 0;\n\n  \t\t/**\n     * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n     * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {@link easeljs.Stage#update}.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.framerate = 0;\n\n  \t\t/**\n     * Current animation object.\n     * @protected\n     * @type {Object}\n     * @default null\n     */\n  \t\t_this._animation = null;\n\n  \t\t/**\n     * Current frame index.\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n  \t\t_this._currentFrame = null;\n\n  \t\t/**\n     * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n  \t\t_this._skipAdvance = false;\n\n  \t\t/**\n     * Set as compatible with WebGL.\n     * @protected\n     * @type {Number}\n     * @default 1\n     */\n  \t\t_this._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n  \t\tif (frameOrAnimation != null) {\n  \t\t\t_this.gotoAndPlay(frameOrAnimation);\n  \t\t}\n  \t\treturn _this;\n  \t}\n\n  \tSprite.prototype.isVisible = function isVisible() {\n  \t\tvar hasContent = this.cacheCanvas || this.spriteSheet.complete;\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  \t};\n\n  \tSprite.prototype.draw = function draw(ctx, ignoreCache) {\n  \t\tif (_DisplayObject.prototype.draw.call(this, ctx, ignoreCache)) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tthis._normalizeFrame();\n  \t\tvar o = this.spriteSheet.getFrame(this._currentFrame | 0);\n  \t\tif (!o) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tvar rect = o.rect;\n  \t\tif (rect.width && rect.height) {\n  \t\t\tctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height);\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n  \t// Bitmap. This is why they have no method implementations.\n\n  \t/**\n    * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n    * You should not cache Sprite instances as it can degrade performance.\n    * @name easeljs.Sprite#cache\n    */\n\n  \t/**\n    * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n    * You should not cache Sprite instances as it can degrade performance.\n    * @name easeljs.Sprite#updateCache\n    */\n\n  \t/**\n    * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n    * You should not cache Sprite instances as it can degrade performance.\n    * @name easeljs.Sprite#uncache\n    */\n\n  \t/**\n    * Play (unpause) the current animation. The Sprite will be paused if either {@link easeljs.Sprite#stop}\n    * or {@link easeljs.Sprite#gotoAndStop} is called. Single frame animations will remain unchanged.\n    */\n\n\n  \tSprite.prototype.play = function play() {\n  \t\tthis.paused = false;\n  \t};\n\n  \t/**\n    * Stop playing a running animation. The Sprite will be playing if {@link easeljs.Sprite#gotoAndPlay} is called.\n    * Note that calling `gotoAndPlay()` or {@link easeljs.Sprite#play} will resume playback.\n    */\n\n\n  \tSprite.prototype.stop = function stop() {\n  \t\tthis.paused = true;\n  \t};\n\n  \t/**\n    * Sets paused to false and plays the specified animation name, named frame, or frame number.\n    * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n    * and begin playing.\n    */\n\n\n  \tSprite.prototype.gotoAndPlay = function gotoAndPlay(frameOrAnimation) {\n  \t\tthis.paused = false;\n  \t\tthis._skipAdvance = true;\n  \t\tthis._goto(frameOrAnimation);\n  \t};\n\n  \t/**\n    * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n    * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n    * and stop.\n    */\n\n\n  \tSprite.prototype.gotoAndStop = function gotoAndStop(frameOrAnimation) {\n  \t\tthis.paused = true;\n  \t\tthis._goto(frameOrAnimation);\n  \t};\n\n  \t/**\n    * Advances the playhead. This occurs automatically each tick by default.\n    * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n    * or its SpriteSheet.\n   */\n\n\n  \tSprite.prototype.advance = function advance(time) {\n  \t\tvar fps = this.framerate || this.spriteSheet.framerate;\n  \t\tvar t = fps && time != null ? time / (1000 / fps) : 1;\n  \t\tthis._normalizeFrame(t);\n  \t};\n\n  \t/**\n    * Returns a {@link easeljs.Rectangle} instance defining the bounds of the current frame relative to\n    * the origin. For example, a 90 x 70 frame with `regX=50` and `regY=40` would return a\n    * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n    *\n    * @see {@link easeljs.SpriteSheet#frameBounds}\n    * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n    */\n\n\n  \tSprite.prototype.getBounds = function getBounds() {\n  \t\t// TODO: should this normalizeFrame?\n  \t\treturn _DisplayObject.prototype.getBounds.call(this) || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n  \t};\n\n  \t/**\n    * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned instances.\n    * @return {easeljs.Sprite} a clone of the Sprite instance.\n    */\n\n\n  \tSprite.prototype.clone = function clone() {\n  \t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n  \t};\n\n  \t/**\n    * @param {easeljs.Sprite} o\n    * @return {easeljs.Sprite} o\n    * @protected\n    */\n\n\n  \tSprite.prototype._cloneProps = function _cloneProps(o) {\n  \t\t_DisplayObject.prototype._cloneProps.call(this, o);\n  \t\to.currentFrame = this.currentFrame;\n  \t\to.currentAnimation = this.currentAnimation;\n  \t\to.paused = this.paused;\n  \t\to.currentAnimationFrame = this.currentAnimationFrame;\n  \t\to.framerate = this.framerate;\n\n  \t\to._animation = this._animation;\n  \t\to._currentFrame = this._currentFrame;\n  \t\to._skipAdvance = this._skipAdvance;\n  \t\treturn o;\n  \t};\n\n  \tSprite.prototype._tick = function _tick(evtObj) {\n  \t\tif (!this.paused) {\n  \t\t\tif (!this._skipAdvance) {\n  \t\t\t\tthis.advance(evtObj && evtObj.delta);\n  \t\t\t}\n  \t\t\tthis._skipAdvance = false;\n  \t\t}\n  \t\t_DisplayObject.prototype._tick.call(this, evtObj);\n  \t};\n\n  \t/**\n    * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n    * @protected\n    * @param {Number} [frameDelta=0]\n    */\n\n\n  \tSprite.prototype._normalizeFrame = function _normalizeFrame() {\n  \t\tvar frameDelta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  \t\tvar animation = this._animation;\n  \t\tvar paused = this.paused;\n  \t\tvar frame = this._currentFrame;\n\n  \t\tif (animation) {\n  \t\t\tvar speed = animation.speed || 1;\n  \t\t\tvar animFrame = this.currentAnimationFrame;\n  \t\t\tvar l = animation.frames.length;\n  \t\t\tif (animFrame + frameDelta * speed >= l) {\n  \t\t\t\tvar next = animation.next;\n  \t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n  \t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n  \t\t\t\t\treturn;\n  \t\t\t\t} else if (next) {\n  \t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n  \t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n  \t\t\t\t} else {\n  \t\t\t\t\t// end.\n  \t\t\t\t\tthis.paused = true;\n  \t\t\t\t\tanimFrame = animation.frames.length - 1;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tanimFrame += frameDelta * speed;\n  \t\t\t}\n  \t\t\tthis.currentAnimationFrame = animFrame;\n  \t\t\tthis._currentFrame = animation.frames[animFrame | 0];\n  \t\t} else {\n  \t\t\tframe = this._currentFrame += frameDelta;\n  \t\t\tvar _l = this.spriteSheet.getNumFrames();\n  \t\t\tif (frame >= _l && _l > 0) {\n  \t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, _l - 1)) {\n  \t\t\t\t\t// looped.\n  \t\t\t\t\tif ((this._currentFrame -= _l) >= _l) {\n  \t\t\t\t\t\treturn this._normalizeFrame();\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\tframe = this._currentFrame | 0;\n  \t\tif (this.currentFrame != frame) {\n  \t\t\tthis.currentFrame = frame;\n  \t\t\tthis.dispatchEvent(\"change\");\n  \t\t}\n  \t};\n\n  \t/**\n    * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {@link easlejs.Sprite#stop},\n    * {@link easeljs.Sprite#gotoAndPlay}, etc.)\n    * @param animation\n    * @param frame\n    * @param paused\n    * @param next\n    * @param end\n    * @private\n    */\n  \tSprite.prototype._dispatchAnimationEnd = function _dispatchAnimationEnd(animation, frame, paused, next, end) {\n  \t\tvar name = animation ? animation.name : null;\n  \t\tif (this.hasEventListener(\"animationend\")) {\n  \t\t\tvar evt = new Event(\"animationend\");\n  \t\t\tevt.name = name;\n  \t\t\tevt.next = next;\n  \t\t\tthis.dispatchEvent(evt);\n  \t\t}\n  \t\t// did the animation get changed in the event stack?:\n  \t\tvar changed = this._animation != animation || this._currentFrame != frame;\n  \t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n  \t\tif (!changed && !paused && this.paused) {\n  \t\t\tthis.currentAnimationFrame = end;changed = true;\n  \t\t}\n  \t\treturn changed;\n  \t};\n\n  \t/**\n    * Moves the playhead to the specified frame number or animation.\n    * @param {String | Number} frameOrAnimation The frame number or animation that the playhead should move to.\n    * @param {Number} [frame=0] The frame of the animation to go to. Defaults to 0.\n    * @protected\n    */\n\n\n  \tSprite.prototype._goto = function _goto(frameOrAnimation) {\n  \t\tvar frame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  \t\tthis.currentAnimationFrame = 0;\n  \t\tif (isNaN(frameOrAnimation)) {\n  \t\t\tvar data = this.spriteSheet.getAnimation(frameOrAnimation);\n  \t\t\tif (data) {\n  \t\t\t\tthis._animation = data;\n  \t\t\t\tthis.currentAnimation = frameOrAnimation;\n  \t\t\t\tthis._normalizeFrame(frame);\n  \t\t\t}\n  \t\t} else {\n  \t\t\tthis.currentAnimation = this._animation = null;\n  \t\t\tthis._currentFrame = frameOrAnimation;\n  \t\t\tthis._normalizeFrame();\n  \t\t}\n  \t};\n\n  \treturn Sprite;\n  }(DisplayObject);\n\n  /**\n   * @license BitmapText\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n   * but automatic wrapping is not supported. See the {@link easeljs.BitmapText#spriteSheet} property for more information on defining glyphs.\n   *\n   * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n   * As such, methods like addChild and removeChild are disabled.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Container\n   *\n   * @param {String} [text=\"\"] The text to display.\n   * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n   */\n\n  var BitmapText = function (_Container) {\n  \tinherits(BitmapText, _Container);\n\n  \tfunction BitmapText() {\n  \t\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  \t\tvar spriteSheet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  \t\tclassCallCheck(this, BitmapText);\n\n  \t\t/**\n     * The text to display.\n     * @type {String}\n     * @default \"\"\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Container.call(this));\n\n  \t\t_this.text = text;\n\n  \t\t/**\n     * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n     * should have a single frame animation defined in the sprite sheet named the same as\n     * corresponding character.\n     *\n     * @example\n     * // the following animation definition would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character.\n     * \"A\": {frames: [0]}\n     * // The short form is also acceptable:\n     * \"A\": 0\n     *\n     * Note that if a character in the text is not found in the sprite sheet, it will also\n     * try to use the alternate case (upper or lower).\n     *\n     * @see {@link easeljs.SpriteSheet}\n     * @type {easeljs.SpriteSheet}\n     * @default null\n     */\n  \t\t_this.spriteSheet = spriteSheet;\n\n  \t\t/**\n     * The height of each line of text. If 0, then it will use a line height calculated\n     * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n     * those characters are not defined, it will use the height of the first frame of the\n     * sprite sheet.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.lineHeight = 0;\n\n  \t\t/**\n     * This spacing (in pixels) will be added after each character in the output.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.letterSpacing = 0;\n\n  \t\t/**\n     * If a space character is not defined in the sprite sheet, then empty pixels equal to\n     * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n     * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n     * those characters are not defined, it will use the width of the first frame of the\n     * sprite sheet.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.spaceWidth = 0;\n\n  \t\t/**\n    * @type {Object}\n    * @protected\n    */\n  \t\t_this._oldProps = { text: 0, spriteSheet: 0, lineHeight: 0, letterSpacing: 0, spaceWidth: 0 };\n\n  \t\t/**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @type {easeljs.Stage}\n     * @protected\n     */\n  \t\t_this._oldStage = null;\n\n  \t\t/**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @type {Function}\n     * @protected\n     */\n  \t\t_this._drawAction = null;\n\n  \t\treturn _this;\n  \t}\n\n  \tBitmapText.prototype.draw = function draw(ctx, ignoreCache) {\n  \t\tif (this.drawCache(ctx, ignoreCache)) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis._updateState();\n  \t\t_Container.prototype.draw.call(this, ctx, ignoreCache);\n  \t};\n\n  \tBitmapText.prototype.getBounds = function getBounds() {\n  \t\tthis._updateText();\n  \t\treturn _Container.prototype.getBounds.call(this);\n  \t};\n\n  \tBitmapText.prototype.isVisible = function isVisible() {\n  \t\tvar hasContent = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n  \t};\n\n  \tBitmapText.prototype.clone = function clone() {\n  \t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n  \t};\n\n  \t/**\n    * <strong>Disabled in BitmapText.</strong>\n    */\n\n\n  \tBitmapText.prototype.addChild = function addChild() {};\n\n  \t/**\n    * <strong>Disabled in BitmapText.</strong>\n    */\n\n\n  \tBitmapText.prototype.addChildAt = function addChildAt() {};\n\n  \t/**\n    * <strong>Disabled in BitmapText.</strong>\n    */\n\n\n  \tBitmapText.prototype.removeChild = function removeChild() {};\n\n  \t/**\n    * <strong>Disabled in BitmapText.</strong>\n    */\n\n\n  \tBitmapText.prototype.removeChildAt = function removeChildAt() {};\n\n  \t/**\n    * <strong>Disabled in BitmapText.</strong>\n    */\n\n\n  \tBitmapText.prototype.removeAllChildren = function removeAllChildren() {};\n\n  \tBitmapText.prototype._updateState = function _updateState() {\n  \t\tthis._updateText();\n  \t};\n\n  \t/**\n   * @param {easeljs.BitmapText} o\n   * @return {easeljs.BitmapText}\n   * @protected\n   */\n\n\n  \tBitmapText.prototype._cloneProps = function _cloneProps(o) {\n  \t\t_Container.prototype._cloneProps.call(this, o);\n  \t\to.lineHeight = this.lineHeight;\n  \t\to.letterSpacing = this.letterSpacing;\n  \t\to.spaceWidth = this.spaceWidth;\n  \t\treturn o;\n  \t};\n\n  \t/**\n    * @param {String} character\n    * @param {easeljs.SpriteSheet} spriteSheet\n    * @return {Number}\n    * @protected\n    */\n\n\n  \tBitmapText.prototype._getFrameIndex = function _getFrameIndex(character, spriteSheet) {\n  \t\tvar c = void 0,\n  \t\t    o = spriteSheet.getAnimation(character);\n  \t\tif (!o) {\n  \t\t\tcharacter != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null);\n  \t\t\tif (c) {\n  \t\t\t\to = spriteSheet.getAnimation(c);\n  \t\t\t}\n  \t\t}\n  \t\treturn o && o.frames[0];\n  \t};\n\n  \t/**\n    * @param {String} character\n    * @param {easeljs.SpriteSheet} spriteSheet\n    * @return {Object}\n    * @protected\n    */\n\n\n  \tBitmapText.prototype._getFrame = function _getFrame(character, spriteSheet) {\n  \t\tvar index = this._getFrameIndex(character, spriteSheet);\n  \t\treturn index == null ? index : spriteSheet.getFrame(index);\n  \t};\n\n  \t/**\n    * @param {easeljs.SpriteSheet} ss\n    * @return {Number}\n    * @protected\n    */\n\n\n  \tBitmapText.prototype._getLineHeight = function _getLineHeight(ss) {\n  \t\tvar frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n  \t\treturn frame ? frame.rect.height : 1;\n  \t};\n\n  \t/**\n    * @param {easeljs.SpriteSheet} ss\n    * @return {Number}\n    * @protected\n    */\n\n\n  \tBitmapText.prototype._getSpaceWidth = function _getSpaceWidth(ss) {\n  \t\tvar frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n  \t\treturn frame ? frame.rect.width : 1;\n  \t};\n\n  \tBitmapText.prototype._tick = function _tick(evtObj) {\n  \t\tvar stage = this.stage;\n  \t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n  \t\t_Container.prototype._tick.call(this, evtObj);\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tBitmapText.prototype._updateText = function _updateText() {\n  \t\tvar x = 0,\n  \t\t    y = 0,\n  \t\t    o = this._oldProps,\n  \t\t    change = false,\n  \t\t    spaceW = this.spaceWidth,\n  \t\t    lineH = this.lineHeight,\n  \t\t    ss = this.spriteSheet;\n  \t\tvar pool = BitmapText._spritePool,\n  \t\t    kids = this.children,\n  \t\t    childIndex = 0,\n  \t\t    numKids = kids.length,\n  \t\t    sprite = void 0;\n\n  \t\tfor (var n in o) {\n  \t\t\tif (o[n] != this[n]) {\n  \t\t\t\to[n] = this[n];\n  \t\t\t\tchange = true;\n  \t\t\t}\n  \t\t}\n  \t\tif (!change) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar hasSpace = !!this._getFrame(\" \", ss);\n  \t\tif (!hasSpace && !spaceW) {\n  \t\t\tspaceW = this._getSpaceWidth(ss);\n  \t\t}\n  \t\tif (!lineH) {\n  \t\t\tlineH = this._getLineHeight(ss);\n  \t\t}\n\n  \t\tfor (var i = 0, l = this.text.length; i < l; i++) {\n  \t\t\tvar character = this.text.charAt(i);\n  \t\t\tif (character === \" \" && !hasSpace) {\n  \t\t\t\tx += spaceW;\n  \t\t\t\tcontinue;\n  \t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n  \t\t\t\tif (character === \"\\r\" && this.text.charAt(i + 1) === \"\\n\") {\n  \t\t\t\t\ti++;\n  \t\t\t\t} // crlf\n  \t\t\t\tx = 0;\n  \t\t\t\ty += lineH;\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\tvar index = this._getFrameIndex(character, ss);\n  \t\t\tif (index == null) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\tif (childIndex < numKids) {\n  \t\t\t\tsprite = kids[childIndex];\n  \t\t\t} else {\n  \t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n  \t\t\t\tsprite.parent = this;\n  \t\t\t\tnumKids++;\n  \t\t\t}\n  \t\t\tsprite.spriteSheet = ss;\n  \t\t\tsprite.gotoAndStop(index);\n  \t\t\tsprite.x = x;\n  \t\t\tsprite.y = y;\n  \t\t\tchildIndex++;\n\n  \t\t\tx += sprite.getBounds().width + this.letterSpacing;\n  \t\t}\n\n  \t\twhile (numKids > childIndex) {\n  \t\t\t// faster than removeChild.\n  \t\t\tpool.push(sprite = kids.pop());\n  \t\t\tsprite.parent = null;\n  \t\t\tnumKids--;\n  \t\t}\n  \t\tif (pool.length > BitmapText.maxPoolSize) {\n  \t\t\tpool.length = BitmapText.maxPoolSize;\n  \t\t}\n  \t};\n\n  \treturn BitmapText;\n  }(Container);\n  BitmapText.maxPoolSize = 100;\n  /**\n   * Sprite object pool.\n   * @type {Array}\n   * @static\n   * @private\n   * @readonly\n   */\n  BitmapText._spritePool = [];\n\n  /**\n   * @license DOMElement\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n   *\n   * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n   * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n   * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n   * drawn in front of or behind the canvas).\n   *\n   * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n   * the DOM Object be added to a div that also contains the canvas so that they share the same position\n   * on the page.\n   *\n   * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n   * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n   * content.\n   *\n   * <h4>Mouse Interaction</h4>\n   *\n   * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n   * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n   * the htmlElement (note, this does not support EventDispatcher)\n   *\n   *      var domElement = new createjs.DOMElement(htmlElement);\n   *      domElement.htmlElement.onclick = function() {\n   *          console.log(\"clicked\");\n   *      }\n   *\n   * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n   * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n   * stale information.\n   *\n   * @memberof easeljs\n   * @extends DisplayObject\n   * @param {HTMLElement | String} htmlElement A reference or id for the DOM element to manage.\n   */\n\n  var DOMElement = function (_DisplayObject) {\n  \tinherits(DOMElement, _DisplayObject);\n\n  \tfunction DOMElement(htmlElement) {\n  \t\tclassCallCheck(this, DOMElement);\n\n  \t\tvar _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n  \t\tif (typeof htmlElement === \"string\") {\n  \t\t\thtmlElement = document.getElementById(htmlElement);\n  \t\t}\n  \t\t_this.mouseEnabled = false;\n\n  \t\tvar style = htmlElement.style;\n  \t\tstyle.position = \"absolute\";\n  \t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n  \t\t/**\n     * The DOM object to manage.\n     * @type {HTMLElement}\n     */\n  \t\t_this.htmlElement = htmlElement;\n\n  \t\t/**\n     * @type {easeljs.Matrix2D}\n     * @default null\n     * @protected\n     */\n  \t\t_this._oldProps = null;\n\n  \t\t/**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @type {easeljs.Stage}\n     * @default null\n     * @protected\n     */\n  \t\t_this._oldStage = null;\n  \t\t/**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @type {Function}\n     * @default null\n     * @protected\n     */\n  \t\t_this._drawAction = null;\n  \t\treturn _this;\n  \t}\n\n  \tDOMElement.prototype.isVisible = function isVisible() {\n  \t\treturn this.htmlElement != null;\n  \t};\n\n  \tDOMElement.prototype.draw = function draw(ctx, ignoreCache) {\n  \t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n  \t\t// the actual update happens in _handleDrawEnd\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.cache = function cache() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.uncache = function uncache() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.updateCache = function updateCache() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.hitTest = function hitTest() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.localToGlobal = function localToGlobal() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.globalToLocal = function globalToLocal() {};\n\n  \t/**\n    * Disabled in DOMElement.\n    */\n\n\n  \tDOMElement.prototype.localToLocal = function localToLocal() {};\n\n  \t/**\n    * DOMElement cannot be cloned.\n    * @throws DOMElement cannot be cloned\n    */\n\n\n  \tDOMElement.prototype.clone = function clone() {\n  \t\tthrow \"DOMElement cannot be cloned.\";\n  \t};\n\n  \tDOMElement.prototype._tick = function _tick(evtObj) {\n  \t\tvar stage = this.stage;\n  \t\tif (stage != null && stage !== this._oldStage) {\n  \t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n  \t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n  \t\t\tthis._oldStage = stage;\n  \t\t}\n  \t\t_DisplayObject.prototype._tick.call(this, evtObj);\n  \t};\n\n  \t/**\n    * @param {core.Event} evt\n    * @protected\n    */\n\n\n  \tDOMElement.prototype._handleDrawEnd = function _handleDrawEnd(evt) {\n  \t\tvar o = this.htmlElement;\n  \t\tif (!o) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar style = o.style;\n\n  \t\tvar props = this.getConcatenatedDisplayProps(this._props),\n  \t\t    mtx = props.matrix;\n\n  \t\tvar visibility = props.visible ? \"visible\" : \"hidden\";\n  \t\tif (visibility != style.visibility) {\n  \t\t\tstyle.visibility = visibility;\n  \t\t}\n  \t\tif (!props.visible) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar oldProps = this._oldProps,\n  \t\t    oldMtx = oldProps && oldProps.matrix;\n  \t\tvar n = 10000; // precision\n\n  \t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n  \t\t\tvar str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n  \t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n  \t\t\tstyle.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n  \t\t\tif (!oldProps) {\n  \t\t\t\toldProps = this._oldProps = new DisplayProps(true, null);\n  \t\t\t}\n  \t\t\toldProps.matrix.copy(mtx);\n  \t\t}\n\n  \t\tif (oldProps.alpha != props.alpha) {\n  \t\t\tstyle.opacity = \"\" + (props.alpha * n | 0) / n;\n  \t\t\toldProps.alpha = props.alpha;\n  \t\t}\n  \t};\n\n  \treturn DOMElement;\n  }(DisplayObject);\n\n  /**\n   * @license Graphics\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n   * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {@link easeljs.Graphics#draw}\n   * directly, or it can be used with the {@link easeljs.Shape} object to draw vector graphics within the\n   * context of an EaselJS display list.\n   *\n   * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n   * instantiating Graphics command objects and adding them to the graphics queue via {@link easeljs.Graphics#append}.\n   * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n   *\n   * <h4>Tiny API</h4>\n   * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n   * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n   * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n   * descriptions in the docs.\n   *\n   * <table>\n   *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n   *     <tr><td>mt</td><td>{@link easeljs.Graphics#moveTo}</td>\n   *     <td>lt</td> <td>{@link easeljs.Graphics#lineTo}</td></tr>\n   *     <tr><td>a/at</td><td>{@link easeljs.Graphics#arc} / {@link easeljs.Graphics#arcTo}</td>\n   *     <td>bt</td><td>{@link easeljs.Graphics#bezierCurveTo}</td></tr>\n   *     <tr><td>qt</td><td>{@link easeljs.Graphics#quadraticCurveTo} (also curveTo)</td>\n   *     <td>r</td><td>{@link easeljs.Graphics#rect}</td></tr>\n   *     <tr><td>cp</td><td>{@link easeljs.Graphics#closePath}</td>\n   *     <td>c</td><td>{@link easeljs.Graphics#clear}</td></tr>\n   *     <tr><td>f</td><td>{@link easeljs.Graphics#beginFill}</td>\n   *     <td>lf</td><td>{@link easeljs.Graphics#beginLinearGradientFill}</td></tr>\n   *     <tr><td>rf</td><td>{@link easeljs.Graphics#beginRadialGradientFill}</td>\n   *     <td>bf</td><td>{@link easeljs.Graphics#beginBitmapFill}</td></tr>\n   *     <tr><td>ef</td><td>{@link easeljs.Graphics#endFill}</td>\n   *     <td>ss / sd</td><td>{@link easeljs.Graphics#setStrokeStyle} / {@link easeljs.Graphics#setStrokeDash}</td></tr>\n   *     <tr><td>s</td><td>{@link easeljs.Graphics#beginStroke}</td>\n   *     <td>ls</td><td>{@link easeljs.Graphics#beginLinearGradientStroke}</td></tr>\n   *     <tr><td>rs</td><td>{@link easeljs.Graphics#beginRadialGradientStroke}</td>\n   *     <td>bs</td><td>{@link easeljs.Graphics#beginBitmapStroke}</td></tr>\n   *     <tr><td>es</td><td>{@link easeljs.Graphics#endStroke}</td>\n   *     <td>dr</td><td>{@link easeljs.Graphics#drawRect}</td></tr>\n   *     <tr><td>rr</td><td>{@link easeljs.Graphics#drawRoundRect}</td>\n   *     <td>rc</td><td>{@link easeljs.Graphics#drawRoundRectComplex}</td></tr>\n   *     <tr><td>dc</td><td>{@link easeljs.Graphics#drawCircle}</td>\n   *     <td>de</td><td>{@link easeljs.Graphics#drawEllipse}</td></tr>\n   *     <tr><td>dp</td><td>{@link easeljs.Graphics#drawPolyStar}</td>\n   *     <td>p</td><td>{@link easeljs.Graphics#decodePath}</td></tr>\n   * </table>\n   *\n   * @example\n   * var g = new createjs.Graphics();\n   * g.setStrokeStyle(1);\n   * g.beginStroke(\"#000000\");\n   * g.beginFill(\"red\");\n   * g.drawCircle(0,0,30);\n   *\n   * @example\n   * // All drawing methods in Graphics return the Graphics instance, so they can be chained together.\n   * graphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n   *\n   * @example\n   * // Each graphics API call generates a command object (see below). The last command to be created can be accessed via .command\n   * let fillCommand = graphics.beginFill(\"red\").command;\n   * fillCommand.style = \"blue\";\n   * // or change it to a bitmap fill:\n   * fillCommand.bitmap(img);\n   *\n   * @example\n   * // For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly.\n   * // In this case, you need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n   *\n   * // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n   * graphics.append(Graphics.beginCmd);\n   * // we need to define the path before applying the fill:\n   * let circle = new Graphics.Circle(0,0,30);\n   * graphics.append(circle);\n   * // fill the path we just defined:\n   * let fill = new Graphics.Fill(\"red\");\n   * graphics.append(fill);\n   *\n   * // These approaches can be used together, for example to insert a custom command:\n   * graphics.beginFill(\"red\");\n   * let customCommand = new CustomSpiralCommand(etc);\n   * graphics.append(customCommand);\n   * graphics.beginFill(\"blue\");\n   * graphics.drawCircle(0, 0, 30);\n   *\n   * @example <caption>Using the Tiny API</caption>\n   * graphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n   *\n   * @see {@link easeljs.Graphics#append}\n   * @memberof easeljs\n   */\n\n  var Graphics = function () {\n  \tfunction Graphics() {\n  \t\tclassCallCheck(this, Graphics);\n\n  \t\t/**\n     * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n     * to a Fill command in order to dynamically update the color later by using:\n     *\n     * @example\n     * let fill = graphics.beginFill(\"red\").command;\n     * // update color later:\n     * fill.style = \"yellow\";\n     *\n     * @type {Object}\n     * @default null\n     */\n  \t\tthis.command = null;\n\n  \t\t// private properties\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.Stroke}\n     */\n  \t\tthis._stroke = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.StrokeStyle}\n     */\n  \t\tthis._strokeStyle = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.StrokeStyle}\n     */\n  \t\tthis._oldStrokeStyle = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.StrokeDash}\n     */\n  \t\tthis._strokeDash = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.StrokeDash}\n     */\n  \t\tthis._oldStrokeDash = null;\n\n  \t\t/**\n     * @protected\n     * @type {easeljs.Graphics.Fill}\n     */\n  \t\tthis._fill = null;\n\n  \t\t/**\n     * @protected\n     * @type {Boolean}\n     */\n  \t\tthis._strokeIgnoreScale = false;\n\n  \t\t/**\n     * Indicates the last instruction index that was committed.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\tthis._commitIndex = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\tthis._instructions = [];\n\n  \t\t/**\n     * Uncommitted instructions.\n     * @protected\n     * @type {Array}\n     */\n  \t\tthis._activeInstructions = [];\n\n  \t\t/**\n     * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n  \t\tthis._dirty = false;\n\n  \t\t/**\n     * Index to draw from if a store operation has happened.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n  \t\tthis._storeIndex = 0;\n\n  \t\t/**\n     * Maps the familiar ActionScript `curveTo()` method to the functionally similar {@link easeljs.Graphics#quadraticCurveTo} method.\n     * @param {Number} cpx\n     * @param {Number} cpy\n     * @param {Number} x\n     * @param {Number} y\n     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n     * @chainable\n     */\n  \t\tthis.curveTo = this.quadraticCurveTo;\n\n  \t\t/**\n     * Maps the familiar ActionScript `drawRect()` method to the functionally similar {@link easeljs.Graphics#rect} method.\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w Width of the rectangle\n     * @param {Number} h Height of the rectangle\n     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n     * @chainable\n     */\n  \t\tthis.drawRect = this.rect;\n\n  \t\t// tiny api\n  \t\tthis.mt = this.moveTo;\n  \t\tthis.lt = this.lineTo;\n  \t\tthis.at = this.arcTo;\n  \t\tthis.bt = this.bezierCurveTo;\n  \t\tthis.qt = this.quadraticCurveTo;\n  \t\tthis.a = this.arc;\n  \t\tthis.r = this.rect;\n  \t\tthis.cp = this.closePath;\n  \t\tthis.c = this.clear;\n  \t\tthis.f = this.beginFill;\n  \t\tthis.lf = this.beginLinearGradientFill;\n  \t\tthis.rf = this.beginRadialGradientFill;\n  \t\tthis.bf = this.beginBitmapFill;\n  \t\tthis.ef = this.endFill;\n  \t\tthis.ss = this.setStrokeStyle;\n  \t\tthis.sd = this.setStrokeDash;\n  \t\tthis.s = this.beginStroke;\n  \t\tthis.ls = this.beginLinearGradientStroke;\n  \t\tthis.rs = this.beginRadialGradientStroke;\n  \t\tthis.bs = this.beginBitmapStroke;\n  \t\tthis.es = this.endStroke;\n  \t\tthis.dr = this.drawRect;\n  \t\tthis.rr = this.drawRoundRect;\n  \t\tthis.rc = this.drawRoundRectComplex;\n  \t\tthis.dc = this.drawCircle;\n  \t\tthis.de = this.drawEllipse;\n  \t\tthis.dp = this.drawPolyStar;\n  \t\tthis.p = this.decodePath;\n\n  \t\tthis.clear();\n  \t}\n\n  \t/**\n    * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n    * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n    * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n    * param.\n    *\n    * @example\n    * Graphics.getRGB(50, 100, 150, 0.5); // rgba(50,100,150,0.5)\n    * Graphics.getRGB(0xFF00FF, 0.2); // rgba(255,0,255,0.2)\n    *\n    * @static\n    * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n    * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n    * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n    * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n    * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n    * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n    */\n\n\n  \tGraphics.getRGB = function getRGB(r, g, b, alpha) {\n  \t\tif (r != null && b == null) {\n  \t\t\talpha = g;\n  \t\t\tb = r & 0xFF;\n  \t\t\tg = r >> 8 & 0xFF;\n  \t\t\tr = r >> 16 & 0xFF;\n  \t\t}\n  \t\tif (alpha == null) {\n  \t\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  \t\t} else {\n  \t\t\treturn \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  \t\t}\n  \t};\n\n  \t/**\n    * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n    * or if alpha is null then in the format \"hsl(360,100,100)\".\n    *\n    * @example\n    * Graphics.getHSL(150, 100, 70); // hsl(150,100,70)\n    *\n    * @static\n    * @param {Number} hue The hue component for the color, between 0 and 360.\n    * @param {Number} saturation The saturation component for the color, between 0 and 100.\n    * @param {Number} lightness The lightness component for the color, between 0 and 100.\n    * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n    * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n    * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n    */\n\n\n  \tGraphics.getHSL = function getHSL(hue, saturation, lightness, alpha) {\n  \t\tif (alpha == null) {\n  \t\t\treturn \"hsl(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%)\";\n  \t\t} else {\n  \t\t\treturn \"hsl(\" + hue % 360 + \",\" + saturation + \"%,\" + lightness + \"%,\" + alpha + \")\";\n  \t\t}\n  \t};\n\n  \t/**\n    * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n    * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n    *\n    * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n    * @type {Array}\n    * @readonly\n    */\n\n\n  \t/**\n    * Returns true if this Graphics instance has no drawing commands.\n    * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n    */\n  \tGraphics.prototype.isEmpty = function isEmpty() {\n  \t\treturn !(this._instructions.length || this._activeInstructions.length);\n  \t};\n\n  \t/**\n    * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n    * Returns true if the draw was handled (useful for overriding functionality).\n    *\n    * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n    *\n    * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n    * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n    */\n\n\n  \tGraphics.prototype.draw = function draw(ctx, data) {\n  \t\tthis._updateInstructions();\n  \t\tvar instr = this._instructions;\n  \t\tvar l = instr.length;\n  \t\tfor (var i = this._storeIndex; i < l; i++) {\n  \t\t\tinstr[i].exec(ctx, data);\n  \t\t}\n  \t};\n\n  \t/**\n    * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n    * stroke descriptions. Used for `DisplayObject.mask` to draw the clipping path, for example.\n    *\n    * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n    *\n    * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n    */\n\n\n  \tGraphics.prototype.drawAsPath = function drawAsPath(ctx) {\n  \t\tthis._updateInstructions();\n  \t\tvar instr = void 0,\n  \t\t    instrs = this._instructions;\n  \t\tvar l = instrs.length;\n  \t\tfor (var i = this._storeIndex; i < l; i++) {\n  \t\t\t// the first command is always a beginPath command.\n  \t\t\tif ((instr = instrs[i]).path !== false) {\n  \t\t\t\tinstr.exec(ctx);\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Moves the drawing point to the specified position.\n    * A tiny API method \"mt\" also exists.\n    * @param {Number} x The x coordinate the drawing point should move to.\n    * @param {Number} y The y coordinate the drawing point should move to.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls).\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.moveTo = function moveTo(x, y) {\n  \t\treturn this.append(new MoveTo(x, y), true);\n  \t};\n\n  \t/**\n    * Draws a line from the current drawing point to the specified position, which become the new current drawing\n    * point. Note that you *must* call {@link easeljs.Graphics#moveTo} before the first `lineTo()`.\n    * A tiny API method \"lt\" also exists.\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths) \"WHATWG spec\"}\n    * @param {Number} x The x coordinate the drawing point should draw to.\n    * @param {Number} y The y coordinate the drawing point should draw to.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.lineTo = function lineTo(x, y) {\n  \t\treturn this.append(new LineTo(x, y));\n  \t};\n\n  \t/**\n    * Draws an arc with the specified control points and radius.\n    * A tiny API method \"at\" also exists.\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto \"WHATWG spec\"}\n    * @param {Number} x1\n    * @param {Number} y1\n    * @param {Number} x2\n    * @param {Number} y2\n    * @param {Number} radius\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.arcTo = function arcTo(x1, y1, x2, y2, radius) {\n  \t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n  \t};\n\n  \t/**\n    * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\n    * A tiny API method \"a\" also exists.\n    *\n    * @example\n    * // draw a full circle with a radius of 20 centered at (100, 100)\n    * arc(100, 100, 20, 0, Math.PI*2);\n    *\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc \"WHATWG spec\"}\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} radius\n    * @param {Number} startAngle Measured in radians.\n    * @param {Number} endAngle Measured in radians.\n    * @param {Boolean} anticlockwise\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.arc = function arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n  \t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n  \t};\n\n  \t/**\n    * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\n    * A tiny API method \"qt\" also exists.\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto \"WHATWG spec\"}\n    * @param {Number} cpx\n    * @param {Number} cpy\n    * @param {Number} x\n    * @param {Number} y\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.quadraticCurveTo = function quadraticCurveTo(cpx, cpy, x, y) {\n  \t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n  \t};\n\n  \t/**\n    * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\n    * A tiny API method \"bt\" also exists.\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto \"WHATWG spec\"}\n    * @param {Number} cp1x\n    * @param {Number} cp1y\n    * @param {Number} cp2x\n    * @param {Number} cp2y\n    * @param {Number} x\n    * @param {Number} y\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.bezierCurveTo = function bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n  \t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n  \t};\n\n  \t/**\n    * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n    * A tiny API method \"r\" also exists.\n    * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect \"WHATWG spec\"}\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} w Width of the rectangle\n    * @param {Number} h Height of the rectangle\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.rect = function rect(x, y, w, h) {\n  \t\treturn this.append(new Rect(x, y, w, h));\n  \t};\n\n  \t/**\n    * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n    * since the fill or stroke was last set.\n    * A tiny API method \"cp\" also exists.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.closePath = function closePath() {\n  \t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n  \t};\n\n  \t/**\n    * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n    * to be redefined to draw shapes following a clear call.\n    * A tiny API method \"c\" also exists.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.clear = function clear() {\n  \t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n  \t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n  \t\tthis._dirty = this._strokeIgnoreScale = false;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Begins a fill with the specified color. This ends the current sub-path.\n    * A tiny API method \"f\" also exists.\n    * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n    * null will result in no fill.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginFill = function beginFill(color) {\n  \t\treturn this._setFill(color ? new Fill(color) : null);\n  \t};\n\n  \t/**\n    * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1).\n    * A tiny API method \"lf\" also exists.\n    *\n    * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n    * graphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n    *\n    * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n    * drawing from red to blue.\n    * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n    * the first color to 10% then interpolating to the second color at 90%.\n    * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n    * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n    * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n    * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginLinearGradientFill = function beginLinearGradientFill(colors, ratios, x0, y0, x1, y1) {\n  \t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n  \t};\n\n  \t/**\n    * Begins a radial gradient fill. This ends the current sub-path.\n    * A tiny API method \"rf\" also exists.\n    *\n    * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a circle to display it</caption>\n    * graphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n    *\n    * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n    * a gradient drawing from red to blue.\n    * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n    * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n    * @param {Number} x0 Center position of the inner circle that defines the gradient.\n    * @param {Number} y0 Center position of the inner circle that defines the gradient.\n    * @param {Number} r0 Radius of the inner circle that defines the gradient.\n    * @param {Number} x1 Center position of the outer circle that defines the gradient.\n    * @param {Number} y1 Center position of the outer circle that defines the gradient.\n    * @param {Number} r1 Radius of the outer circle that defines the gradient.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginRadialGradientFill = function beginRadialGradientFill(colors, ratios, x0, y0, r0, x1, y1, r1) {\n  \t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  \t};\n\n  \t/**\n    * Begins a pattern fill using the specified image. This ends the current sub-path.\n    * A tiny API method \"bf\" also exists.\n    * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n    * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n    * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n    * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n    * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n    * @param {easeljs.Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n    * will be applied relative to the parent transform.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginBitmapFill = function beginBitmapFill(image, repetition, matrix) {\n  \t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n  \t};\n\n  \t/**\n    * Ends the current sub-path, and begins a new one with no fill. Functionally identical to `beginFill(null)`.\n    * A tiny API method \"ef\" also exists.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.endFill = function endFill() {\n  \t\treturn this.beginFill();\n  \t};\n\n  \t/**\n    * Sets the stroke style.\n    * A tiny API method \"ss\" also exists.\n    *\n    * @example\n    * graphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n    *\n    * @param {Number} thickness The width of the stroke.\n    * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n    * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n    * the tiny API.\n    * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n    * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n    * for use with the tiny API.\n    * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n    * controls at what point a mitered joint will be clipped.\n    * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n    * of active transformations.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.setStrokeStyle = function setStrokeStyle(thickness) {\n  \t\tvar caps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar joints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  \t\tvar miterLimit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n  \t\tvar ignoreScale = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  \t\tthis._updateInstructions(true);\n  \t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n  \t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n  \t\tif (this._stroke) {\n  \t\t\tthis._stroke.ignoreScale = ignoreScale;\n  \t\t}\n  \t\tthis._strokeIgnoreScale = ignoreScale;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Sets or clears the stroke dash pattern.\n    * A tiny API method `sd` also exists.\n    *\n    * @example\n    * graphics.setStrokeDash([20, 10], 0);\n    *\n    * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n    * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n    * Passing null or an empty array will clear the existing stroke dash.\n    * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.setStrokeDash = function setStrokeDash(segments) {\n  \t\tvar offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  \t\tthis._updateInstructions(true);\n  \t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Begins a stroke with the specified color. This ends the current sub-path.\n    * A tiny API method \"s\" also exists.\n    *\n    * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n    * null will result in no stroke.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginStroke = function beginStroke(color) {\n  \t\treturn this._setStroke(color ? new Stroke(color) : null);\n  \t};\n\n  \t/**\n    * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\n    * A tiny API method \"ls\" also exists.\n    *\n    * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n    * graphics.setStrokeStyle(10)\n    *   .beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120)\n    *   .drawRect(20, 20, 120, 120);\n    *\n    * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n    * a gradient drawing from red to blue.\n    * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n    * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n    * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n    * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n    * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n    * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginLinearGradientStroke = function beginLinearGradientStroke(colors, ratios, x0, y0, x1, y1) {\n  \t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n  \t};\n\n  \t/**\n    * Begins a radial gradient stroke. This ends the current sub-path.\n    * A tiny API method \"rs\" also exists.\n    *\n    * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a rectangle to display it</caption>\n    * graphics.setStrokeStyle(10)\n    *   .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n    *   .drawRect(50, 90, 150, 110);\n    *\n    * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n    * a gradient drawing from red to blue.\n    * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n    * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n    * to 100%.\n    * @param {Number} x0 Center position of the inner circle that defines the gradient.\n    * @param {Number} y0 Center position of the inner circle that defines the gradient.\n    * @param {Number} r0 Radius of the inner circle that defines the gradient.\n    * @param {Number} x1 Center position of the outer circle that defines the gradient.\n    * @param {Number} y1 Center position of the outer circle that defines the gradient.\n    * @param {Number} r1 Radius of the outer circle that defines the gradient.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginRadialGradientStroke = function beginRadialGradientStroke(colors, ratios, x0, y0, r0, x1, y1, r1) {\n  \t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  \t};\n\n  \t/**\n    * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n    * strokes do not currently support a matrix parameter due to limitations in the canvas API.\n    * A tiny API method \"bs\" also exists.\n    *\n    * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n    * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n    * @param {String} [repetition=\"repeat\"] Indicates whether to repeat the image in the fill area. One of\n    * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.beginBitmapStroke = function beginBitmapStroke(image) {\n  \t\tvar repetition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"repeat\";\n\n  \t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n  \t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n  \t};\n\n  \t/**\n    * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to `beginStroke(null)`.\n    * A tiny API method \"es\" also exists.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.endStroke = function endStroke() {\n  \t\treturn this.beginStroke();\n  \t};\n\n  \t/**\n    * Draws a rounded rectangle with all corners with the specified radius.\n    * @param {Number} x\n    * @param {Number} y\n    * @param {Number} w\n    * @param {Number} h\n    * @param {Number} radius Corner radius.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.drawRoundRect = function drawRoundRect(x, y, w, h, radius) {\n  \t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n  \t};\n\n  \t/**\n    * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.\n    * A tiny API method \"rc\" also exists.\n    * @param {Number} x The horizontal coordinate to draw the round rect.\n    * @param {Number} y The vertical coordinate to draw the round rect.\n    * @param {Number} w The width of the round rect.\n    * @param {Number} h The height of the round rect.\n    * @param {Number} radiusTL Top left corner radius.\n    * @param {Number} radiusTR Top right corner radius.\n    * @param {Number} radiusBR Bottom right corner radius.\n    * @param {Number} radiusBL Bottom left corner radius.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.drawRoundRectComplex = function drawRoundRectComplex(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n  \t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n  \t};\n\n  \t/**\n    * Draws a circle with the specified radius at (x, y).\n    * A tiny API method \"dc\" also exists.\n    *\n    * @example\n    * let g = new Graphics();\n    * g.setStrokeStyle(1);\n    * g.beginStroke(Graphics.getRGB(0,0,0));\n    * g.beginFill(Graphics.getRGB(255,0,0));\n    * g.drawCircle(0,0,3);\n    * let s = new Shape(g);\n    * s.x = 100;\n    * s.y = 100;\n    * stage.addChild(s);\n    * stage.update();\n    *\n    * @param {Number} x x coordinate center point of circle.\n    * @param {Number} y y coordinate center point of circle.\n    * @param {Number} radius Radius of circle.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.drawCircle = function drawCircle(x, y, radius) {\n  \t\treturn this.append(new Circle(x, y, radius));\n  \t};\n\n  \t/**\n    * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {@link easels.Graphics#drawCircle},\n    * except the width and height can be different.\n    * A tiny API method \"de\" also exists.\n    * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n    * which draws from center.\n    * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n    * which draws from the center.\n    * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n    * number.\n    * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.drawEllipse = function drawEllipse(x, y, w, h) {\n  \t\treturn this.append(new Ellipse(x, y, w, h));\n  \t};\n\n  \t/**\n    * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of points.\n    * A tiny API method \"dp\" also exists.\n    *\n    * @example <caption>Draw a 5 pointed star shape centered at 100, 100 and with a radius of 50</caption>\n    * graphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n    * // Note: -90 makes the first point vertical\n    *\n    * @param {Number} x Position of the center of the shape.\n    * @param {Number} y Position of the center of the shape.\n    * @param {Number} radius The outer radius of the shape.\n    * @param {Number} sides The number of points on the star or sides on the polygon.\n    * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n    * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n    * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n    * directly to the right of the center.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.drawPolyStar = function drawPolyStar(x, y, radius, sides, pointSize, angle) {\n  \t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n  \t};\n\n  \t/**\n    * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n    * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n    * {@link easeljs.Graphics#draw}. The latter will usually be the Shape instance that called draw.\n    *\n    * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n    * built-in or custom graphics commands.\n    *\n    * @example\n    * // attach data to our shape, so we can access it during the draw:\n    * shape.color = \"red\";\n    *\n    * // append a Circle command object:\n    * shape.graphics.append(new Graphics.Circle(50, 50, 30));\n    *\n    * // append a custom command object with an exec method that sets the fill style\n    * // based on the shape's data, and then fills the circle.\n    * shape.graphics.append({\n    *   exec: (ctx, shape) => {\n    *     ctx.fillStyle = shape.color;\n    *     ctx.fill();\n    *   }\n    * });\n    *\n    * @param {Object} command A graphics command object exposing an \"exec\" method.\n    * @param {Boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.append = function append(command, clean) {\n  \t\tthis._activeInstructions.push(command);\n  \t\tthis.command = command;\n  \t\tif (!clean) {\n  \t\t\tthis._dirty = true;\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Decodes a compact encoded path string into a series of draw instructions.\n    * This format is not intended to be human readable, and is meant for use by authoring tools.\n    * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n    * commands.\n    *\n    * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n    * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n    * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n    * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n    * latter. Bits 5 and 6 are currently unused.\n    *\n    * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n    * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n    * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n    * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n    * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n    * appropriate).\n    *\n    * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n    * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n    * parameter.\n    * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n    * indicate 1500 tenths of a pixel.\n    * <br />AA - 000000000000. Absolute y position of 0.\n    * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n    * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n    * provide an absolute position of +150.0px.\n    * <br />AAA - 000000000000000000. A y delta value of 0.\n    *\n    * A tiny API method \"p\" also exists.\n    *\n    * @param {String} str The path string to decode.\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.decodePath = function decodePath(str) {\n  \t\tvar instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n  \t\tvar paramCount = [2, 2, 4, 6, 0];\n  \t\tvar i = 0;\n  \t\tvar l = str.length;\n  \t\tvar params = [];\n  \t\tvar x = 0,\n  \t\t    y = 0;\n  \t\tvar base64 = Graphics._BASE_64;\n\n  \t\twhile (i < l) {\n  \t\t\tvar c = str.charAt(i);\n  \t\t\tvar n = base64[c];\n  \t\t\tvar fi = n >> 3; // highest order bits 1-3 code for operation.\n  \t\t\tvar f = instructions[fi];\n  \t\t\t// check that we have a valid instruction & that the unused bits are empty:\n  \t\t\tif (!f || n & 3) {\n  \t\t\t\tthrow \"Bad path data (@\" + i + \"):c\";\n  \t\t\t}\n  \t\t\tvar pl = paramCount[fi];\n  \t\t\tif (!fi) {\n  \t\t\t\tx = y = 0;\n  \t\t\t} // move operations reset the position.\n  \t\t\tparams.length = 0;\n  \t\t\ti++;\n  \t\t\tvar charCount = (n >> 2 & 1) + 2; // 4th header bit indicates number size for this operation.\n  \t\t\tfor (var p = 0; p < pl; p++) {\n  \t\t\t\tvar num = base64[str.charAt(i)];\n  \t\t\t\tvar sign = num >> 5 ? -1 : 1;\n  \t\t\t\tnum = (num & 31) << 6 | base64[str.charAt(i + 1)];\n  \t\t\t\tif (charCount === 3) {\n  \t\t\t\t\tnum = num << 6 | base64[str.charAt(i + 2)];\n  \t\t\t\t}\n  \t\t\t\tnum = sign * num / 10;\n  \t\t\t\tif (p % 2) {\n  \t\t\t\t\tx = num += x;\n  \t\t\t\t} else {\n  \t\t\t\t\ty = num += y;\n  \t\t\t\t}\n  \t\t\t\tparams[p] = num;\n  \t\t\t\ti += charCount;\n  \t\t\t}\n  \t\t\tf.apply(this, params);\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n    * the existing store. This also affects `drawAsPath()`.\n    *\n    * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n    * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n    * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n    *\n    * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n    * the fill or stroke.\n    *\n    * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n    * segments) are added to a Shape, it can be rasterized using {@link easeljs.DisplayObject#updateCache},\n    * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n    *\n    * @example\n    * // set up cache:\n    * shape.cache(0,0,500,500,scale);\n    *\n    * // when the user drags, draw a new line:\n    * shape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n    * // then draw it into the existing cache:\n    * shape.updateCache(\"source-over\");\n    * // store the new line, so it isn't redrawn next time:\n    * shape.store();\n    *\n    * // then, when the window resizes, we can re-render at a different scale:\n    * // first, unstore all our lines:\n    * shape.unstore();\n    * // then cache using the new scale:\n    * shape.cache(0,0,500,500,newScale);\n    * // finally, store the existing commands again:\n    * shape.store();\n    *\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.store = function store() {\n  \t\tthis._updateInstructions(true);\n  \t\tthis._storeIndex = this._instructions.length;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Unstores any graphics commands that were previously stored using {@link easeljs.Graphics#store}\n    * so that they will be executed in subsequent draw calls.\n    *\n    * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tGraphics.prototype.unstore = function unstore() {\n  \t\tthis._storeIndex = 0;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n    * @return {easeljs.Graphics} A clone of the current Graphics instance.\n    */\n\n\n  \tGraphics.prototype.clone = function clone() {\n  \t\tvar o = new Graphics();\n  \t\to.command = this.command;\n  \t\to._stroke = this._stroke;\n  \t\to._strokeStyle = this._strokeStyle;\n  \t\to._strokeDash = this._strokeDash;\n  \t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n  \t\to._fill = this._fill;\n  \t\to._instructions = this._instructions.slice();\n  \t\to._commitIndex = this._commitIndex;\n  \t\to._activeInstructions = this._activeInstructions.slice();\n  \t\to._dirty = this._dirty;\n  \t\to._storeIndex = this._storeIndex;\n  \t\treturn o;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tGraphics.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * @param {Boolean} commit\n    * @protected\n    */\n\n\n  \tGraphics.prototype._updateInstructions = function _updateInstructions(commit) {\n  \t\tvar instr = this._instructions,\n  \t\t    active = this._activeInstructions,\n  \t\t    commitIndex = this._commitIndex;\n\n  \t\tif (this._dirty && active.length) {\n  \t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n  \t\t\tinstr.push(Graphics.beginCmd);\n\n  \t\t\tvar l = active.length,\n  \t\t\t    ll = instr.length;\n  \t\t\tinstr.length = ll + l;\n  \t\t\tfor (var i = 0; i < l; i++) {\n  \t\t\t\tinstr[i + ll] = active[i];\n  \t\t\t}\n\n  \t\t\tif (this._fill) {\n  \t\t\t\tinstr.push(this._fill);\n  \t\t\t}\n  \t\t\tif (this._stroke) {\n  \t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n  \t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n  \t\t\t\t\tinstr.push(this._strokeDash);\n  \t\t\t\t}\n  \t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n  \t\t\t\t\tinstr.push(this._strokeStyle);\n  \t\t\t\t}\n  \t\t\t\tif (commit) {\n  \t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n  \t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n  \t\t\t\t}\n  \t\t\t\tinstr.push(this._stroke);\n  \t\t\t}\n\n  \t\t\tthis._dirty = false;\n  \t\t}\n\n  \t\tif (commit) {\n  \t\t\tactive.length = 0;\n  \t\t\tthis._commitIndex = instr.length;\n  \t\t}\n  \t};\n\n  \t/**\n    * @param {easeljs.Graphics.Fill} fill\n    * @protected\n    */\n  \tGraphics.prototype._setFill = function _setFill(fill) {\n  \t\tthis._updateInstructions(true);\n  \t\tthis.command = this._fill = fill;\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * @param {easeljs.Graphics.Stroke} stroke\n    * @protected\n    */\n\n\n  \tGraphics.prototype._setStroke = function _setStroke(stroke) {\n  \t\tthis._updateInstructions(true);\n  \t\tif (this.command = this._stroke = stroke) {\n  \t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \tcreateClass(Graphics, [{\n  \t\tkey: \"instructions\",\n  \t\tget: function get() {\n  \t\t\tthis._updateInstructions();\n  \t\t\treturn this._instructions;\n  \t\t}\n  \t}], [{\n  \t\tkey: \"LineTo\",\n  \t\tget: function get() {\n  \t\t\treturn LineTo;\n  \t\t}\n  \t}, {\n  \t\tkey: \"MoveTo\",\n  \t\tget: function get() {\n  \t\t\treturn MoveTo;\n  \t\t}\n  \t}, {\n  \t\tkey: \"ArcTo\",\n  \t\tget: function get() {\n  \t\t\treturn ArcTo;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Arc\",\n  \t\tget: function get() {\n  \t\t\treturn Arc;\n  \t\t}\n  \t}, {\n  \t\tkey: \"QuadraticCurveTo\",\n  \t\tget: function get() {\n  \t\t\treturn QuadraticCurveTo;\n  \t\t}\n  \t}, {\n  \t\tkey: \"BezierCurveTo\",\n  \t\tget: function get() {\n  \t\t\treturn BezierCurveTo;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Rect\",\n  \t\tget: function get() {\n  \t\t\treturn Rect;\n  \t\t}\n  \t}, {\n  \t\tkey: \"ClosePath\",\n  \t\tget: function get() {\n  \t\t\treturn ClosePath;\n  \t\t}\n  \t}, {\n  \t\tkey: \"BeginPath\",\n  \t\tget: function get() {\n  \t\t\treturn BeginPath;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Fill\",\n  \t\tget: function get() {\n  \t\t\treturn Fill;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Stroke\",\n  \t\tget: function get() {\n  \t\t\treturn Stroke;\n  \t\t}\n  \t}, {\n  \t\tkey: \"StrokeStyle\",\n  \t\tget: function get() {\n  \t\t\treturn StrokeStyle;\n  \t\t}\n  \t}, {\n  \t\tkey: \"StrokeDash\",\n  \t\tget: function get() {\n  \t\t\treturn StrokeDash;\n  \t\t}\n  \t}, {\n  \t\tkey: \"RoundRect\",\n  \t\tget: function get() {\n  \t\t\treturn RoundRect;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Circle\",\n  \t\tget: function get() {\n  \t\t\treturn Circle;\n  \t\t}\n  \t}, {\n  \t\tkey: \"Ellipse\",\n  \t\tget: function get() {\n  \t\t\treturn Ellipse;\n  \t\t}\n  \t}, {\n  \t\tkey: \"PolyStar\",\n  \t\tget: function get() {\n  \t\t\treturn PolyStar;\n  \t\t}\n  \t}]);\n  \treturn Graphics;\n  }();\n\n  var LineTo = function () {\n  \tfunction LineTo(x, y) {\n  \t\tclassCallCheck(this, LineTo);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tLineTo.prototype.exec = function exec(ctx) {\n  \t\tctx.lineTo(this.x, this.y);\n  \t};\n\n  \treturn LineTo;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#moveTo}\n   * @alias easeljs.Graphics.MoveTo\n   * @param {Number} x\n   * @param {Number} y\n   */\n\n\n  var MoveTo = function () {\n  \tfunction MoveTo(x, y) {\n  \t\tclassCallCheck(this, MoveTo);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t}\n  \t/**\n    * @param {CanvasRenderingContext2D} ctx\n    */\n\n\n  \tMoveTo.prototype.exec = function exec(ctx) {\n  \t\tctx.moveTo(this.x, this.y);\n  \t};\n\n  \treturn MoveTo;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#arcTo}\n   * @alias easeljs.Graphics.ArcTo\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   */\n\n\n  var ArcTo = function () {\n  \tfunction ArcTo(x1, y1, x2, y2, radius) {\n  \t\tclassCallCheck(this, ArcTo);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x1 = x1;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y1 = y1;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x2 = x2;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y2 = y2;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radius = radius;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tArcTo.prototype.exec = function exec(ctx) {\n  \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n  \t};\n\n  \treturn ArcTo;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#arc}\n   * @alias easeljs.Graphics.Arc\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle\n   * @param {Number} endAngle\n   * @param {Boolean} [anticlockwise=false]\n   */\n\n\n  var Arc = function () {\n  \tfunction Arc(x, y, radius, startAngle, endAngle) {\n  \t\tvar anticlockwise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  \t\tclassCallCheck(this, Arc);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radius = radius;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.startAngle = startAngle;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.endAngle = endAngle;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\tthis.anticlockwise = anticlockwise;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tArc.prototype.exec = function exec(ctx) {\n  \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n  \t};\n\n  \treturn Arc;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#quadraticCurveTo}\n   * @alias easeljs.Graphics.QuadraticCurveTo\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   */\n\n\n  var QuadraticCurveTo = function () {\n  \tfunction QuadraticCurveTo(cpx, cpy, x, y) {\n  \t\tclassCallCheck(this, QuadraticCurveTo);\n\n  \t\t/**\n     * @property cpx\n     * @type Number\n     */\n  \t\tthis.cpx = cpx;\n  \t\t/**\n     * @property cpy\n     * @type Number\n     */\n  \t\tthis.cpy = cpy;\n  \t\t/**\n     * @property x\n     * @type Number\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @property y\n     * @type Number\n     */\n  \t\tthis.y = y;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tQuadraticCurveTo.prototype.exec = function exec(ctx) {\n  \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n  \t};\n\n  \treturn QuadraticCurveTo;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#bezierCurveTo}\n   * @alias easeljs.Graphics.BezierCurveTo\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   */\n\n\n  var BezierCurveTo = function () {\n  \tfunction BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n  \t\tclassCallCheck(this, BezierCurveTo);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.cp1x = cp1x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.cp1y = cp1y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.cp2x = cp2x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.cp2y = cp2y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tBezierCurveTo.prototype.exec = function exec(ctx) {\n  \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n  \t};\n\n  \treturn BezierCurveTo;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#rect}\n   * @alias easeljs.Graphics.Rect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   */\n\n\n  var Rect = function () {\n  \tfunction Rect(x, y, w, h) {\n  \t\tclassCallCheck(this, Rect);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.w = w;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.h = h;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tRect.prototype.exec = function exec(ctx) {\n  \t\tctx.rect(this.x, this.y, this.w, this.h);\n  \t};\n\n  \treturn Rect;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#closePath}\n   * @alias easeljs.Graphics.ClosePath\n   */\n\n\n  var ClosePath = function () {\n  \tfunction ClosePath() {\n  \t\tclassCallCheck(this, ClosePath);\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tClosePath.prototype.exec = function exec(ctx) {\n  \t\tctx.closePath();\n  \t};\n\n  \treturn ClosePath;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#beginPath}\n   * @alias easeljs.Graphics.BeginPath\n   */\n\n\n  var BeginPath = function () {\n  \tfunction BeginPath() {\n  \t\tclassCallCheck(this, BeginPath);\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tBeginPath.prototype.exec = function exec(ctx) {\n  \t\tctx.beginPath();\n  \t};\n\n  \treturn BeginPath;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#beginFill}\n   * @alias easeljs.Graphics.Fill\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Matrix2D} matrix\n   */\n\n\n  var Fill = function () {\n  \tfunction Fill(style, matrix) {\n  \t\tclassCallCheck(this, Fill);\n\n  \t\t/**\n     * A valid Context2D fillStyle.\n     * @type {Object}\n     */\n  \t\tthis.style = style;\n  \t\t/**\n     * @type {easeljs.Matrix2D}\n     */\n  \t\tthis.matrix = matrix;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\tthis.path = false;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tFill.prototype.exec = function exec(ctx) {\n  \t\tif (!this.style) {\n  \t\t\treturn;\n  \t\t}\n  \t\tctx.fillStyle = this.style;\n  \t\tvar mtx = this.matrix;\n  \t\tif (mtx) {\n  \t\t\tctx.save();ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n  \t\t}\n  \t\tctx.fill();\n  \t\tif (mtx) {\n  \t\t\tctx.restore();\n  \t\t}\n  \t};\n  \t/**\n    * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n    * @see {@link easeljs.Graphics#beginLinearGradientFill}\n    * @param {Array<String>} colors\n    * @param {Array<Number>} ratios\n    * @param {Number} x0\n    * @param {Number} y0\n    * @param {Number} x1\n    * @param {Number} y1\n    * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n    */\n\n\n  \tFill.prototype.linearGradient = function linearGradient(colors, ratios, x0, y0, x1, y1) {\n  \t\tvar o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n  \t\tvar l = colors.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\to.addColorStop(ratios[i], colors[i]);\n  \t\t}\n  \t\to.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, x1: x1, y1: y1, type: \"linear\" };\n  \t\treturn this;\n  \t};\n  \t/**\n    * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n    * @see {@link easeljs.Graphics#beginRadialGradientFill}\n    * @param {Array<String>} colors\n    * @param {Array<Number>} ratios\n    * @param {Number} x0\n    * @param {Number} y0\n    * @param {Number} r0\n    * @param {Number} x1\n    * @param {Number} y1\n    * @param {Number} r1\n    * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n    */\n\n\n  \tFill.prototype.radialGradient = function radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1) {\n  \t\tvar o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n  \t\tvar l = colors.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\to.addColorStop(ratios[i], colors[i]);\n  \t\t}\n  \t\to.props = { colors: colors, ratios: ratios, x0: x0, y0: y0, r0: r0, x1: x1, y1: y1, r1: r1, type: \"radial\" };\n  \t\treturn this;\n  \t};\n  \t/**\n    * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n    * @see {@link easeljs.Graphics#beginBitmapFill}\n    * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n    * @param {String} [repetition=\"\"] One of: repeat, repeat-x, repeat-y, or no-repeat.\n    * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n    */\n\n\n  \tFill.prototype.bitmap = function bitmap(image) {\n  \t\tvar repetition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  \t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n  \t\t\tvar o = this.style = Graphics._ctx.createPattern(image, repetition);\n  \t\t\to.props = { image: image, repetition: repetition, type: \"bitmap\" };\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \treturn Fill;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#beginStroke}\n   * @alias easeljs.Graphics.Stroke\n   * @extends easeljs.Graphics.Fill\n   * @param {Object} style A valid Context2D fillStyle.\n   * @param {Boolean} ignoreScale\n   */\n\n\n  var Stroke = function (_Fill) {\n  \tinherits(Stroke, _Fill);\n\n  \tfunction Stroke(style, ignoreScale) {\n  \t\tclassCallCheck(this, Stroke);\n\n  \t\t/**\n     * A valid Context2D strokeStyle.\n     * @type {Object}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Fill.call(this));\n\n  \t\t_this.style = style;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\t_this.ignoreScale = ignoreScale;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\t_this.path = false;\n  \t\treturn _this;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @override\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tStroke.prototype.exec = function exec(ctx) {\n  \t\tif (!this.style) {\n  \t\t\treturn;\n  \t\t}\n  \t\tctx.strokeStyle = this.style;\n  \t\tif (this.ignoreScale) {\n  \t\t\tctx.save();ctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\t}\n  \t\tctx.stroke();\n  \t\tif (this.ignoreScale) {\n  \t\t\tctx.restore();\n  \t\t}\n  \t};\n\n  \treturn Stroke;\n  }(Fill);\n\n  /**\n   * @see {@link easeljs.Graphics#setStrokeStyle}\n   * @alias easeljs.Graphics.StrokeStyle\n   * @param {Number} [width=1]\n   * @param {String} [caps=butt]\n   * @param {String} [joints=miter]\n   * @param {Number} [miterLimit=10]\n   * @param {Boolean} [ignoreScale=false]\n   */\n\n\n  var StrokeStyle = function () {\n  \tfunction StrokeStyle() {\n  \t\tvar width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  \t\tvar caps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"butt\";\n  \t\tvar joints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"miter\";\n  \t\tvar miterLimit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n  \t\tvar ignoreScale = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  \t\tclassCallCheck(this, StrokeStyle);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.width = width;\n  \t\t/**\n     * One of: butt, round, square\n     * @type {String}\n     */\n  \t\tthis.caps = caps;\n  \t\t/**\n     * One of: round, bevel, miter\n     * @type {String}\n     */\n  \t\tthis.joints = joints;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.miterLimit = miterLimit;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\tthis.ignoreScale = ignoreScale;\n  \t\t/**\n     * @type {Boolean}\n     */\n  \t\tthis.path = false;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tStrokeStyle.prototype.exec = function exec(ctx) {\n  \t\tctx.lineWidth = this.width;\n  \t\tctx.lineCap = isNaN(this.caps) ? this.caps : Graphics._STROKE_CAPS_MAP[this.caps];\n  \t\tctx.lineJoin = isNaN(this.joints) ? this.joints : Graphics._STROKE_JOINTS_MAP[this.joints];\n  \t\tctx.miterLimit = this.miterLimit;\n  \t\tctx.ignoreScale = this.ignoreScale;\n  \t};\n\n  \treturn StrokeStyle;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#setStrokeDash}\n   * @alias easeljs.Graphics.StrokeDash\n   * @param {Array} [segments=[]]\n   * @param {Number} [offset=0]\n   */\n\n\n  var StrokeDash = function () {\n  \tfunction StrokeDash() {\n  \t\tvar segments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  \t\tvar offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tclassCallCheck(this, StrokeDash);\n\n  \t\t/**\n     * @type {Array}\n     */\n  \t\tthis.segments = segments;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.offset = offset;\n  \t}\n\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tStrokeDash.prototype.exec = function exec(ctx) {\n  \t\tif (ctx.setLineDash) {\n  \t\t\t// feature detection.\n  \t\t\tctx.setLineDash(this.segments);\n  \t\t\tctx.lineDashOffset = this.offset;\n  \t\t}\n  \t};\n\n  \treturn StrokeDash;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#drawRoundRectComplex}\n   * @alias easeljs.Graphics.RoundRect\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radiusTL\n   * @param {Number} radiusTR\n   * @param {Number} radiusBR\n   * @param {Number} radiusBL\n   */\n\n\n  var RoundRect = function () {\n  \tfunction RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n  \t\tclassCallCheck(this, RoundRect);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.w = w;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.h = h;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radiusTL = radiusTL;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radiusTR = radiusTR;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radiusBR = radiusBR;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radiusBL = radiusBL;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tRoundRect.prototype.exec = function exec(ctx) {\n  \t\tvar max = (this.w < this.h ? this.w : this.h) / 2;\n  \t\tvar mTL = 0,\n  \t\t    mTR = 0,\n  \t\t    mBR = 0,\n  \t\t    mBL = 0;\n  \t\tvar x = this.x,\n  \t\t    y = this.y,\n  \t\t    w = this.w,\n  \t\t    h = this.h;\n  \t\tvar rTL = this.radiusTL,\n  \t\t    rTR = this.radiusTR,\n  \t\t    rBR = this.radiusBR,\n  \t\t    rBL = this.radiusBL;\n\n  \t\tif (rTL < 0) {\n  \t\t\trTL *= mTL = -1;\n  \t\t}\n  \t\tif (rTL > max) {\n  \t\t\trTL = max;\n  \t\t}\n  \t\tif (rTR < 0) {\n  \t\t\trTR *= mTR = -1;\n  \t\t}\n  \t\tif (rTR > max) {\n  \t\t\trTR = max;\n  \t\t}\n  \t\tif (rBR < 0) {\n  \t\t\trBR *= mBR = -1;\n  \t\t}\n  \t\tif (rBR > max) {\n  \t\t\trBR = max;\n  \t\t}\n  \t\tif (rBL < 0) {\n  \t\t\trBL *= mBL = -1;\n  \t\t}\n  \t\tif (rBL > max) {\n  \t\t\trBL = max;\n  \t\t}\n\n  \t\tctx.moveTo(x + w - rTR, y);\n  \t\tctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n  \t\tctx.lineTo(x + w, y + h - rBR);\n  \t\tctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n  \t\tctx.lineTo(x + rBL, y + h);\n  \t\tctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n  \t\tctx.lineTo(x, y + rTL);\n  \t\tctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n  \t\tctx.closePath();\n  \t};\n\n  \treturn RoundRect;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#drawCircle}\n   * @alias easeljs.Graphics.Circle\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   */\n\n\n  var Circle = function () {\n  \tfunction Circle(x, y, radius) {\n  \t\tclassCallCheck(this, Circle);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radius = radius;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tCircle.prototype.exec = function exec(ctx) {\n  \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n  \t};\n\n  \treturn Circle;\n  }();\n\n  /**\n   * @see {@link easeljs.Graphics#drawEllipse}\n   * @alias easeljs.Graphics.Ellipse\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   */\n\n\n  var Ellipse = function () {\n  \tfunction Ellipse(x, y, w, h) {\n  \t\tclassCallCheck(this, Ellipse);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.w = w;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.h = h;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tEllipse.prototype.exec = function exec(ctx) {\n  \t\tvar x = this.x,\n  \t\t    y = this.y;\n  \t\tvar w = this.w,\n  \t\t    h = this.h;\n\n  \t\tvar k = 0.5522848;\n  \t\tvar ox = w / 2 * k;\n  \t\tvar oy = h / 2 * k;\n  \t\tvar xe = x + w;\n  \t\tvar ye = y + h;\n  \t\tvar xm = x + w / 2;\n  \t\tvar ym = y + h / 2;\n\n  \t\tctx.moveTo(x, ym);\n  \t\tctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  \t\tctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  \t\tctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  \t\tctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  \t};\n\n  \treturn Ellipse;\n  }();\n\n  /**\n   *  @see {@link easeljs.Graphics#drawPolyStar}\n   * @alias easeljs.Graphics.PolyStar\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} sides\n   * @param {Number} [pointSize=0]\n   * @param {Number} [angle=0]\n   */\n\n\n  var PolyStar = function () {\n  \tfunction PolyStar(x, y, radius, sides) {\n  \t\tvar pointSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  \t\tvar angle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  \t\tclassCallCheck(this, PolyStar);\n\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.x = x;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.y = y;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.radius = radius;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.sides = sides;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.pointSize = pointSize;\n  \t\t/**\n     * @type {Number}\n     */\n  \t\tthis.angle = angle;\n  \t}\n  \t/**\n    * Execute the Graphics command in the provided Canvas context.\n    * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n    */\n\n\n  \tPolyStar.prototype.exec = function exec(ctx) {\n  \t\tvar x = this.x,\n  \t\t    y = this.y;\n  \t\tvar radius = this.radius;\n  \t\tvar angle = this.angle / 180 * Math.PI;\n  \t\tvar sides = this.sides;\n  \t\tvar ps = 1 - this.pointSize;\n  \t\tvar a = Math.PI / sides;\n\n  \t\tctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n  \t\tfor (var i = 0; i < sides; i++) {\n  \t\t\tangle += a;\n  \t\t\tif (ps != 1) {\n  \t\t\t\tctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n  \t\t\t}\n  \t\t\tangle += a;\n  \t\t\tctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n  \t\t}\n  \t\tctx.closePath();\n  \t};\n\n  \treturn PolyStar;\n  }();\n\n  /**\n   * A reusable instance of {@link easeljs.Graphics.BeginPath} to avoid unnecessary instantiation.\n   * @static\n   * @readonly\n   * @type {easeljs.Graphics.BeginPath}\n   */\n\n\n  Graphics.beginCmd = new BeginPath();\n  /**\n   * Map of Base64 characters to values. Used by {@link easeljs.Graphics#decodePath}.\n   * @static\n   * @readonly\n   * @protected\n   * @type {Object}\n   */\n  Graphics._BASE_64 = { \"A\": 0, \"B\": 1, \"C\": 2, \"D\": 3, \"E\": 4, \"F\": 5, \"G\": 6, \"H\": 7, \"I\": 8, \"J\": 9, \"K\": 10, \"L\": 11, \"M\": 12, \"N\": 13, \"O\": 14, \"P\": 15, \"Q\": 16, \"R\": 17, \"S\": 18, \"T\": 19, \"U\": 20, \"V\": 21, \"W\": 22, \"X\": 23, \"Y\": 24, \"Z\": 25, \"a\": 26, \"b\": 27, \"c\": 28, \"d\": 29, \"e\": 30, \"f\": 31, \"g\": 32, \"h\": 33, \"i\": 34, \"j\": 35, \"k\": 36, \"l\": 37, \"m\": 38, \"n\": 39, \"o\": 40, \"p\": 41, \"q\": 42, \"r\": 43, \"s\": 44, \"t\": 45, \"u\": 46, \"v\": 47, \"w\": 48, \"x\": 49, \"y\": 50, \"z\": 51, \"0\": 52, \"1\": 53, \"2\": 54, \"3\": 55, \"4\": 56, \"5\": 57, \"6\": 58, \"7\": 59, \"8\": 60, \"9\": 61, \"+\": 62, \"/\": 63 };\n  /**\n   * Maps numeric values for the caps parameter of {@link easeljs.Graphics#setStrokeStyle} to\n   * corresponding string values. This is primarily for use with the tiny API.<br />\n   * The mappings are as follows:\n   * <ul>\n   *   <li>0 to \"butt\"</li>\n   *   <li>1 to \"round\"</li>\n   *   <li>2 to \"square\".</li>\n   * </ul>\n   *\n   * @example <caption>Set line caps to \"square\"</caption>\n   * graphics.ss(16, 2);\n   *\n   * @static\n   * @readonly\n   * @protected\n   * @type {Array<String>}\n   */\n  Graphics._STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n  /**\n   * Maps numeric values for the joints parameter of {@link easeljs.Graphics#setStrokeStyle} to\n   * corresponding string values. This is primarily for use with the tiny API.<br />\n   * The mappings are as follows:\n   * <ul>\n   *   <li>0 to \"miter\"</li>\n   *   <li>1 to \"round\"</li>\n   *   <li>2 to \"bevel\".</li>\n   * </ul>\n   *\n   * @example <caption>Set the line joints to \"bevel\"</caption>\n   * graphics.ss(16, 0, 2);\n   *\n   * @static\n   * @readonly\n   * @protected\n   * @type {Array<String>}\n   */\n  Graphics._STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n  /**\n   * @static\n   * @readonly\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  Graphics._ctx = createCanvas().getContext(\"2d\");\n\n  /**\n   * @license MovieClip\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * The MovieClip class associates a TweenJS Timeline with an EaselJS {@link easeljs.Container}. It allows\n   * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n   * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n   * in the main EaselJS library.\n   *\n   * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n   * been made to support time-based timelines in the future.\n   *\n   * It is recommended to use `tween.to()` to animate and set properties (use no duration to have it set\n   * immediately), and the `tween.wait()` method to create delays between animations. Note that using the\n   * `tween.set()` method to affect properties will likely not provide the desired result.\n   *\n   * @memberof easeljs\n   * @example <caption>Animate two shapes back and forth</caption>\n   * let stage = new Stage(\"canvas\");\n   * Ticker.addEventListener(\"tick\", stage);\n   *\n   * let mc = new MovieClip(null, 0, true, {start:20});\n   * stage.addChild(mc);\n   *\n   * let child1 = new Shape(\n   *   new Graphics().beginFill(\"#999999\").drawCircle(30,30,30)\n   * );\n   * let child2 = new Shape(\n   *   new Graphics().beginFill(\"#5a9cfb\").drawCircle(30,30,30)\n   * );\n   *\n   * mc.timeline.addTween(\n   *   Tween.get(child1).to({x:0}).to({x:60}, 50).to({x:0}, 50)\n   * );\n   * mc.timeline.addTween(\n   *   Tween.get(child2).to({x:60}).to({x:0}, 50).to({x:60}, 50)\n   * );\n   *\n   * mc.gotoAndPlay(\"start\");\n   *\n   * @extends easeljs.Container\n   * @param {Object} [props] The configuration properties to apply to this instances.\n   * This object will also be passed into the Timeline instance associated with this MovieClip.\n   * See the documentation for Timeline for a list of supported props.\n   */\n\n  var MovieClip = function (_Container) {\n  \tinherits(MovieClip, _Container);\n\n  \tfunction MovieClip(props) {\n  \t\tclassCallCheck(this, MovieClip);\n\n  \t\tvar _this = possibleConstructorReturn(this, _Container.call(this));\n\n  \t\t!MovieClip.inited && MovieClip.init();\n\n  \t\t/**\n     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n     * See each constant for a description of the behaviour.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.mode = props.mode != null ? props.mode : MovieClip.INDEPENDENT;\n\n  \t\t/**\n     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.startPosition = props.startPosition != null ? props.startPosition : 0;\n\n  \t\t/**\n       * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n       * 1 would cause it to loop once (ie. play a total of twice).\n       * @property loop\n     * @type {Number}\n     * @default -1\n     */\n  \t\tif (typeof props.loop === \"number\") {\n  \t\t\t_this.loop = props.loop;\n  \t\t} else if (props.loop === false) {\n  \t\t\t_this.loop = 0;\n  \t\t} else {\n  \t\t\t_this.loop = -1;\n  \t\t}\n\n  \t\t/**\n     * The current frame of the movieclip.\n     * @type Number\n     * @default 0\n     * @readonly\n     */\n  \t\t_this.currentFrame = 0;\n\n  \t\t/**\n       * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n       * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n       * instances to the timeline.\n       *\n       * Elements can be added and removed from the timeline by toggling an \"_off\" property\n       * using the `tweenInstance.to()` method. Note that using `Tween.set` is not recommended to\n       * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n       * frame 1. You can use the \"visible\" property to achieve the same effect.\n       *\n       * @example\n       * let tween = Tween.get(target).to({x:0}).to({x:100}, 30);\n       * let mc = new MovieClip();\n       * mc.timeline.addTween(tween);\n       *\n       * @example\n       * Tween.get(target).to({_off:false})\n       *   .wait(1).to({_off:true})\n       *   .wait(1).to({_off:false});\n       *\n       * @type {easeljs.Timeline}\n     */\n  \t\t_this.timeline = new Timeline(Object.assign({ useTicks: true, paused: true }, props));\n\n  \t\t/**\n     * If true, the MovieClip's position will not advance when ticked.\n     * @type {Boolean}\n     * @default false\n     */\n  \t\t_this.paused = props.paused != null ? props.paused : false;\n\n  \t\t/**\n     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.actionsEnabled = true;\n\n  \t\t/**\n     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n     * <br><br>\n     * For example, if you had a character animation with a \"body\" child MovieClip instance\n     * with different costumes on each frame, you could set `body.autoReset = false`, so that\n     * you can manually change the frame it is on, without worrying that it will be reset\n     * automatically.\n     * @type {Boolean}\n     * @default true\n     */\n  \t\t_this.autoReset = true;\n\n  \t\t/**\n     * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n     * @type {Array}\n     */\n  \t\t_this.frameBounds = _this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n  \t\t/**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {@link easeljs.Stage#update}.\n     * @type {Number}\n     * @default null\n     */\n  \t\t_this.framerate = null;\n\n  \t\t/**\n     * @type {Number}\n     * @default 0\n     * @private\n     */\n  \t\t_this._synchOffset = 0;\n\n  \t\t/**\n     * @type {Number}\n     * @default -1\n     * @private\n     */\n  \t\t_this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n  \t\t/**\n     * The time remaining from the previous tick, only applicable when .framerate is set.\n     * @type {Number}\n     * @private\n     */\n  \t\t_this._t = 0;\n\n  \t\t/**\n     * List of display objects that are actively being managed by the MovieClip.\n     * @type {Object}\n     * @private\n     */\n  \t\t_this._managed = {};\n\n  \t\t/**\n     * @type {Function}\n     * @private\n     */\n  \t\t_this._bound_resolveState = _this._resolveState.bind(_this);\n  \t\treturn _this;\n  \t}\n\n  \tMovieClip.init = function init() {\n  \t\tif (MovieClip.inited) {\n  \t\t\treturn;\n  \t\t}\n  \t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n  \t\tMovieClipPlugin.install();\n  \t\tMovieClip.inited = true;\n  \t};\n\n  \t// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n  \t//\n  \t/**\n    * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n    * @see {@link tweenjs.Timeline#labels}\n    * @type {Array}\n    * @readonly\n    */\n\n\n  \tMovieClip.prototype.isVisible = function isVisible() {\n  \t\t// children are placed in draw, so we can't determine if we have content.\n  \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  \t};\n\n  \tMovieClip.prototype.draw = function draw(ctx, ignoreCache) {\n  \t\t// draw to cache first:\n  \t\tif (this.drawCache(ctx, ignoreCache)) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tthis._updateState();\n  \t\t_Container.prototype.draw.call(this, ctx, ignoreCache);\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * Sets paused to false.\n    */\n\n\n  \tMovieClip.prototype.play = function play() {\n  \t\tthis.paused = false;\n  \t};\n\n  \t/**\n    * Sets paused to true.\n    */\n\n\n  \tMovieClip.prototype.stop = function stop() {\n  \t\tthis.paused = true;\n  \t};\n\n  \t/**\n    * Advances this movie clip to the specified position or label and plays the timeline.\n    * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n    */\n\n\n  \tMovieClip.prototype.gotoAndPlay = function gotoAndPlay(positionOrLabel) {\n  \t\tthis.play();\n  \t\tthis._goto(positionOrLabel);\n  \t};\n\n  \t/**\n    * Advances this movie clip to the specified position or label and stops the timeline.\n    * @param {String | Number} positionOrLabel The animation or frame name to go to.\n    */\n\n\n  \tMovieClip.prototype.gotoAndStop = function gotoAndStop(positionOrLabel) {\n  \t\tthis.stop();\n  \t\tthis._goto(positionOrLabel);\n  \t};\n\n  \t/**\n    * Advances the playhead. This occurs automatically each tick by default.\n    * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set.\n   */\n\n\n  \tMovieClip.prototype.advance = function advance(time) {\n  \t\tif (this.mode !== MovieClip.INDEPENDENT) {\n  \t\t\treturn;\n  \t\t} // update happens in draw for synched clips\n  \t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n  \t\tvar o = this,\n  \t\t    fps = o.framerate;\n  \t\twhile ((o = o.parent) && fps === null) {\n  \t\t\tif (o.mode === MovieClip.INDEPENDENT) {\n  \t\t\t\tfps = o._framerate;\n  \t\t\t}\n  \t\t}\n  \t\tthis._framerate = fps;\n\n  \t\tif (this.paused) {\n  \t\t\treturn;\n  \t\t}\n  \t\t// calculate how many frames to advance:\n  \t\tvar t = fps !== null && fps !== -1 && time !== null ? time / (1000 / fps) + this._t : 1;\n  \t\tvar frames = t | 0;\n  \t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n  \t\twhile (frames--) {\n  \t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n  \t\t}\n  \t};\n\n  \t/**\n    * MovieClip instances cannot be cloned.\n    * @throws MovieClip cannot be cloned.\n    */\n\n\n  \tMovieClip.prototype.clone = function clone() {\n  \t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n  \t\tthrow \"MovieClip cannot be cloned.\";\n  \t};\n\n  \tMovieClip.prototype._updateState = function _updateState() {\n  \t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) {\n  \t\t\tthis._updateTimeline(-1);\n  \t\t}\n  \t};\n\n  \tMovieClip.prototype._tick = function _tick(evtObj) {\n  \t\tthis.advance(evtObj && evtObj.delta);\n  \t\t_Container.prototype._tick.call(this, evtObj);\n  \t};\n\n  \t/**\n    * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._goto = function _goto(positionOrLabel) {\n  \t\tvar pos = this.timeline.resolve(positionOrLabel);\n  \t\tif (pos == null) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis._t = 0;\n  \t\tthis._updateTimeline(pos, true);\n  \t};\n\n  \t/**\n    * @private\n    */\n\n\n  \tMovieClip.prototype._reset = function _reset() {\n  \t\tthis._rawPosition = -1;\n  \t\tthis._t = this.currentFrame = 0;\n  \t\tthis.paused = false;\n  \t};\n\n  \t/**\n    * @param {Number} rawPosition\n    * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._updateTimeline = function _updateTimeline(rawPosition, jump) {\n  \t\tvar synced = this.mode !== MovieClip.INDEPENDENT,\n  \t\t    tl = this.timeline;\n  \t\tif (synced) {\n  \t\t\trawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n  \t\t}\n  \t\tif (rawPosition < 1) {\n  \t\t\trawPosition = 0;\n  \t\t}\n  \t\tif (this._rawPosition === rawPosition && !synced) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis._rawPosition = rawPosition;\n\n  \t\t// update timeline position, ignoring actions if this is a graphic.\n  \t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n  \t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n  \t};\n\n  \t/**\n    * Renders position 0 without running actions or updating _rawPosition.\n    * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n    * NOTE: not tested when run after the MC advances past the first frame.\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._renderFirstFrame = function _renderFirstFrame() {\n  \t\tvar tl = this.timeline,\n  \t\t    pos = tl.rawPosition;\n  \t\ttl.setPosition(0, true, true, this._bound_resolveState);\n  \t\ttl.rawPosition = pos;\n  \t};\n\n  \t/**\n    * Runs via a callback after timeline property updates and before actions.\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._resolveState = function _resolveState() {\n  \t\tvar tl = this.timeline;\n  \t\tthis.currentFrame = tl.position;\n\n  \t\tfor (var n in this._managed) {\n  \t\t\tthis._managed[n] = 1;\n  \t\t}\n\n  \t\tvar tweens = tl.tweens;\n  \t\tfor (var _iterator = tweens, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  \t\t\tvar _ref;\n\n  \t\t\tif (_isArray) {\n  \t\t\t\tif (_i >= _iterator.length) break;\n  \t\t\t\t_ref = _iterator[_i++];\n  \t\t\t} else {\n  \t\t\t\t_i = _iterator.next();\n  \t\t\t\tif (_i.done) break;\n  \t\t\t\t_ref = _i.value;\n  \t\t\t}\n\n  \t\t\tvar tween = _ref;\n\n  \t\t\tvar target = tween.target;\n  \t\t\tif (target === this || tween.passive) {\n  \t\t\t\tcontinue;\n  \t\t\t} // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n  \t\t\tvar offset = tween._stepPosition;\n\n  \t\t\tif (target instanceof DisplayObject) {\n  \t\t\t\t// motion tween.\n  \t\t\t\tthis._addManagedChild(target, offset);\n  \t\t\t} else {\n  \t\t\t\t// state tween.\n  \t\t\t\tthis._setState(target.state, offset);\n  \t\t\t}\n  \t\t}\n\n  \t\tvar kids = this.children;\n  \t\tfor (var i = kids.length - 1; i >= 0; i--) {\n  \t\t\tvar id = kids[i].id;\n  \t\t\tif (this._managed[id] === 1) {\n  \t\t\t\tthis.removeChildAt(i);\n  \t\t\t\tdelete this._managed[id];\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * @param {Array} state\n    * @param {Number} offset\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._setState = function _setState(state, offset) {\n  \t\tif (!state) {\n  \t\t\treturn;\n  \t\t}\n  \t\tfor (var i = state.length - 1; i >= 0; i--) {\n  \t\t\tvar o = state[i];\n  \t\t\tvar target = o.t;\n  \t\t\tvar props = o.p;\n  \t\t\tfor (var n in props) {\n  \t\t\t\ttarget[n] = props[n];\n  \t\t\t}\n  \t\t\tthis._addManagedChild(target, offset);\n  \t\t}\n  \t};\n\n  \t/**\n    * Adds a child to the timeline, and sets it up as a managed child.\n    * @param {easeljs.MovieClip} child The child MovieClip to manage\n    * @param {Number} offset\n    * @private\n    */\n\n\n  \tMovieClip.prototype._addManagedChild = function _addManagedChild(child, offset) {\n  \t\tif (child._off) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis.addChildAt(child, 0);\n\n  \t\tif (child instanceof MovieClip) {\n  \t\t\tchild._synchOffset = offset;\n  \t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n  \t\t\t// TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n  \t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) {\n  \t\t\t\tchild._reset();\n  \t\t\t}\n  \t\t}\n  \t\tthis._managed[child.id] = 2;\n  \t};\n\n  \t/**\n    * @param {easeljs.Matrix2D} matrix\n    * @param {Boolean} ignoreTransform\n    * @return {easeljs.Rectangle}\n    * @protected\n    */\n\n\n  \tMovieClip.prototype._getBounds = function _getBounds(matrix, ignoreTransform) {\n  \t\tvar bounds = this.getBounds();\n  \t\tif (!bounds && this.frameBounds) {\n  \t\t\tbounds = this._rectangle.copy(this.frameBounds[this.currentFrame]);\n  \t\t}\n  \t\tif (bounds) {\n  \t\t\treturn this._transformBounds(bounds, matrix, ignoreTransform);\n  \t\t}\n  \t\treturn _Container.prototype._getBounds.call(this, matrix, ignoreTransform);\n  \t};\n\n  \tcreateClass(MovieClip, [{\n  \t\tkey: \"labels\",\n  \t\tget: function get() {\n  \t\t\treturn this.timeline.labels;\n  \t\t}\n\n  \t\t/**\n     * Returns the name of the label on or immediately before the current frame.\n     * @see {@link tweenjs.Timeline#currentLabel}\n     * for more information.\n     * @type {String}\n     * @readonly\n     */\n\n  \t}, {\n  \t\tkey: \"currentLabel\",\n  \t\tget: function get() {\n  \t\t\treturn this.timeline.currentLabel;\n  \t\t}\n\n  \t\t/**\n     * Returns the duration of this MovieClip in seconds or ticks.\n     * @see {@link tweenjs.Timeline#duration}\n     * @type {Number}\n     * @readonly\n     */\n\n  \t}, {\n  \t\tkey: \"duration\",\n  \t\tget: function get() {\n  \t\t\treturn this.timeline.duration;\n  \t\t}\n\n  \t\t/**\n     * Returns the duration of this MovieClip in seconds or ticks. Identical to {@link easeljs.MovieClip#duration}\n     * and provided for Adobe Flash/Animate API compatibility.\n     * @see {@link tweenjs.Timeline#duration}\n     * @type {Number}\n     * @readonly\n     */\n\n  \t}, {\n  \t\tkey: \"totalFrames\",\n  \t\tget: function get() {\n  \t\t\treturn this.duration;\n  \t\t}\n  \t}]);\n  \treturn MovieClip;\n  }(Container);\n  MovieClip.INDEPENDENT = \"independent\";\n  /**\n   * The MovieClip will only display a single frame (as determined by the startPosition property).\n   * @static\n   * @type {String}\n   * @default single\n   * @readonly\n   */\n  MovieClip.SINGLE_FRAME = \"single\";\n  /**\n   * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n   * the parent MovieClip.\n   * @static\n   * @type {String}\n   * @default synched\n   * @readonly\n   */\n  MovieClip.SYNCHED = \"synched\";\n  /**\n   * Has the MovieClipPlugin been installed to TweenJS yet?\n   * @static\n   * @type {Boolean}\n   * @default false\n   * @readonly\n   */\n  MovieClip.inited = false;\n\n  /**\n   * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition property from tweening.\n   * @todo update to new plugin model\n   * @static\n   * @inner\n   */\n\n  var MovieClipPlugin = function () {\n  \tfunction MovieClipPlugin() {\n  \t\tclassCallCheck(this, MovieClipPlugin);\n\n  \t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n  \t}\n\n  \t/**\n    * @private\n    */\n\n\n  \tMovieClipPlugin.install = function install() {\n  \t\tTween.installPlugin(MovieClipPlugin);\n  \t};\n\n  \t/**\n    * @param {tweenjs.Tween} tween\n    * @param {String} prop\n    * @param {String|Number|Boolean} value\n    * @private\n    */\n\n\n  \tMovieClipPlugin.init = function init(tween, prop, value) {\n  \t\treturn value;\n  \t};\n\n  \t/**\n    * @param {tweenjs.Tween} tween\n    * @param {String} prop\n    * @param {String | Number | Boolean} value\n    * @param {Array} startValues\n    * @param {Array} endValues\n    * @param {Number} ratio\n    * @param {Object} wait\n    * @param {Object} end\n    * @return {*}\n    */\n\n\n  \tMovieClipPlugin.tween = function tween(_tween, prop, value, startValues, endValues, ratio, wait, end) {\n  \t\tif (!(_tween.target instanceof MovieClip)) {\n  \t\t\treturn value;\n  \t\t}\n  \t\treturn ratio === 1 ? endValues[prop] : startValues[prop];\n  \t};\n\n  \treturn MovieClipPlugin;\n  }();\n\n  /**\n   * @static\n   * @type {Number}\n   * @default 100\n   * @readonly\n   */\n\n\n  MovieClipPlugin.priority = 100;\n\n  /**\n   * @license Shadow\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * This class encapsulates the properties required to define a shadow to apply to a {@link easeljs.DisplayObject}\n   * via its `shadow` property.\n   *\n   * @memberof easeljs\n   * @example\n   * img.shadow = new Shadow(\"#000000\", 5, 5, 10);\n   *\n   * @param {String} [color=black] The color of the shadow. This can be any valid CSS color value.\n   * @param {Number} [offsetX=0] The x offset of the shadow in pixels.\n   * @param {Number} [offsetY=0] The y offset of the shadow in pixels.\n   * @param {Number} [blur=0] The size of the blurring effect.\n   */\n  var Shadow = function () {\n    function Shadow() {\n      var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"black\";\n      var offsetX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var offsetY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var blur = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      classCallCheck(this, Shadow);\n\n      /**\n       * The color of the shadow. This can be any valid CSS color value.\n       * @type {String}\n       * @default black\n       */\n      this.color = color;\n\n      /**\n       * The x offset of the shadow.\n       * @type {Number}\n       * @default 0\n       */\n      this.offsetX = offsetX;\n\n      /**\n       * The y offset of the shadow.\n       * @type {Number}\n       * @default 0\n       */\n      this.offsetY = offsetY;\n\n      /**\n       * The blur of the shadow.\n       * @type {Number}\n       * @default 0\n       */\n      this.blur = blur;\n    }\n\n    /**\n     * Returns a string representation of this object.\n     * @return {String}\n     */\n\n\n    Shadow.prototype.toString = function toString() {\n      return \"[\" + this.constructor.name + \"]\";\n    };\n\n    /**\n     * Returns a clone of this Shadow instance.\n     * @return {Shadow} A clone of the current Shadow instance.\n     */\n\n\n    Shadow.prototype.clone = function clone() {\n      return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n    };\n\n    return Shadow;\n  }();\n  Shadow.identity = new Shadow(\"transparent\");\n\n  /**\n   * @license Shape\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * A Shape allows you to display vector art in the display list. It composites a {@link easeljs.Graphics}\n   * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n   * instances to display the same vector graphics with different positions or transforms.\n   *\n   * If the vector art will not change between draws, you may want to use the {@link easeljs.DisplayObject#cache}\n   * method to reduce the rendering cost.\n   *\n   * @memberof easeljs\n   * @example\n   * var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   * var shape = new Shape(graphics);\n   * // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n   * var shape = new Shape();\n   * shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n   *\n   * @extends easeljs.DisplayObject\n   * @param {easeljs.Graphics} [graphics] The graphics instance to display. If null, a new Graphics instance will be created.\n   */\n\n  var Shape = function (_DisplayObject) {\n    inherits(Shape, _DisplayObject);\n\n    function Shape() {\n      var graphics = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Graphics();\n      classCallCheck(this, Shape);\n\n      /**\n       * The graphics instance to display.\n       * @type {easeljs.Graphics}\n       */\n      var _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n      _this.graphics = graphics;\n      return _this;\n    }\n\n    Shape.prototype.isVisible = function isVisible() {\n      var hasContent = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();\n      return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n    };\n\n    Shape.prototype.draw = function draw(ctx) {\n      var ignoreCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (_DisplayObject.prototype.draw.call(this, ctx, ignoreCache)) {\n        return true;\n      }\n      this.graphics.draw(ctx, this);\n      return true;\n    };\n\n    /**\n     * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n     * their defaults (for example .parent).\n     * @override\n     * @param {Boolean} [recursive=false] If true, this Shape's {@link easeljs.Graphics} instance will also be\n     * cloned. If false, the Graphics instance will be shared with the new Shape.\n     */\n\n\n    Shape.prototype.clone = function clone() {\n      var recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var g = recursive && this.graphics ? this.graphics.clone() : this.graphics;\n      return this._cloneProps(new Shape(g));\n    };\n\n    return Shape;\n  }(DisplayObject);\n\n  /**\n   * @license SpriteSheet\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n   * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEAliNGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n   * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n   * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n   * <br />\n   * The data passed to the SpriteSheet constructor defines:\n   * <ol>\n   * \t<li> The source image or images to use.</li>\n   * \t<li> The positions of individual image frames.</li>\n   * \t<li> Sequences of frames that form named animations. Optional.</li>\n   * \t<li> The target playback framerate. Optional.</li>\n   * </ol>\n   *\n   * <h3>SpriteSheet Format</h3>\n   * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n   * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n   *\n   * <h4>images</h4>\n   * An array of source images. Images can be either an HTMlimage\n   * instance, or a uri to an image. The former is recommended to control preloading.\n   *\n   * \timages: [image1, \"path/to/image2.png\"],\n   *\n   * <h4>frames</h4>\n   * Defines the individual frames. There are two supported formats for frame data:\n   * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n   * and `count` properties.\n   *\n   * <ul>\n   *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n   *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n   *  <li>`spacing` indicate the spacing between frames</li>\n   *  <li>`margin` specify the margin around the image(s)</li>\n   *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n   *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n   *  indexes based on their position in the source images (left to right, top to bottom).</li>\n   * </ul>\n   *\n   *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n   *\n   * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n   * with 4 required and 3 optional entries, in the order:\n   *\n   * <ul>\n   *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n   *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n   *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n   * </ul>\n   *\n   * \tframes: [\n   * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n   * \t\t[64, 0, 96, 64],\n   * \t\t[0, 0, 64, 64, 1, 32, 32]\n   * \t\t// etc.\n   * \t]\n   *\n   * <h4>animations</h4>\n   * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n   * animation of the same name. Each animation must specify the frames to play, and may\n   * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n   * the name of the `next` animation to sequence to after it completes.\n   *\n   * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n   * <ol>\n   * \t<li>for a single frame animation, you can simply specify the frame index\n   *\n   * \t\tanimations: {\n   * \t\t\tsit: 7\n   * \t\t}\n   *\n   * </li>\n   * <li>\n   *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n   * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n   *\n   * \t\tanimations: {\n   * \t\t\t// start, end, next*, speed*\n   * \t\t\trun: [0, 8],\n   * \t\t\tjump: [9, 12, \"run\", 2]\n   * \t\t}\n   *\n   *  </li>\n   *  <li>\n   *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n   *     indexes to play in order. The object can also specify `next` and `speed` properties.\n   *\n   * \t\tanimations: {\n   * \t\t\twalk: {\n   * \t\t\t\tframes: [1,2,3,3,2,1]\n   * \t\t\t},\n   * \t\t\tshoot: {\n   * \t\t\t\tframes: [1,4,5,6],\n   * \t\t\t\tnext: \"walk\",\n   * \t\t\t\tspeed: 0.5\n   * \t\t\t}\n   * \t\t}\n   *\n   *  </li>\n   * </ol>\n   * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n   * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n   * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n   *\n   * <h4>framerate</h4>\n   * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n   * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n   *\n   * \t\tframerate: 20\n   *\n   * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n   * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n   *\n   * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n   * \t\tfunction handleTick(event) {\n   *\t\t\tstage.update(event);\n   *\t\t}\n   *\n   * <h3>Example</h3>\n   * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n   * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n   * sequencing back to run.\n   *\n   * \t\tvar data = {\n   * \t\t\timages: [\"sprites.jpg\"],\n   * \t\t\tframes: {width:50, height:50},\n   * \t\t\tanimations: {\n   * \t\t\t\tstand:0,\n   * \t\t\t\trun:[1,5],\n   * \t\t\t\tjump:[6,8,\"run\"]\n   * \t\t\t}\n   * \t\t};\n   * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n   * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n   *\n   * <h3>Generating SpriteSheet Images</h3>\n   * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n   * coordinates manually, however there are a number of tools that facilitate this.\n   * <ul>\n   *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n   *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n   *     EaselJS support.\n   *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n   * </ul>\n   *\n   * <h3>Cross Origin Issues</h3>\n   * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n   * using:\n   * <ul>\n   *     <li>a mouse</li>\n   *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n   *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n   *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n   * </ul>\n   * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n   * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n   *\n   * \t\tvar image = new Image();\n   * \t\timg.crossOrigin=\"Anonymous\";\n   * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n   *\n   * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n   * support cross-origin requests, or this will not work. For more information, check out\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n   *\n   * @memberof easeljs\n   * @extends core.EventDispatcher\n   * @param {Object} data An object describing the SpriteSheet data.\n   */\n\n  var SpriteSheet = function (_EventDispatcher) {\n  \tinherits(SpriteSheet, _EventDispatcher);\n\n  \tfunction SpriteSheet(data) {\n  \t\tclassCallCheck(this, SpriteSheet);\n\n  \t\t/**\n     * Indicates whether all images are finished loading.\n     * @type {Boolean}\n     * @readonly\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _EventDispatcher.call(this));\n\n  \t\t_this.complete = true;\n\n  \t\t/**\n     * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n     * {@link easeljs.Sprite#framerate} for more information.\n     * @type Number\n     */\n  \t\t_this.framerate = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._animations = null;\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._frames = null;\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._images = null;\n\n  \t\t/**\n     * @protected\n     * @type {Object}\n     */\n  \t\t_this._data = null;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._loadCount = 0;\n\n  \t\t// only used for simple frame defs:\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._frameHeight = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._frameWidth = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._numFrames = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._regX = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._regY = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._spacing = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._margin = 0;\n\n  \t\t_this._parseData(data);\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Returns an array of all available animation names available on this sprite sheet as strings.\n    * @type {Array}\n    * @readonly\n    */\n\n\n  \t/**\n    * Returns the total number of frames in the specified animation, or in the whole sprite\n    * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n    * the images have not been fully loaded.\n    * @param {String} animation The name of the animation to get a frame count for.\n    * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n    */\n  \tSpriteSheet.prototype.getNumFrames = function getNumFrames(animation) {\n  \t\tif (animation == null) {\n  \t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n  \t\t} else {\n  \t\t\tvar data = this._data[animation];\n  \t\t\tif (data == null) {\n  \t\t\t\treturn 0;\n  \t\t\t} else {\n  \t\t\t\treturn data.frames.length;\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Returns an object defining the specified animation. The returned object contains:\n    * <ul>\n    * \t<li>frames: an array of the frame ids in the animation</li>\n    * \t<li>speed: the playback speed for this animation</li>\n    * \t<li>name: the name of the animation</li>\n    * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the same.</li>\n    * </ul>\n    * @param {String} name The name of the animation to get.\n    * @return {Object} a generic object with frames, speed, name, and next properties.\n    */\n\n\n  \tSpriteSheet.prototype.getAnimation = function getAnimation(name) {\n  \t\treturn this._data[name];\n  \t};\n\n  \t/**\n    * Returns an object specifying the image and source rect of the specified frame. The returned object has:\n    * <ul>\n    * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n    * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that image.</li>\n    * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n    * </ul>\n    * @param {Number} frameIndex The index of the frame.\n    * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n    */\n\n\n  \tSpriteSheet.prototype.getFrame = function getFrame(frameIndex) {\n  \t\tvar frame = void 0;\n  \t\tif (this._frames && (frame = this._frames[frameIndex])) {\n  \t\t\treturn frame;\n  \t\t}\n  \t\treturn null;\n  \t};\n\n  \t/**\n    * Returns a {@link easeljs.Rectangle} instance defining the bounds of the specified frame relative\n    * to the origin.\n    *\n    * @param {Number} frameIndex The index of the frame.\n    * @param {easeljs.Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n    * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n    */\n\n\n  \tSpriteSheet.prototype.getFrameBounds = function getFrameBounds(frameIndex) {\n  \t\tvar rectangle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Rectangle();\n\n  \t\tvar frame = this.getFrame(frameIndex);\n  \t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tSpriteSheet.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n    * @override\n    * @throws SpriteSheet cannot be cloned.\n    */\n\n\n  \tSpriteSheet.prototype.clone = function clone() {\n  \t\tthrow \"SpriteSheet cannot be cloned.\";\n  \t};\n\n  \t/**\n    * @param {Object} data An object describing the SpriteSheet data.\n    * @protected\n    */\n\n\n  \tSpriteSheet.prototype._parseData = function _parseData(data) {\n  \t\tvar _this2 = this;\n\n  \t\tif (data == null) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis.framerate = data.framerate || 0;\n\n  \t\t// parse images:\n  \t\tif (data.images) {\n  \t\t\tvar _loop = function _loop(_img) {\n  \t\t\t\tvar a = _this2._images = [];\n  \t\t\t\tvar src = void 0;\n  \t\t\t\tif (typeof _img === \"string\") {\n  \t\t\t\t\tsrc = _img;\n  \t\t\t\t\t_img = document.createElement(\"img\");\n  \t\t\t\t\t_img.src = src;\n  \t\t\t\t}\n  \t\t\t\ta.push(_img);\n  \t\t\t\tif (!_img.getContext && !_img.naturalWidth) {\n  \t\t\t\t\t_this2._loadCount++;\n  \t\t\t\t\t_this2.complete = false;\n  \t\t\t\t\t_img.onload = function () {\n  \t\t\t\t\t\treturn _this2._handleImageLoad(src);\n  \t\t\t\t\t};\n  \t\t\t\t\t_img.onerror = function () {\n  \t\t\t\t\t\treturn _this2._handleImageError(src);\n  \t\t\t\t\t};\n  \t\t\t\t}\n  \t\t\t\timg = _img;\n  \t\t\t};\n\n  \t\t\tfor (var _iterator = data.images, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  \t\t\t\tvar _ref;\n\n  \t\t\t\tif (_isArray) {\n  \t\t\t\t\tif (_i >= _iterator.length) break;\n  \t\t\t\t\t_ref = _iterator[_i++];\n  \t\t\t\t} else {\n  \t\t\t\t\t_i = _iterator.next();\n  \t\t\t\t\tif (_i.done) break;\n  \t\t\t\t\t_ref = _i.value;\n  \t\t\t\t}\n\n  \t\t\t\tvar img = _ref;\n\n  \t\t\t\t_loop(img);\n  \t\t\t}\n  \t\t}\n\n  \t\t// parse frames:\n  \t\tif (data.frames != null) {\n  \t\t\tif (Array.isArray(data.frames)) {\n  \t\t\t\tthis._frames = [];\n  \t\t\t\tfor (var _iterator2 = data.frames, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n  \t\t\t\t\tvar _ref2;\n\n  \t\t\t\t\tif (_isArray2) {\n  \t\t\t\t\t\tif (_i2 >= _iterator2.length) break;\n  \t\t\t\t\t\t_ref2 = _iterator2[_i2++];\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\t_i2 = _iterator2.next();\n  \t\t\t\t\t\tif (_i2.done) break;\n  \t\t\t\t\t\t_ref2 = _i2.value;\n  \t\t\t\t\t}\n\n  \t\t\t\t\tvar arr = _ref2;\n\n  \t\t\t\t\tthis._frames.push({ image: this._images[arr[4] ? arr[4] : 0], rect: new Rectangle(arr[0], arr[1], arr[2], arr[3]), regX: arr[5] || 0, regY: arr[6] || 0 });\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tvar o = data.frames;\n  \t\t\t\tthis._frameWidth = o.width;\n  \t\t\t\tthis._frameHeight = o.height;\n  \t\t\t\tthis._regX = o.regX || 0;\n  \t\t\t\tthis._regY = o.regY || 0;\n  \t\t\t\tthis._spacing = o.spacing || 0;\n  \t\t\t\tthis._margin = o.margin || 0;\n  \t\t\t\tthis._numFrames = o.count;\n  \t\t\t\tif (this._loadCount === 0) {\n  \t\t\t\t\tthis._calculateFrames();\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// parse animations:\n  \t\tthis._animations = [];\n  \t\tif (data.animations != null) {\n  \t\t\tthis._data = {};\n  \t\t\tvar _o = data.animations;\n  \t\t\tfor (var name in _o) {\n  \t\t\t\tvar anim = { name: name };\n  \t\t\t\tvar obj = _o[name];\n  \t\t\t\tvar a = void 0;\n  \t\t\t\tif (typeof obj === \"number\") {\n  \t\t\t\t\t// single frame\n  \t\t\t\t\ta = anim.frames = [obj];\n  \t\t\t\t} else if (Array.isArray(obj)) {\n  \t\t\t\t\t// simple\n  \t\t\t\t\tif (obj.length === 1) {\n  \t\t\t\t\t\tanim.frames = [obj[0]];\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\tanim.speed = obj[3];\n  \t\t\t\t\t\tanim.next = obj[2];\n  \t\t\t\t\t\ta = anim.frames = [];\n  \t\t\t\t\t\tfor (var i = obj[0]; i <= obj[1]; i++) {\n  \t\t\t\t\t\t\ta.push(i);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t} else {\n  \t\t\t\t\t// complex\n  \t\t\t\t\tanim.speed = obj.speed;\n  \t\t\t\t\tanim.next = obj.next;\n  \t\t\t\t\tvar frames = obj.frames;\n  \t\t\t\t\ta = anim.frames = typeof frames === \"number\" ? [frames] : frames.slice(0);\n  \t\t\t\t}\n  \t\t\t\tif (anim.next === true || anim.next === undefined) {\n  \t\t\t\t\tanim.next = name;\n  \t\t\t\t} // loop\n  \t\t\t\tif (anim.next === false || a.length < 2 && anim.next === name) {\n  \t\t\t\t\tanim.next = null;\n  \t\t\t\t} // stop\n  \t\t\t\tif (!anim.speed) {\n  \t\t\t\t\tanim.speed = 1;\n  \t\t\t\t}\n  \t\t\t\tthis._animations.push(name);\n  \t\t\t\tthis._data[name] = anim;\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * @emits easeljs.SpriteSheet#event:complete\n    * @protected\n    * @param {Object} src\n    */\n\n\n  \tSpriteSheet.prototype._handleImageLoad = function _handleImageLoad(src) {\n  \t\tif (--this._loadCount === 0) {\n  \t\t\tthis._calculateFrames();\n  \t\t\tthis.complete = true;\n  \t\t\tthis.dispatchEvent(\"complete\");\n  \t\t}\n  \t};\n\n  \t/**\n    * @emits easeljs.SpriteSheet#event:complete\n    * @emits easeljs.SpriteSheet#event:error\n    * @protected\n    * @param {Object} src\n    */\n\n\n  \tSpriteSheet.prototype._handleImageError = function _handleImageError(src) {\n  \t\tvar errorEvent = new Event(\"error\");\n  \t\terrorEvent.src = src;\n  \t\tthis.dispatchEvent(errorEvent);\n\n  \t\t// Complete is still dispatched.\n  \t\tif (--this._loadCount === 0) {\n  \t\t\tthis.dispatchEvent(\"complete\");\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tSpriteSheet.prototype._calculateFrames = function _calculateFrames() {\n  \t\tif (this._frames || this._frameWidth === 0) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis._frames = [];\n\n  \t\tvar maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n  \t\tvar frameCount = 0,\n  \t\t    frameWidth = this._frameWidth,\n  \t\t    frameHeight = this._frameHeight;\n  \t\tvar spacing = this._spacing,\n  \t\t    margin = this._margin;\n\n  \t\timgLoop: for (var i = 0, imgs = this._images, l = imgs.length; i < l; i++) {\n  \t\t\tvar _img2 = imgs[i],\n  \t\t\t    imgW = _img2.width || _img2.naturalWidth,\n  \t\t\t    imgH = _img2.height || _img2.naturalHeight;\n\n  \t\t\tvar y = margin;\n  \t\t\twhile (y <= imgH - margin - frameHeight) {\n  \t\t\t\tvar x = margin;\n  \t\t\t\twhile (x <= imgW - margin - frameWidth) {\n  \t\t\t\t\tif (frameCount >= maxFrames) {\n  \t\t\t\t\t\tbreak imgLoop;\n  \t\t\t\t\t}\n  \t\t\t\t\tframeCount++;\n  \t\t\t\t\tthis._frames.push({\n  \t\t\t\t\t\timage: _img2,\n  \t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n  \t\t\t\t\t\tregX: this._regX,\n  \t\t\t\t\t\tregY: this._regY\n  \t\t\t\t\t});\n  \t\t\t\t\tx += frameWidth + spacing;\n  \t\t\t\t}\n  \t\t\t\ty += frameHeight + spacing;\n  \t\t\t}\n  \t\t}\n  \t\tthis._numFrames = frameCount;\n  \t};\n\n  \tcreateClass(SpriteSheet, [{\n  \t\tkey: \"animations\",\n  \t\tget: function get() {\n  \t\t\treturn this._animations.slice();\n  \t\t}\n  \t}]);\n  \treturn SpriteSheet;\n  }(EventDispatcher);\n\n  /**\n   * @license Text\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n   * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n   * text above or below the canvas relative to items in the display list using the {@link easeljs.DisplayObject#localToGlobal}\n   * method, or using {@link easeljs.DOMElement}.\n   *\n   * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n   * multiple font styles, you will need to create multiple text instances, and position them manually.\n   *\n   * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n   * before it can be displayed.\n   *\n   * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n   * browsers will render Text exactly the same.\n   *\n   * @memberof easeljs\n   * @extends easeljs.DisplayObject\n   * @example\n   * let text = new Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n   * text.x = 100;\n   * text.textBaseline = \"alphabetic\";\n   *\n   * @param {String} [text] The text to display.\n   * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n   * 36px Arial\").\n   * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n   * \"#F00\", \"red\", or \"#FF0000\").\n   */\n\n  var Text = function (_DisplayObject) {\n    inherits(Text, _DisplayObject);\n\n    function Text(text, font, color) {\n      classCallCheck(this, Text);\n\n      /**\n       * The text to display.\n       * @type {String}\n       */\n      var _this = possibleConstructorReturn(this, _DisplayObject.call(this));\n\n      _this.text = text;\n\n      /**\n       * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n       * @type {String}\n       */\n      _this.font = font;\n\n      /**\n       * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n       * It will also accept valid canvas fillStyle values.\n       * @type {String}\n       */\n      _this.color = color;\n\n      /**\n       * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n       * @type {String}\n       * @default left\n       */\n      _this.textAlign = \"left\";\n\n      /**\n       * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n       * @type {String}\n       * @default top\n      */\n      _this.textBaseline = \"top\";\n\n      /**\n       * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n       * shrunk to make it fit in this width.\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n       * @type {Number}\n      */\n      _this.maxWidth = null;\n\n      /**\n       * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n       * @type {Number}\n       */\n      _this.outline = 0;\n\n      /**\n       * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n       * the value of getMeasuredLineHeight is used.\n       * @type {Number}\n       * @default 0\n       */\n      _this.lineHeight = 0;\n\n      /**\n       * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n       * the text will not be wrapped.\n       * @type {Number}\n       */\n      _this.lineWidth = null;\n      return _this;\n    }\n\n    Text.prototype.isVisible = function isVisible() {\n      var hasContent = this.cacheCanvas || this.text != null && this.text !== \"\";\n      return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n    };\n\n    Text.prototype.draw = function draw(ctx, ignoreCache) {\n      if (_DisplayObject.prototype.draw.call(this, ctx, ignoreCache)) {\n        return true;\n      }\n\n      var col = this.color || \"#000\";\n      if (this.outline) {\n        ctx.strokeStyle = col;ctx.lineWidth = this.outline * 1;\n      } else {\n        ctx.fillStyle = col;\n      }\n\n      this._drawText(this._prepContext(ctx));\n      return true;\n    };\n\n    /**\n     * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n     * @return {Number} The measured, untransformed width of the text.\n     */\n\n\n    Text.prototype.getMeasuredWidth = function getMeasuredWidth() {\n      return this._getMeasuredWidth(this.text);\n    };\n\n    /**\n     * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n     * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n     * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n     * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n     */\n\n\n    Text.prototype.getMeasuredLineHeight = function getMeasuredLineHeight() {\n      return this._getMeasuredWidth(\"M\") * 1.2;\n    };\n\n    /**\n     * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n     * `lineHeight` (if specified) or {@link easeljs.Text#getMeasuredLineHeight}. Note that\n     * this operation requires the text flowing logic to run, which has an associated CPU cost.\n     * @return {Number} The approximate height of the untransformed multi-line text.\n     */\n\n\n    Text.prototype.getMeasuredHeight = function getMeasuredHeight() {\n      return this._drawText(null, {}).height;\n    };\n\n    Text.prototype.getBounds = function getBounds() {\n      var rect = _DisplayObject.prototype.getBounds.call(this);\n      if (rect) {\n        return rect;\n      }\n      if (this.text == null || this.text === \"\") {\n        return null;\n      }\n      var o = this._drawText(null, {});\n      var w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width;\n      var x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n      var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n      var y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n      return this._rectangle.setValues(x, y, w, o.height);\n    };\n\n    /**\n     * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n     * of the drawn text. The lines property contains an array of strings, one for\n     * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n     * whitespace removed.\n     * @return {Object} An object with width, height, and lines properties.\n     */\n\n\n    Text.prototype.getMetrics = function getMetrics() {\n      var o = { lines: [] };\n      o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n      o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n      return this._drawText(null, o, o.lines);\n    };\n\n    /**\n     * Returns a clone of the Text instance.\n     * @return {easeljs.Text} a clone of the Text instance.\n     */\n\n\n    Text.prototype.clone = function clone() {\n      return this._cloneProps(new Text(this.text, this.font, this.color));\n    };\n\n    /**\n     * Returns a string representation of this object.\n     * @override\n     * @return {String} a string representation of the instance.\n     */\n\n\n    Text.prototype.toString = function toString() {\n      return \"[\" + this.constructor.name + \" (text=\" + (this.text.length > 20 ? this.text.substr(0, 17) + \"...\" : this.text) + \")]\";\n    };\n\n    /**\n     * @param {easeljs.Text} o\n     * @protected\n     * @return {easeljs.Text} o\n     */\n\n\n    Text.prototype._cloneProps = function _cloneProps(o) {\n      _DisplayObject.prototype._cloneProps.call(this, o);\n      o.textAlign = this.textAlign;\n      o.textBaseline = this.textBaseline;\n      o.maxWidth = this.maxWidth;\n      o.outline = this.outline;\n      o.lineHeight = this.lineHeight;\n      o.lineWidth = this.lineWidth;\n      return o;\n    };\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @return {CanvasRenderingContext2D}\n     * @protected\n     */\n\n\n    Text.prototype._prepContext = function _prepContext(ctx) {\n      ctx.font = this.font || \"10px sans-serif\";\n      ctx.textAlign = this.textAlign || \"left\";\n      ctx.textBaseline = this.textBaseline || \"top\";\n      ctx.lineJoin = \"miter\";\n      ctx.miterLimit = 2.5;\n      return ctx;\n    };\n\n    /**\n     * Draws multiline text.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Object} o\n     * @param {Array} lines\n     * @return {Object}\n     * @protected\n     */\n\n\n    Text.prototype._drawText = function _drawText(ctx, o, lines) {\n      var paint = !!ctx;\n      if (!paint) {\n        ctx = Text._ctx;\n        ctx.save();\n        this._prepContext(ctx);\n      }\n      var lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\n      var maxW = 0,\n          count = 0;\n      var hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n      for (var _iterator = hardLines, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var str = _ref;\n\n        var w = null;\n\n        if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n          // text wrapping:\n          var words = str.split(/(\\s)/);\n          str = words[0];\n          w = ctx.measureText(str).width;\n\n          var l = words.length;\n          for (var i = 1; i < l; i += 2) {\n            // Line needs to wrap:\n            var wordW = ctx.measureText(words[i] + words[i + 1]).width;\n            if (w + wordW > this.lineWidth) {\n              if (paint) {\n                this._drawTextLine(ctx, str, count * lineHeight);\n              }\n              if (lines) {\n                lines.push(str);\n              }\n              if (w > maxW) {\n                maxW = w;\n              }\n              str = words[i + 1];\n              w = ctx.measureText(str).width;\n              count++;\n            } else {\n              str += words[i] + words[i + 1];\n              w += wordW;\n            }\n          }\n        }\n\n        if (paint) {\n          this._drawTextLine(ctx, str, count * lineHeight);\n        }\n        if (lines) {\n          lines.push(str);\n        }\n        if (o && w == null) {\n          w = ctx.measureText(str).width;\n        }\n        if (w > maxW) {\n          maxW = w;\n        }\n        count++;\n      }\n\n      if (o) {\n        o.width = maxW;\n        o.height = count * lineHeight;\n      }\n      if (!paint) {\n        ctx.restore();\n      }\n      return o;\n    };\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {Number} y\n     * @protected\n     */\n\n\n    Text.prototype._drawTextLine = function _drawTextLine(ctx, text, y) {\n      // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n      if (this.outline) {\n        ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF);\n      } else {\n        ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF);\n      }\n    };\n\n    /**\n     * @param {String} text\n     * @protected\n     */\n\n\n    Text.prototype._getMeasuredWidth = function _getMeasuredWidth(text) {\n      var ctx = Text._ctx;\n      ctx.save();\n      var w = this._prepContext(ctx).measureText(text).width;\n      ctx.restore();\n      return w;\n    };\n\n    return Text;\n  }(DisplayObject);\n  Text.H_OFFSETS = { start: 0, left: 0, center: -0.5, end: -1, right: -1 };\n  /**\n   * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n   * @type {Object}\n   * @readonly\n   * @static\n   */\n  Text.V_OFFSETS = { top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1 };\n\n  /**\n   * @property _ctx\n   * @type {CanvasRenderingContext2D}\n   * @private\n   * @static\n   */\n  Text._ctx = createCanvas().getContext(\"2d\");\n\n  /**\n   * @license AlphaMapFilter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n   * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n   *\n   * Generally, it is recommended that you use {@link easeljs.AlphaMaskFilter}, because it has much better performance.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   * @example *\n   * let box = new Shape();\n   * box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n   * box.graphics.drawRect(0, 0, 100, 100);\n   * box.cache(0, 0, 100, 100);\n   * let bmp = new Bitmap(\"path/to/image.jpg\");\n   * bmp.filters = [ new AlphaMapFilter(box.cacheCanvas) ];\n   * bmp.cache(0, 0, 100, 100);\n   *\n   * @param {HTMLImageElement | HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n   * result. This should be exactly the same dimensions as the target.\n   */\n\n  var AlphaMapFilter = function (_Filter) {\n  \tinherits(AlphaMapFilter, _Filter);\n\n  \tfunction AlphaMapFilter(alphaMap) {\n  \t\tclassCallCheck(this, AlphaMapFilter);\n\n  \t\t/**\n     * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n     * dimensions as the target.\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this.alphaMap = alphaMap;\n\n  \t\t/**\n     * @protected\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     * @default null\n     */\n  \t\t_this._alphaMap = null;\n\n  \t\t/**\n     * @protected\n     * @type {Uint8ClampedArray}\n     * @default null\n     */\n  \t\t_this._mapData = null;\n\n  \t\t/**\n     * @protected\n     * @type {*}\n     * @default null\n     */\n  \t\t_this._mapTexture = null;\n\n  \t\t_this.FRAG_SHADER_BODY = \"\\n\\t\\t\\tuniform sampler2D uAlphaSampler;\\n\\n\\t\\t\\tvoid main (void) {\\n\\t\\t\\t\\tvec4 color = texture2D(uSampler, vRenderCoord);\\n\\t\\t\\t\\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\\n\\n\\t\\t\\t\\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\\n\\t\\t\\t\\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\\n\\t\\t\\t\\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\\n\\t\\t\\t}\\n\\t\\t\";\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * @todo docs\n    * @param {*} gl\n    * @param {*} stage\n    * @param {*} shaderProgram\n    */\n\n\n  \tAlphaMapFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {\n  \t\tif (!this._mapTexture) {\n  \t\t\tthis._mapTexture = gl.createTexture();\n  \t\t}\n\n  \t\tgl.activeTexture(gl.TEXTURE1);\n  \t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n  \t\tstage.setTextureParams(gl);\n  \t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n  \t\tgl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  \t};\n\n  \t/**\n    * @return {easeljs.AlphaMapFilter}\n    */\n\n\n  \tAlphaMapFilter.prototype.clone = function clone() {\n  \t\tvar o = new AlphaMapFilter(this.alphaMap);\n  \t\to._alphaMap = this._alphaMap;\n  \t\to._mapData = this._mapData;\n  \t\treturn o;\n  \t};\n\n  \tAlphaMapFilter.prototype._applyFilter = function _applyFilter(imageData) {\n  \t\tif (!this.alphaMap) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tif (!this._prepAlphaMap()) {\n  \t\t\treturn false;\n  \t\t}\n\n  \t\t// TODO: update to support scenarios where the target has different dimensions.\n  \t\tvar data = imageData.data;\n  \t\tvar map = this._mapData;\n  \t\tvar l = data.length;\n  \t\tfor (var i = 0; i < l; i += 4) {\n  \t\t\tdata[i + 3] = map[i] || 0;\n  \t\t}\n\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tAlphaMapFilter.prototype._prepAlphaMap = function _prepAlphaMap() {\n  \t\tif (!this.alphaMap) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tif (this.alphaMap === this._alphaMap && this._mapData) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tthis._mapData = null;\n\n  \t\tvar map = this._alphaMap = this.alphaMap;\n  \t\tvar canvas = map;\n  \t\tvar ctx = void 0;\n  \t\tif (map instanceof HTMLCanvasElement) {\n  \t\t\tctx = canvas.getContext(\"2d\");\n  \t\t} else {\n  \t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  \t\t\tcanvas.width = map.width;\n  \t\t\tcanvas.height = map.height;\n  \t\t\tctx = canvas.getContext(\"2d\");\n  \t\t\tctx.drawImage(map, 0, 0);\n  \t\t}\n\n  \t\ttry {\n  \t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data;\n  \t\t\treturn true;\n  \t\t} catch (e) {\n  \t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n  \t\t\treturn false;\n  \t\t}\n  \t};\n\n  \treturn AlphaMapFilter;\n  }(Filter);\n\n  /**\n   * @license AlphaMaskFilter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n   * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n   * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n   * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n   *\n   * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   * @example\n   * var box = new Shape();\n   * box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n   * box.graphics.drawRect(0, 0, 100, 100);\n   * box.cache(0, 0, 100, 100);\n   * var bmp = new Bitmap(\"path/to/image.jpg\");\n   * bmp.filters = [ new AlphaMaskFilter(box.cacheCanvas) ];\n   * bmp.cache(0, 0, 100, 100);\n   *\n   * @param {HTMLImageElement | HTMLCanvasElement} mask\n   */\n\n  var AlphaMaskFilter = function (_Filter) {\n  \tinherits(AlphaMaskFilter, _Filter);\n\n  \tfunction AlphaMaskFilter(mask) {\n  \t\tclassCallCheck(this, AlphaMaskFilter);\n\n  \t\t/**\n     * The image (or canvas) to use as the mask.\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this.mask = mask;\n\n  \t\t_this.usesContext = true;\n\n  \t\t_this.FRAG_SHADER_BODY = \"\\n\\t\\t\\tuniform sampler2D uAlphaSampler;\\n\\n\\t\\t\\tvoid main (void) {\\n\\t\\t\\t\\tvec4 color = texture2D(uSampler, vRenderCoord);\\n\\t\\t\\t\\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\\n\\n\\t\\t\\t\\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\\n\\t\\t\\t}\\n\\t\\t\";\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Applies the filter to the specified context.\n    *\n    * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</strong>\n    * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n    * @param {Number} x The x position to use for the source rect.\n    * @param {Number} y The y position to use for the source rect.\n    * @param {Number} width The width to use for the source rect.\n    * @param {Number} height The height to use for the source rect.\n    * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n    * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n    * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n    * @return {Boolean} If the filter was applied successfully.\n    */\n\n\n  \tAlphaMaskFilter.prototype.applyFilter = function applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n  \t\tif (!this.mask) {\n  \t\t\treturn true;\n  \t\t}\n  \t\ttargetCtx = targetCtx || ctx;\n  \t\tif (targetX == null) {\n  \t\t\ttargetX = x;\n  \t\t}\n  \t\tif (targetY == null) {\n  \t\t\ttargetY = y;\n  \t\t}\n\n  \t\ttargetCtx.save();\n  \t\tif (ctx != targetCtx) {\n  \t\t\t// TODO: support targetCtx and targetX/Y\n  \t\t\t// clearRect, then draw the ctx in?\n  \t\t\treturn false;\n  \t\t}\n\n  \t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n  \t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n  \t\ttargetCtx.restore();\n  \t\treturn true;\n  \t};\n\n  \t/**\n    * @return {easeljs.AlphaMaskFilter}\n    */\n\n\n  \tAlphaMaskFilter.prototype.clone = function clone() {\n  \t\treturn new AlphaMaskFilter(this.mask);\n  \t};\n\n  \t/**\n    * @todo docs\n    * @param {*} gl\n    * @param {*} stage\n    * @param {*} shaderProgram\n    */\n\n\n  \tAlphaMaskFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {\n  \t\tif (!this._mapTexture) {\n  \t\t\tthis._mapTexture = gl.createTexture();\n  \t\t}\n\n  \t\tgl.activeTexture(gl.TEXTURE1);\n  \t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n  \t\tstage.setTextureParams(gl);\n  \t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n  \t\tgl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  \t};\n\n  \treturn AlphaMaskFilter;\n  }(Filter);\n\n  /**\n   * @license BlurFilter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n   * set higher than 1.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   * @example\n   * let shape = new Shape().set({x:100,y:100});\n   * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   * let blurFilter = new BlurFilter(5, 5, 1);\n   * shape.filters = [blurFilter];\n   * let bounds = blurFilter.getBounds();\n   * shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n   *\n   * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n   * @param {Number} [blurY=0] The vertical blur radius in pixels.\n   * @param {Number} [quality=1] The number of blur iterations.\n   */\n\n  var BlurFilter = function (_Filter) {\n  \tinherits(BlurFilter, _Filter);\n\n  \tfunction BlurFilter() {\n  \t\tvar blurX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  \t\tvar blurY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  \t\tvar quality = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  \t\tclassCallCheck(this, BlurFilter);\n\n  \t\t/**\n     * @protected\n     * @default 0\n     * @type {Number}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this._blurX = blurX;\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._blurXTable = [];\n  \t\t/**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n  \t\t_this._lastBlurX = null;\n\n  \t\t/**\n     * @default 0\n     * @type {Number}\n     */\n  \t\t_this._blurY = blurY;\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._blurYTable = [];\n  \t\t/**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n  \t\t_this._lastBlurY = null;\n\n  \t\t/**\n     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n     * smoother blur, but take twice as long to run.\n     * @default 1\n     * @type {Number}\n     */\n  \t\t_this._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n  \t\t/**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n  \t\t_this._lastQuality = null;\n\n  \t\t_this.FRAG_SHADER_TEMPLATE = \"\\n\\t\\t\\tuniform float xWeight[{{blurX}}];\\n\\t\\t\\tuniform float yWeight[{{blurY}}];\\n\\t\\t\\tuniform vec2 textureOffset;\\n\\t\\t\\tvoid main (void) {\\n\\t\\t\\t\\tvec4 color = vec4(0.0);\\n\\n\\t\\t\\t\\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\\n\\t\\t\\t\\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\\n\\t\\t\\t\\tvec2 sampleOffset;\\n\\n\\t\\t\\t\\tfor(int i=0; i<{{blurX}}; i++) {\\n\\t\\t\\t\\t\\tfor(int j=0; j<{{blurY}}; j++) {\\n\\t\\t\\t\\t\\t\\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\\n\\t\\t\\t\\t\\t\\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = color.rgba;\\n\\t\\t\\t}\\n\\t\\t\";\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Horizontal blur radius in pixels.\n    * @type {Number}\n    */\n\n\n  \tBlurFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {\n  \t\t// load the normalized gaussian weight tables\n  \t\tgl.uniform1fv(gl.getUniformLocation(shaderProgram, \"xWeight\"), this._blurXTable);\n  \t\tgl.uniform1fv(gl.getUniformLocation(shaderProgram, \"yWeight\"), this._blurYTable);\n\n  \t\t// what is the size of a single pixel in -1, 1 (webGL) space\n  \t\tgl.uniform2f(gl.getUniformLocation(shaderProgram, \"textureOffset\"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));\n  \t};\n\n  \tBlurFilter.prototype.getBounds = function getBounds(rect) {\n  \t\tvar x = this.blurX | 0,\n  \t\t    y = this.blurY | 0;\n  \t\tif (x <= 0 && y <= 0) {\n  \t\t\treturn rect;\n  \t\t}\n  \t\tvar q = Math.pow(this.quality, 0.2);\n  \t\treturn (rect || new Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n  \t};\n\n  \t/**\n    * @return {easeljs.BlurFilter}\n    */\n\n\n  \tBlurFilter.prototype.clone = function clone() {\n  \t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n  \t};\n\n  \tBlurFilter.prototype._updateShader = function _updateShader() {\n  \t\tvar result = this.FRAG_SHADER_TEMPLATE;\n  \t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n  \t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n  \t\tthis.FRAG_SHADER_BODY = result;\n  \t};\n\n  \tBlurFilter.prototype._getTable = function _getTable(spread) {\n  \t\tvar EDGE = 4.2;\n  \t\tif (spread <= 1) {\n  \t\t\treturn [1];\n  \t\t}\n\n  \t\tvar result = [];\n  \t\tvar count = Math.ceil(spread * 2);\n  \t\tcount += count % 2 ? 0 : 1;\n  \t\tvar adjust = count / 2 | 0;\n  \t\tfor (var i = -adjust; i <= adjust; i++) {\n  \t\t\tvar x = i / adjust * EDGE;\n  \t\t\tresult.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n  \t\t}\n  \t\tvar factor = result.reduce(function (a, b) {\n  \t\t\treturn a + b;\n  \t\t}, 0);\n  \t\treturn result.map(function (currentValue) {\n  \t\t\treturn currentValue / factor;\n  \t\t});\n  \t};\n\n  \tBlurFilter.prototype._applyFilter = function _applyFilter(imageData) {\n  \t\tvar radiusX = this._blurX >> 1;\n  \t\tif (isNaN(radiusX) || radiusX < 0) return false;\n  \t\tvar radiusY = this._blurY >> 1;\n  \t\tif (isNaN(radiusY) || radiusY < 0) return false;\n  \t\tif (radiusX === 0 && radiusY === 0) return false;\n\n  \t\tvar iterations = this.quality;\n  \t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n  \t\titerations |= 0;\n  \t\tif (iterations > 3) iterations = 3;\n  \t\tif (iterations < 1) iterations = 1;\n\n  \t\tvar px = imageData.data;\n  \t\tvar x = 0,\n  \t\t    y = 0,\n  \t\t    i = 0,\n  \t\t    p = 0,\n  \t\t    yp = 0,\n  \t\t    yi = 0,\n  \t\t    yw = 0,\n  \t\t    r = 0,\n  \t\t    g = 0,\n  \t\t    b = 0,\n  \t\t    a = 0,\n  \t\t    pr = 0,\n  \t\t    pg = 0,\n  \t\t    pb = 0,\n  \t\t    pa = 0;\n\n  \t\tvar divx = radiusX + radiusX + 1 | 0;\n  \t\tvar divy = radiusY + radiusY + 1 | 0;\n  \t\tvar w = imageData.width | 0;\n  \t\tvar h = imageData.height | 0;\n\n  \t\tvar w1 = w - 1 | 0;\n  \t\tvar h1 = h - 1 | 0;\n  \t\tvar rxp1 = radiusX + 1 | 0;\n  \t\tvar ryp1 = radiusY + 1 | 0;\n\n  \t\tvar ssx = { r: 0, b: 0, g: 0, a: 0 };\n  \t\tvar sx = ssx;\n  \t\tfor (i = 1; i < divx; i++) {\n  \t\t\tsx = sx.n = { r: 0, b: 0, g: 0, a: 0 };\n  \t\t}\n  \t\tsx.n = ssx;\n\n  \t\tvar ssy = { r: 0, b: 0, g: 0, a: 0 };\n  \t\tvar sy = ssy;\n  \t\tfor (i = 1; i < divy; i++) {\n  \t\t\tsy = sy.n = { r: 0, b: 0, g: 0, a: 0 };\n  \t\t}\n  \t\tsy.n = ssy;\n\n  \t\tvar si = null;\n\n  \t\tvar mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n  \t\tvar stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n  \t\tvar mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n  \t\tvar sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n  \t\twhile (iterations-- > 0) {\n\n  \t\t\tyw = yi = 0;\n  \t\t\tvar ms = mtx;\n  \t\t\tvar ss = stx;\n  \t\t\tfor (y = h; --y > -1;) {\n  \t\t\t\tr = rxp1 * (pr = px[yi | 0]);\n  \t\t\t\tg = rxp1 * (pg = px[yi + 1 | 0]);\n  \t\t\t\tb = rxp1 * (pb = px[yi + 2 | 0]);\n  \t\t\t\ta = rxp1 * (pa = px[yi + 3 | 0]);\n\n  \t\t\t\tsx = ssx;\n\n  \t\t\t\tfor (i = rxp1; --i > -1;) {\n  \t\t\t\t\tsx.r = pr;\n  \t\t\t\t\tsx.g = pg;\n  \t\t\t\t\tsx.b = pb;\n  \t\t\t\t\tsx.a = pa;\n  \t\t\t\t\tsx = sx.n;\n  \t\t\t\t}\n\n  \t\t\t\tfor (i = 1; i < rxp1; i++) {\n  \t\t\t\t\tp = yi + ((w1 < i ? w1 : i) << 2) | 0;\n  \t\t\t\t\tr += sx.r = px[p];\n  \t\t\t\t\tg += sx.g = px[p + 1];\n  \t\t\t\t\tb += sx.b = px[p + 2];\n  \t\t\t\t\ta += sx.a = px[p + 3];\n\n  \t\t\t\t\tsx = sx.n;\n  \t\t\t\t}\n\n  \t\t\t\tsi = ssx;\n  \t\t\t\tfor (x = 0; x < w; x++) {\n  \t\t\t\t\tpx[yi++] = r * ms >>> ss;\n  \t\t\t\t\tpx[yi++] = g * ms >>> ss;\n  \t\t\t\t\tpx[yi++] = b * ms >>> ss;\n  \t\t\t\t\tpx[yi++] = a * ms >>> ss;\n\n  \t\t\t\t\tp = yw + ((p = x + radiusX + 1) < w1 ? p : w1) << 2;\n\n  \t\t\t\t\tr -= si.r - (si.r = px[p]);\n  \t\t\t\t\tg -= si.g - (si.g = px[p + 1]);\n  \t\t\t\t\tb -= si.b - (si.b = px[p + 2]);\n  \t\t\t\t\ta -= si.a - (si.a = px[p + 3]);\n\n  \t\t\t\t\tsi = si.n;\n  \t\t\t\t}\n  \t\t\t\tyw += w;\n  \t\t\t}\n\n  \t\t\tms = mty;\n  \t\t\tss = sty;\n  \t\t\tfor (x = 0; x < w; x++) {\n  \t\t\t\tyi = x << 2 | 0;\n\n  \t\t\t\tr = ryp1 * (pr = px[yi]) | 0;\n  \t\t\t\tg = ryp1 * (pg = px[yi + 1 | 0]) | 0;\n  \t\t\t\tb = ryp1 * (pb = px[yi + 2 | 0]) | 0;\n  \t\t\t\ta = ryp1 * (pa = px[yi + 3 | 0]) | 0;\n\n  \t\t\t\tsy = ssy;\n  \t\t\t\tfor (i = 0; i < ryp1; i++) {\n  \t\t\t\t\tsy.r = pr;\n  \t\t\t\t\tsy.g = pg;\n  \t\t\t\t\tsy.b = pb;\n  \t\t\t\t\tsy.a = pa;\n  \t\t\t\t\tsy = sy.n;\n  \t\t\t\t}\n\n  \t\t\t\typ = w;\n\n  \t\t\t\tfor (i = 1; i <= radiusY; i++) {\n  \t\t\t\t\tyi = yp + x << 2;\n\n  \t\t\t\t\tr += sy.r = px[yi];\n  \t\t\t\t\tg += sy.g = px[yi + 1];\n  \t\t\t\t\tb += sy.b = px[yi + 2];\n  \t\t\t\t\ta += sy.a = px[yi + 3];\n\n  \t\t\t\t\tsy = sy.n;\n\n  \t\t\t\t\tif (i < h1) {\n  \t\t\t\t\t\typ += w;\n  \t\t\t\t\t}\n  \t\t\t\t}\n\n  \t\t\t\tyi = x;\n  \t\t\t\tsi = ssy;\n  \t\t\t\tif (iterations > 0) {\n  \t\t\t\t\tfor (y = 0; y < h; y++) {\n  \t\t\t\t\t\tp = yi << 2;\n  \t\t\t\t\t\tpx[p + 3] = pa = a * ms >>> ss;\n  \t\t\t\t\t\tif (pa > 0) {\n  \t\t\t\t\t\t\tpx[p] = r * ms >>> ss;\n  \t\t\t\t\t\t\tpx[p + 1] = g * ms >>> ss;\n  \t\t\t\t\t\t\tpx[p + 2] = b * ms >>> ss;\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tpx[p] = px[p + 1] = px[p + 2] = 0;\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\tp = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n\n  \t\t\t\t\t\tr -= si.r - (si.r = px[p]);\n  \t\t\t\t\t\tg -= si.g - (si.g = px[p + 1]);\n  \t\t\t\t\t\tb -= si.b - (si.b = px[p + 2]);\n  \t\t\t\t\t\ta -= si.a - (si.a = px[p + 3]);\n\n  \t\t\t\t\t\tsi = si.n;\n\n  \t\t\t\t\t\tyi += w;\n  \t\t\t\t\t}\n  \t\t\t\t} else {\n  \t\t\t\t\tfor (y = 0; y < h; y++) {\n  \t\t\t\t\t\tp = yi << 2;\n  \t\t\t\t\t\tpx[p + 3] = pa = a * ms >>> ss;\n  \t\t\t\t\t\tif (pa > 0) {\n  \t\t\t\t\t\t\tpa = 255 / pa;\n  \t\t\t\t\t\t\tpx[p] = (r * ms >>> ss) * pa;\n  \t\t\t\t\t\t\tpx[p + 1] = (g * ms >>> ss) * pa;\n  \t\t\t\t\t\t\tpx[p + 2] = (b * ms >>> ss) * pa;\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tpx[p] = px[p + 1] = px[p + 2] = 0;\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\tp = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n\n  \t\t\t\t\t\tr -= si.r - (si.r = px[p]);\n  \t\t\t\t\t\tg -= si.g - (si.g = px[p + 1]);\n  \t\t\t\t\t\tb -= si.b - (si.b = px[p + 2]);\n  \t\t\t\t\t\ta -= si.a - (si.a = px[p + 3]);\n\n  \t\t\t\t\t\tsi = si.n;\n\n  \t\t\t\t\t\tyi += w;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \tcreateClass(BlurFilter, [{\n  \t\tkey: \"blurX\",\n  \t\tget: function get() {\n  \t\t\treturn this._blurX;\n  \t\t},\n  \t\tset: function set(blurX) {\n  \t\t\tif (isNaN(blurX) || blurX < 0) {\n  \t\t\t\tblurX = 0;\n  \t\t\t}\n  \t\t\tthis._blurX = blurX;\n  \t\t}\n\n  \t\t/**\n     * Vertical blur radius in pixels.\n     * @type {Number}\n     */\n\n  \t}, {\n  \t\tkey: \"blurY\",\n  \t\tget: function get() {\n  \t\t\treturn this._blurY;\n  \t\t},\n  \t\tset: function set(blurY) {\n  \t\t\tif (isNaN(blurY) || blurY < 0) {\n  \t\t\t\tblurY = 0;\n  \t\t\t}\n  \t\t\tthis._blurY = blurY;\n  \t\t}\n\n  \t\t/**\n     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n     * smoother blur, but take twice as long to run.\n     * @type {Number}\n     */\n\n  \t}, {\n  \t\tkey: \"quality\",\n  \t\tget: function get() {\n  \t\t\treturn this._quality | 0;\n  \t\t},\n  \t\tset: function set(quality) {\n  \t\t\tif (isNaN(quality) || quality < 0) {\n  \t\t\t\tquality = 0;\n  \t\t\t}\n  \t\t\tthis._quality = quality;\n  \t\t}\n\n  \t\t/**\n     * @protected\n     * @type {*}\n     */\n\n  \t}, {\n  \t\tkey: \"_buildShader\",\n  \t\tget: function get() {\n  \t\t\tvar xChange = this._lastBlurX !== this._blurX;\n  \t\t\tvar yChange = this._lastBlurY !== this._blurY;\n  \t\t\tvar qChange = this._lastQuality !== this._quality;\n  \t\t\tif (xChange || yChange || qChange) {\n  \t\t\t\tif (xChange || qChange) {\n  \t\t\t\t\tthis._blurXTable = this._getTable(this._blurX * this._quality);\n  \t\t\t\t}\n  \t\t\t\tif (yChange || qChange) {\n  \t\t\t\t\tthis._blurYTable = this._getTable(this._blurY * this._quality);\n  \t\t\t\t}\n  \t\t\t\tthis._updateShader();\n  \t\t\t\tthis._lastBlurX = this._blurX;\n  \t\t\t\tthis._lastBlurY = this._blurY;\n  \t\t\t\tthis._lastQuality = this._quality;\n  \t\t\t\treturn undefined; // force a rebuild\n  \t\t\t}\n  \t\t\treturn this._compiledShader;\n  \t\t}\n  \t}, {\n  \t\tkey: \"_builtShader\",\n  \t\tset: function set(value) {\n  \t\t\tthis._compiledShader = value;\n  \t\t}\n  \t}]);\n  \treturn BlurFilter;\n  }(Filter);\n  BlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n  /**\n   * Array of shift values for blur calculations.\n   * @type {Array}\n   * @protected\n   * @static\n   */\n  BlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n  /**\n   * @license ColorFilter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Applies a color transform to DisplayObjects.\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   * @example\n   * let shape = new Shape().set({ x: 100, y: 100 });\n   * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n   * shape.filters = [ new ColorFilter(0,0,0,1, 0,0,255,0) ];\n   * shape.cache(-50, -50, 100, 100);\n   *\n   * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n   * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n   * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n   * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n   * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n   * between -255 and 255.\n   */\n\n  var ColorFilter = function (_Filter) {\n  \tinherits(ColorFilter, _Filter);\n\n  \tfunction ColorFilter() {\n  \t\tvar redMultiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  \t\tvar greenMultiplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  \t\tvar blueMultiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  \t\tvar alphaMultiplier = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  \t\tvar redOffset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  \t\tvar greenOffset = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  \t\tvar blueOffset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  \t\tvar alphaOffset = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  \t\tclassCallCheck(this, ColorFilter);\n\n  \t\t/**\n     * Red channel multiplier.\n     * @type {Number}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this.redMultiplier = redMultiplier;\n\n  \t\t/**\n     * Green channel multiplier.\n     * @type {Number}\n     */\n  \t\t_this.greenMultiplier = greenMultiplier;\n\n  \t\t/**\n     * Blue channel multiplier.\n     * @type {Number}\n     */\n  \t\t_this.blueMultiplier = blueMultiplier;\n\n  \t\t/**\n     * Alpha channel multiplier.\n     * @type {Number}\n     */\n  \t\t_this.alphaMultiplier = alphaMultiplier;\n\n  \t\t/**\n     * Red channel offset (added to value).\n     * @type {Number}\n     */\n  \t\t_this.redOffset = redOffset;\n\n  \t\t/**\n     * Green channel offset (added to value).\n     * @type {Number}\n     */\n  \t\t_this.greenOffset = greenOffset;\n\n  \t\t/**\n     * Blue channel offset (added to value).\n     * @type {Number}\n     */\n  \t\t_this.blueOffset = blueOffset;\n\n  \t\t/**\n     * Alpha channel offset (added to value).\n     * @type {Number}\n     */\n  \t\t_this.alphaOffset = alphaOffset;\n\n  \t\t_this.FRAG_SHADER_BODY = \"\\n\\t\\t\\tuniform vec4 uColorMultiplier;\\n\\t\\t\\tuniform vec4 uColorOffset;\\n\\n\\t\\t\\tvoid main (void) {\\n\\t\\t\\t\\tvec4 color = texture2D(uSampler, vRenderCoord);\\n\\n\\t\\t\\t\\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\\n\\t\\t\\t}\\n\\t\\t\";\n\n  \t\treturn _this;\n  \t}\n\n  \tColorFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {\n  \t\tgl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier);\n\n  \t\tgl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorOffset\"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);\n  \t};\n\n  \t/**\n    * @return {easeljs.ColorFilter}\n    */\n\n\n  \tColorFilter.prototype.clone = function clone() {\n  \t\treturn new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n  \t};\n\n  \tColorFilter.prototype._applyFilter = function _applyFilter(imageData) {\n  \t\tvar data = imageData.data;\n  \t\tvar l = data.length;\n  \t\tfor (var i = 0; i < l; i += 4) {\n  \t\t\tdata[i] = data[i] * this.redMultiplier + this.redOffset;\n  \t\t\tdata[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n  \t\t\tdata[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n  \t\t\tdata[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n  \t\t}\n  \t\treturn true;\n  \t};\n\n  \treturn ColorFilter;\n  }(Filter);\n\n  /**\n   * @license ColorMatrix\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Provides helper functions for assembling a matrix for use with the {@link easeljs.ColorMatrixFilter}.\n   * Most methods return the instance to facilitate chained calls.\n   *\n   * @memberof easeljs\n   * @example\n   * colorMatrix.adjustHue(20).adjustBrightness(50);\n   *\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   */\n  var ColorMatrix = function () {\n  \tfunction ColorMatrix(brightness, contrast, saturation, hue) {\n  \t\tclassCallCheck(this, ColorMatrix);\n\n  \t\tthis.setColor(brightness, contrast, saturation, hue);\n  \t}\n\n  \t/**\n    * Resets the instance with the specified values.\n    * @param {Number} brightness\n    * @param {Number} contrast\n    * @param {Number} saturation\n    * @param {Number} hue\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.setColor = function setColor(brightness, contrast, saturation, hue) {\n  \t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n  \t};\n\n  \t/**\n    * Resets the matrix to identity values.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.reset = function reset() {\n  \t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n  \t};\n\n  \t/**\n    * Shortcut method to adjust brightness, contrast, saturation and hue. Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n    * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n    * @param {Number} brightness\n    * @param {Number} contrast\n    * @param {Number} saturation\n    * @param {Number} hue\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.adjustColor = function adjustColor(brightness, contrast, saturation, hue) {\n  \t\treturn this.adjustBrightness(brightness).adjustContrast(contrast).adjustSaturation(saturation).adjustHue(hue);\n  \t};\n\n  \t/**\n    * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n    * Positive values will make the image brighter, negative values will make it darker.\n    * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.adjustBrightness = function adjustBrightness(value) {\n  \t\tif (value === 0 || isNaN(value)) {\n  \t\t\treturn this;\n  \t\t}\n  \t\tvalue = this._cleanValue(value, 255);\n  \t\tthis._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Adjusts the contrast of pixel color.\n    * Positive values will increase contrast, negative values will decrease contrast.\n    * @param {Number} value A value between -100 & 100.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.adjustContrast = function adjustContrast(value) {\n  \t\tif (value === 0 || isNaN(value)) {\n  \t\t\treturn this;\n  \t\t}\n  \t\tvalue = this._cleanValue(value, 100);\n  \t\tvar x = void 0;\n  \t\tif (value < 0) {\n  \t\t\tx = 127 + value / 100 * 127;\n  \t\t} else {\n  \t\t\tx = value % 1;\n  \t\t\tif (x === 0) {\n  \t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n  \t\t\t} else {\n  \t\t\t\tx = ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n  \t\t\t}\n  \t\t\tx = x * 127 + 127;\n  \t\t}\n  \t\tthis._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Adjusts the color saturation of the pixel.\n    * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n    * @param {Number} value A value between -100 & 100.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.adjustSaturation = function adjustSaturation(value) {\n  \t\tif (value === 0 || isNaN(value)) {\n  \t\t\treturn this;\n  \t\t}\n  \t\tvalue = this._cleanValue(value, 100);\n  \t\tvar x = 1 + (value > 0 ? 3 * value / 100 : value / 100);\n  \t\tvar lumR = 0.3086;\n  \t\tvar lumG = 0.6094;\n  \t\tvar lumB = 0.0820;\n  \t\tthis._multiplyMatrix([lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Adjusts the hue of the pixel color.\n    * @param {Number} value A value between -180 & 180.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.adjustHue = function adjustHue(value) {\n  \t\tif (value === 0 || isNaN(value)) {\n  \t\t\treturn this;\n  \t\t}\n  \t\tvalue = this._cleanValue(value, 180) / 180 * Math.PI;\n  \t\tvar cosVal = Math.cos(value);\n  \t\tvar sinVal = Math.sin(value);\n  \t\tvar lumR = 0.213;\n  \t\tvar lumG = 0.715;\n  \t\tvar lumB = 0.072;\n  \t\tthis._multiplyMatrix([lumR + cosVal * (1 - lumR) + sinVal * -lumR, lumG + cosVal * -lumG + sinVal * -lumG, lumB + cosVal * -lumB + sinVal * (1 - lumB), 0, 0, lumR + cosVal * -lumR + sinVal * 0.143, lumG + cosVal * (1 - lumG) + sinVal * 0.140, lumB + cosVal * -lumB + sinVal * -0.283, 0, 0, lumR + cosVal * -lumR + sinVal * -(1 - lumR), lumG + cosVal * -lumG + sinVal * lumG, lumB + cosVal * (1 - lumB) + sinVal * lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Concatenates (multiplies) the specified matrix with this one.\n    * @param {Array} matrix An array or ColorMatrix instance.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.concat = function concat(matrix) {\n  \t\tmatrix = this._fixMatrix(matrix);\n  \t\tif (matrix.length != ColorMatrix.LENGTH) {\n  \t\t\treturn this;\n  \t\t}\n  \t\tthis._multiplyMatrix(matrix);\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * @return {easeljs.ColorMatrix} A clone of this ColorMatrix.\n    */\n\n\n  \tColorMatrix.prototype.clone = function clone() {\n  \t\treturn new ColorMatrix().copy(this);\n  \t};\n\n  \t/**\n    * Return a length 25 (5x5) array instance containing this matrix's values.\n    * @return {Array} An array holding this matrix's values.\n    */\n\n\n  \tColorMatrix.prototype.toArray = function toArray() {\n  \t\tvar arr = [];\n  \t\tvar l = ColorMatrix.LENGTH;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tarr[i] = this[i];\n  \t\t}\n  \t\treturn arr;\n  \t};\n\n  \t/**\n    * Copy the specified matrix's values to this matrix.\n    * @param {Array | easeljs.ColorMatrix} matrix An array or ColorMatrix instance.\n    * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n    * @chainable\n    */\n\n\n  \tColorMatrix.prototype.copy = function copy(matrix) {\n  \t\tvar l = ColorMatrix.LENGTH;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tthis[i] = matrix[i];\n  \t\t}\n  \t\treturn this;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tColorMatrix.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * @param {Array} matrix\n    * @protected\n    */\n\n\n  \tColorMatrix.prototype._multiplyMatrix = function _multiplyMatrix(matrix) {\n  \t\tvar col = [];\n\n  \t\tfor (var i = 0; i < 5; i++) {\n  \t\t\tfor (var j = 0; j < 5; j++) {\n  \t\t\t\tcol[j] = this[j + i * 5];\n  \t\t\t}\n  \t\t\tfor (var _j = 0; _j < 5; _j++) {\n  \t\t\t\tvar val = 0;\n  \t\t\t\tfor (var k = 0; k < 5; k++) {\n  \t\t\t\t\tval += matrix[_j + k * 5] * col[k];\n  \t\t\t\t}\n  \t\t\t\tthis[_j + i * 5] = val;\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n    * @param {Number} value The raw number\n    * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n    * @protected\n    */\n\n\n  \tColorMatrix.prototype._cleanValue = function _cleanValue(value, limit) {\n  \t\treturn Math.min(limit, Math.max(-limit, value));\n  \t};\n\n  \t/**\n    * Makes sure matrixes are 5x5 (25 long).\n    * @param {Array} matrix\n    * @protected\n    */\n\n\n  \tColorMatrix.prototype._fixMatrix = function _fixMatrix(matrix) {\n  \t\tif (matrix instanceof ColorMatrix) {\n  \t\t\tmatrix = matrix.toArray();\n  \t\t}\n  \t\tif (matrix.length < ColorMatrix.LENGTH) {\n  \t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n  \t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n  \t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n  \t\t}\n  \t\treturn matrix;\n  \t};\n\n  \treturn ColorMatrix;\n  }();\n  ColorMatrix.DELTA_INDEX = Object.freeze([0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0]);\n  /**\n   * Identity matrix values.\n   * @type {Array<Number>}\n   * @protected\n   * @readonly\n   * @static\n   */\n  ColorMatrix.IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n  /**\n   * The constant length of a color matrix.\n   * @type {Number}\n   * @protected\n   * @readonly\n   * @static\n   */\n  ColorMatrix.LENGTH = 25;\n\n  /**\n   * @license ColorMatrixFilter\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n   * {@link easeljs.ColorMatrix} for more information on changing colors. For an easier color transform,\n   * consider the {@link easeljs.ColorFilter}.\n   *\n   *\n   * @memberof easeljs\n   * @extends easeljs.Filter\n   * @example\n   * let shape = new Shape().set({ x: 100, y: 100 });\n   * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 50);\n   * let matrix = new ColorMatrix().adjustHue(180).adjustSaturation(100);\n   * shape.filters = [ new ColorMatrixFilter(matrix) ];\n   * shape.cache(-50, -50, 100, 100);\n   *\n   * @param {Array | easeljs.ColorMatrix} matrix A 4x5 matrix describing the color operation to perform.\n   */\n\n  var ColorMatrixFilter = function (_Filter) {\n  \tinherits(ColorMatrixFilter, _Filter);\n\n  \tfunction ColorMatrixFilter(matrix) {\n  \t\tclassCallCheck(this, ColorMatrixFilter);\n\n  \t\t/**\n     * A 4x5 matrix describing the color operation to perform.\n     * @type {Array | easeljs.ColorMatrix}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _Filter.call(this));\n\n  \t\t_this.matrix = matrix;\n\n  \t\t_this.FRAG_SHADER_BODY = \"\\n\\t\\t\\tuniform mat4 uColorMatrix;\\n\\t\\t\\tuniform vec4 uColorMatrixOffset;\\n\\n\\t\\t\\tvoid main (void) {\\n\\t\\t\\t\\tvec4 color = texture2D(uSampler, vRenderCoord);\\n\\n\\t\\t\\t\\tmat4 m = uColorMatrix;\\n\\t\\t\\t\\tvec4 newColor = vec4(0,0,0,0);\\n\\t\\t\\t\\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\\n\\t\\t\\t\\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\\n\\t\\t\\t\\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\\n\\t\\t\\t\\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\\n\\n\\t\\t\\t\\tgl_FragColor = newColor + uColorMatrixOffset;\\n\\t\\t\\t}\\n\\t\\t\";\n  \t\treturn _this;\n  \t}\n\n  \tColorMatrixFilter.prototype.shaderParamSetup = function shaderParamSetup(gl, stage, shaderProgram) {\n  \t\tvar mat = this.matrix;\n  \t\tvar colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);\n\n  \t\tgl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, \"uColorMatrix\"), false, colorMatrix);\n  \t\tgl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);\n  \t};\n\n  \t/**\n    * @return {easeljs.ColorMatrixFilter}\n    */\n\n\n  \tColorMatrixFilter.prototype.clone = function clone() {\n  \t\treturn new ColorMatrixFilter(this.matrix);\n  \t};\n\n  \tColorMatrixFilter.prototype._applyFilter = function _applyFilter(imageData) {\n  \t\tvar data = imageData.data;\n  \t\tvar l = data.length;\n  \t\tvar r = void 0,\n  \t\t    g = void 0,\n  \t\t    b = void 0,\n  \t\t    a = void 0;\n  \t\tvar mtx = this.matrix;\n  \t\tvar m0 = mtx[0],\n  \t\t    m1 = mtx[1],\n  \t\t    m2 = mtx[2],\n  \t\t    m3 = mtx[3],\n  \t\t    m4 = mtx[4];\n  \t\tvar m5 = mtx[5],\n  \t\t    m6 = mtx[6],\n  \t\t    m7 = mtx[7],\n  \t\t    m8 = mtx[8],\n  \t\t    m9 = mtx[9];\n  \t\tvar m10 = mtx[10],\n  \t\t    m11 = mtx[11],\n  \t\t    m12 = mtx[12],\n  \t\t    m13 = mtx[13],\n  \t\t    m14 = mtx[14];\n  \t\tvar m15 = mtx[15],\n  \t\t    m16 = mtx[16],\n  \t\t    m17 = mtx[17],\n  \t\t    m18 = mtx[18],\n  \t\t    m19 = mtx[19];\n\n  \t\tfor (var i = 0; i < l; i += 4) {\n  \t\t\tr = data[i];\n  \t\t\tg = data[i + 1];\n  \t\t\tb = data[i + 2];\n  \t\t\ta = data[i + 3];\n  \t\t\tdata[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n  \t\t\tdata[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n  \t\t\tdata[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n  \t\t\tdata[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n  \t\t}\n\n  \t\treturn true;\n  \t};\n\n  \treturn ColorMatrixFilter;\n  }(Filter);\n\n  /*\n  * @license ButtonHelper\n  * Visit http://createjs.com/ for documentation, updates and examples.\n  *\n  * Copyright (c) 2017 gskinner.com, inc.\n  *\n  * Permission is hereby granted, free of charge, to any person\n  * obtaining a copy of this software and associated documentation\n  * files (the \"Software\"), to deal in the Software without\n  * restriction, including without limitation the rights to use,\n  * copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the\n  * Software is furnished to do so, subject to the following\n  * conditions:\n  *\n  * The above copyright notice and this permission notice shall be\n  * included in all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  * OTHER DEALINGS IN THE SOFTWARE.\n  */\n\n  /**\n   * The ButtonHelper is a helper class to create interactive buttons from {@link easeljs.MovieClip} or\n   * {@link easeljs.Sprite} instances. This class will intercept mouse events from an object, and\n   * automatically call {@link easeljs.Sprite#gotoAndStop} or {@link easlejs.Sprite#gotoAndPlay},\n   * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n   *\n   * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n   * garbage collection.\n   *\n   * Note that over states will not work unless you call {@link easeljs.Stage#enableMouseOver}.\n   *\n   * @memberof easeljs\n   * @example\n   * let helper = new ButtonHelper(sprite, \"out\", \"over\", \"down\", false, sprite, \"hit\");\n   * sprite.addEventListener(\"click\", (evt) => {\n   *   // clicked\n   * }));\n   *\n   * @param {easeljs.Sprite | easeljs.MovieClip} target The instance to manage.\n   * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n   * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n   * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n   * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n   * states.\n   * @param {easeljs.DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n   * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n   * used for the hitState.\n   * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n   * null, then the default state of the hitArea will be used.\n   */\n  var ButtonHelper = function () {\n  \tfunction ButtonHelper(target) {\n  \t\tvar outLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"out\";\n  \t\tvar overLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"over\";\n  \t\tvar downLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"down\";\n  \t\tvar play = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  \t\tvar hitArea = arguments[5];\n  \t\tvar hitLabel = arguments[6];\n  \t\tclassCallCheck(this, ButtonHelper);\n\n  \t\tif (!target.addEventListener) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\t/**\n     * The target for this button helper.\n     * @type {easeljs.MovieClip | easeljs.Sprite}\n     * @readonly\n     */\n  \t\tthis.target = target;\n\n  \t\t/**\n     * The label name or frame number to display when the user mouses out of the target.\n     * @default \"over\"\n     * @type {String | Number}\n     */\n  \t\tthis.overLabel = overLabel;\n\n  \t\t/**\n     * The label name or frame number to display when the user mouses over the target.\n     * @default \"out\"\n     * @type {String | Number}\n     */\n  \t\tthis.outLabel = outLabel;\n\n  \t\t/**\n     * The label name or frame number to display when the user presses on the target.\n     * @default \"down\"\n     * @type {String | Number}\n     */\n  \t\tthis.downLabel = downLabel == null;\n\n  \t\t/**\n     * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop.\n     * @default false\n     * @type {Boolean}\n     */\n  \t\tthis.play = play;\n\n  \t\t/**\n     * @type {Boolean}\n     * @protected\n     */\n  \t\tthis._isPressed = false;\n\n  \t\t/**\n     * @type {Boolean}\n     * @protected\n     */\n  \t\tthis._isOver = false;\n\n  \t\t/**\n     * @type {Boolean}\n     * @protected\n     */\n  \t\tthis._enabled = false;\n\n  \t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n  \t\tthis.enabled = true;\n  \t\tthis.handleEvent({});\n  \t\tif (hitArea) {\n  \t\t\tif (hitLabel) {\n  \t\t\t\thitArea.actionsEnabled = false;\n  \t\t\t\thitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n  \t\t\t}\n  \t\t\ttarget.hitArea = hitArea;\n  \t\t}\n  \t}\n\n  \t/**\n    * Enables or disables the button functionality on the target.\n    * @type {Boolean}\n    */\n\n\n  \t/**\n    * Returns a string representation of this object.\n    * @return {String} a string representation of the instance.\n    */\n  \tButtonHelper.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * @param {Object} evt The mouse event to handle.\n    * @protected\n    */\n\n\n  \tButtonHelper.prototype.handleEvent = function handleEvent(evt) {\n  \t\tvar label = void 0,\n  \t\t    t = this.target,\n  \t\t    type = evt.type;\n  \t\tif (type === \"mousedown\") {\n  \t\t\tthis._isPressed = true;\n  \t\t\tlabel = this.downLabel;\n  \t\t} else if (type === \"pressup\") {\n  \t\t\tthis._isPressed = false;\n  \t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n  \t\t} else if (type === \"rollover\") {\n  \t\t\tthis._isOver = true;\n  \t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n  \t\t} else {\n  \t\t\t// rollout and default\n  \t\t\tthis._isOver = false;\n  \t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n  \t\t}\n  \t\tif (this.play) {\n  \t\t\tt.gotoAndPlay && t.gotoAndPlay(label);\n  \t\t} else {\n  \t\t\tt.gotoAndStop && t.gotoAndStop(label);\n  \t\t}\n  \t};\n\n  \t/**\n    * Injected into target. Preserves the paused state through a reset.\n    * @protected\n    */\n\n\n  \tButtonHelper.prototype._reset = function _reset() {\n  \t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n  \t\tvar p = this.paused;\n  \t\tthis.__reset();\n  \t\tthis.paused = p;\n  \t};\n\n  \tcreateClass(ButtonHelper, [{\n  \t\tkey: \"enabled\",\n  \t\tget: function get() {\n  \t\t\treturn this._enabled;\n  \t\t},\n  \t\tset: function set(enabled) {\n  \t\t\tif (enabled === this._enabled) {\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t\tvar o = this.target;\n  \t\t\tthis._enabled = enabled;\n  \t\t\tif (enabled) {\n  \t\t\t\to.cursor = \"pointer\";\n  \t\t\t\to.addEventListener(\"rollover\", this);\n  \t\t\t\to.addEventListener(\"rollout\", this);\n  \t\t\t\to.addEventListener(\"mousedown\", this);\n  \t\t\t\to.addEventListener(\"pressup\", this);\n  \t\t\t\tif (o._reset) {\n  \t\t\t\t\to.__reset = o._reset;o._reset = this._reset;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\to.cursor = null;\n  \t\t\t\to.removeEventListener(\"rollover\", this);\n  \t\t\t\to.removeEventListener(\"rollout\", this);\n  \t\t\t\to.removeEventListener(\"mousedown\", this);\n  \t\t\t\to.removeEventListener(\"pressup\", this);\n  \t\t\t\tif (o.__reset) {\n  \t\t\t\t\to._reset = o.__reset;delete o.__reset;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}]);\n  \treturn ButtonHelper;\n  }();\n\n  /**\n   * @license Touch\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n   * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n   *\n   * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n   * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n   *\n   * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n   *\n   * @memberof easeljs\n   * @name easeljs.Touch\n   * @example\n   * let stage = new Stage(\"canvasId\");\n   * Touch.enable(stage);\n   */\n  var Touch = Touch = {\n\n  \t/**\n    * Returns `true` if touch is supported in the current browser.\n    * @return {Boolean} Indicates whether touch is supported in the current browser.\n    */\n  \tisSupported: function isSupported() {\n  \t\treturn !!('ontouchstart' in window || // iOS & Android\n  \t\twindow.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0 // IE10\n  \t\t|| window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0); // IE11+\n  \t},\n\n\n  \t/**\n    * Enables touch interaction for the specified EaselJS {@link easeljs.Stage}. Currently supports iOS\n    * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n    * multi-touch modes. Extends the EaselJS {@link easeljs.MouseEvent} model, but without support for\n    * double click or over/out events.\n    * @param {easeljs.Stage} stage The Stage to enable touch on.\n    * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n    * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n    * allowed when the user is interacting with the target canvas.\n    * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n    */\n  \tenable: function enable(stage) {\n  \t\tvar singleTouch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  \t\tvar allowDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  \t\tif (!stage || !stage.canvas || !this.isSupported()) {\n  \t\t\treturn false;\n  \t\t}\n  \t\tif (stage.__touch) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\t// inject required properties on stage:\n  \t\tstage.__touch = { pointers: {}, multitouch: !singleTouch, preventDefault: !allowDefault, count: 0 };\n\n  \t\t// note that in the future we may need to disable the standard mouse event model before adding\n  \t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n  \t\tif ('ontouchstart' in window) {\n  \t\t\tthis._IOS_enable(stage);\n  \t\t} else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n  \t\t\tthis._IE_enable(stage);\n  \t\t}\n  \t\treturn true;\n  \t},\n\n\n  \t/**\n    * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n    * @param {easeljs.Stage} stage The Stage to disable touch on.\n    */\n  \tdisable: function disable(stage) {\n  \t\tif (!stage) {\n  \t\t\treturn;\n  \t\t}\n  \t\tif ('ontouchstart' in window) {\n  \t\t\tthis._IOS_disable(stage);\n  \t\t} else if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) {\n  \t\t\tthis._IE_disable(stage);\n  \t\t}\n  \t\tdelete stage.__touch;\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    */\n  \t_IOS_enable: function _IOS_enable(stage) {\n  \t\tvar _this = this;\n\n  \t\tvar canvas = stage.canvas;\n  \t\tvar f = stage.__touch.f = function (e) {\n  \t\t\treturn _this._IOS_handleEvent(stage, e);\n  \t\t};\n  \t\tcanvas.addEventListener(\"touchstart\", f, false);\n  \t\tcanvas.addEventListener(\"touchmove\", f, false);\n  \t\tcanvas.addEventListener(\"touchend\", f, false);\n  \t\tcanvas.addEventListener(\"touchcancel\", f, false);\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    */\n  \t_IOS_disable: function _IOS_disable(stage) {\n  \t\tvar canvas = stage.canvas;\n  \t\tif (!canvas) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar f = stage.__touch.f;\n  \t\tcanvas.removeEventListener(\"touchstart\", f, false);\n  \t\tcanvas.removeEventListener(\"touchmove\", f, false);\n  \t\tcanvas.removeEventListener(\"touchend\", f, false);\n  \t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    * @param {Object} e The event to handle\n    */\n  \t_IOS_handleEvent: function _IOS_handleEvent(stage, e) {\n  \t\tif (!stage) {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (stage.__touch.preventDefault) {\n  \t\t\te.preventDefault && e.preventDefault();\n  \t\t}\n  \t\tvar touches = e.changedTouches;\n  \t\tvar type = e.type;\n  \t\tvar l = touches.length;\n  \t\tfor (var _iterator = touches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  \t\t\tvar _ref;\n\n  \t\t\tif (_isArray) {\n  \t\t\t\tif (_i >= _iterator.length) break;\n  \t\t\t\t_ref = _iterator[_i++];\n  \t\t\t} else {\n  \t\t\t\t_i = _iterator.next();\n  \t\t\t\tif (_i.done) break;\n  \t\t\t\t_ref = _i.value;\n  \t\t\t}\n\n  \t\t\tvar touch = _ref;\n\n  \t\t\tvar id = touch.identifier;\n  \t\t\tif (touch.target != stage.canvas) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\tif (type === \"touchstart\") {\n  \t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n  \t\t\t} else if (type === \"touchmove\") {\n  \t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n  \t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n  \t\t\t\tthis._handleEnd(stage, id, e);\n  \t\t\t}\n  \t\t}\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    */\n  \t_IE_enable: function _IE_enable(stage) {\n  \t\tvar _this2 = this;\n\n  \t\tvar canvas = stage.canvas;\n  \t\tvar f = stage.__touch.f = function (e) {\n  \t\t\treturn _this2._IE_handleEvent(stage, e);\n  \t\t};\n\n  \t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n  \t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n  \t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n  \t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n  \t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n  \t\t\tif (stage.__touch.preventDefault) {\n  \t\t\t\tcanvas.style.msTouchAction = \"none\";\n  \t\t\t}\n  \t\t} else {\n  \t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n  \t\t\twindow.addEventListener(\"pointermove\", f, false);\n  \t\t\twindow.addEventListener(\"pointerup\", f, false);\n  \t\t\twindow.addEventListener(\"pointercancel\", f, false);\n  \t\t\tif (stage.__touch.preventDefault) {\n  \t\t\t\tcanvas.style.touchAction = \"none\";\n  \t\t\t}\n  \t\t}\n  \t\tstage.__touch.activeIDs = {};\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    */\n  \t_IE_disable: function _IE_disable(stage) {\n  \t\tvar f = stage.__touch.f;\n\n  \t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n  \t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n  \t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n  \t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n  \t\t\tif (stage.canvas) {\n  \t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n  \t\t\t}\n  \t\t} else {\n  \t\t\twindow.removeEventListener(\"pointermove\", f, false);\n  \t\t\twindow.removeEventListener(\"pointerup\", f, false);\n  \t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n  \t\t\tif (stage.canvas) {\n  \t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n  \t\t\t}\n  \t\t}\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    * @param {Object} e The event to handle.\n    */\n  \t_IE_handleEvent: function _IE_handleEvent(stage, e) {\n  \t\tif (!stage) {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (stage.__touch.preventDefault) {\n  \t\t\te.preventDefault && e.preventDefault();\n  \t\t}\n  \t\tvar type = e.type;\n  \t\tvar id = e.pointerId;\n  \t\tvar ids = stage.__touch.activeIDs;\n\n  \t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n  \t\t\tif (e.srcElement != stage.canvas) {\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t\tids[id] = true;\n  \t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n  \t\t} else if (ids[id]) {\n  \t\t\t// it's an id we're watching\n  \t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n  \t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n  \t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\" || type === \"pointerup\" || type === \"pointercancel\") {\n  \t\t\t\tdelete ids[id];\n  \t\t\t\tthis._handleEnd(stage, id, e);\n  \t\t\t}\n  \t\t}\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    * @param {String | Number} id\n    * @param {Object} e\n    * @param {Number} x\n    * @param {Number} y\n    */\n  \t_handleStart: function _handleStart(stage, id, e, x, y) {\n  \t\tvar props = stage.__touch;\n  \t\tif (!props.multitouch && props.count) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar ids = props.pointers;\n  \t\tif (ids[id]) {\n  \t\t\treturn;\n  \t\t}\n  \t\tids[id] = true;\n  \t\tprops.count++;\n  \t\tstage._handlePointerDown(id, e, x, y);\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    * @param {String | Number} id\n    * @param {Object} e\n    * @param {Number} x\n    * @param {Number} y\n    */\n  \t_handleMove: function _handleMove(stage, id, e, x, y) {\n  \t\tif (!stage.__touch.pointers[id]) {\n  \t\t\treturn;\n  \t\t}\n  \t\tstage._handlePointerMove(id, e, x, y);\n  \t},\n\n\n  \t/**\n    * @private\n    * @param {easeljs.Stage} stage\n    * @param {String | Number} id\n    * @param {Object} e\n    */\n  \t_handleEnd: function _handleEnd(stage, id, e) {\n  \t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n  \t\tvar props = stage.__touch;\n  \t\tvar ids = props.pointers;\n  \t\tif (!ids[id]) {\n  \t\t\treturn;\n  \t\t}\n  \t\tprops.count--;\n  \t\tstage._handlePointerUp(id, e, true);\n  \t\tdelete ids[id];\n  \t}\n  };\n\n  /**\n   * @license SpriteSheetBuilder\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * The SpriteSheetBuilder allows you to generate {@link easeljs.SpriteSheet} instances at run time\n   * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n   * render them at run time as SpriteSheets for better performance.\n   *\n   * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n   * without locking the UI.\n   *\n   * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n   * sized to the nearest power of 2 up to the value of {@link easeljs.SpriteSheetBuilder#maxWidth}\n   * or {@link easeljs.SpriteSheetBuilder#maxHeight}.\n   *\n   * @memberof easeljs\n   * @extends core.EventDispatcher\n   *\n   * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n   * {@link easeljs.SpriteSheet} instances that are created.\n   */\n\n  var SpriteSheetBuilder = function (_EventDispatcher) {\n  \tinherits(SpriteSheetBuilder, _EventDispatcher);\n\n  \tfunction SpriteSheetBuilder() {\n  \t\tvar framerate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  \t\tclassCallCheck(this, SpriteSheetBuilder);\n\n  \t\t/**\n     * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @type {Number}\n     * @default 2048\n    */\n  \t\tvar _this = possibleConstructorReturn(this, _EventDispatcher.call(this));\n\n  \t\t_this.maxWidth = 2048;\n\n  \t\t/**\n     * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @type {Number}\n     * @default 2048\n     */\n  \t\t_this.maxHeight = 2048;\n\n  \t\t/**\n     * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n     * @type {easeljs.SpriteSheet}\n     */\n  \t\t_this.spriteSheet = null;\n\n  \t\t/**\n     * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n     * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n     * to the a specific device resolution (ex. tablet vs mobile).\n     * @type {Number}\n     * @default 1\n     */\n  \t\t_this.scale = 1;\n\n  \t\t/**\n    * The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n    * @type {Number}\n    * @default 1\n    */\n  \t\t_this.padding = 1;\n\n  \t\t/**\n     * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n     * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n     * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n     * Defaults to 0.3.\n     * @type {Number}\n     * @default 0.3\n     */\n  \t\t_this.timeSlice = 0.3;\n\n  \t\t/**\n     * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n     * been initiated.\n     * @type {Number}\n     * @default -1\n     * @readonly\n     */\n  \t\t_this.progress = -1;\n\n  \t\t/**\n     * A {@link easeljs.SpriteSheet#framerate} value that will be passed to new SpriteSheet instances that are\n     * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {@link core.Ticker} framerate.\n     * @type {Number}\n     * @default 0\n     */\n  \t\t_this.framerate = framerate;\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._frames = [];\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._animations = {};\n\n  \t\t/**\n     * @protected\n     * @type {Array}\n     */\n  \t\t_this._data = null;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._nextFrameIndex = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._index = 0;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._timerID = null;\n\n  \t\t/**\n     * @protected\n     * @type {Number}\n     */\n  \t\t_this._scale = 1;\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Adds a frame to the {@link easeljs.SpriteSheet}. Note that the frame will not be drawn until you\n    * call {@link easeljs.SpriteSheetBuilder#build} method. The optional setup params allow you to have\n    * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n    * times, but manipulate it or its children to change it to generate different frames.\n    *\n    * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n    * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {@link easeljs.Container}\n    * and pass in the Container as the source.\n    * @param {easeljs.DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n    * @param {easeljs.Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n    * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n    * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n    * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n    * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n    * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n    * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.addFrame = function addFrame(source, sourceRect) {\n  \t\tvar scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  \t\tvar setupFunction = arguments[3];\n  \t\tvar setupData = arguments[4];\n\n  \t\tif (this._data) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_RUNNING;\n  \t\t}\n  \t\tvar rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n  \t\tif (!rect) {\n  \t\t\treturn null;\n  \t\t}\n  \t\treturn this._frames.push({ source: source, sourceRect: rect, scale: scale, funct: setupFunction, data: setupData, index: this._frames.length, height: rect.height * scale }) - 1;\n  \t};\n\n  \t/**\n    * Adds an animation that will be included in the created {@link easeljs.SpriteSheet}.\n    * @param {String} name The name for the animation.\n    * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n    * that played frame indexes 3, 6, and 5 in that order.\n    * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n    * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n    * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n    * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n    * the opposite effect.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.addAnimation = function addAnimation(name, frames, next, speed) {\n  \t\tif (this._data) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_RUNNING;\n  \t\t}\n  \t\tthis._animations[name] = { frames: frames, next: next, speed: speed };\n  \t};\n\n  \t/**\n    * This will take a {@link easeljs.MovieClip} instance, and add its frames and labels to this\n    * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n    * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n    * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n    * frame index 10 to 14.\n    *\n    * Note that this will iterate through the full MovieClip with {@link easeljs.MovieClip#actionsEnabled}\n    * set to `false`, ending on the last frame.\n    * @param {easeljs.MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n    * @param {easeljs.Rectangle} [sourceRect] A Rectangle defining the portion of the source to\n    * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n    * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n    * found, the MovieClip will be skipped.\n    * @param {Number} [scale=1] The scale to draw the movie clip at.\n    * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n    * with three parameters: the source, setupData, and the frame index.\n    * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n    * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n    * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n    * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.addMovieClip = function addMovieClip(source, sourceRect) {\n  \t\tvar scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  \t\tvar setupFunction = arguments[3];\n  \t\tvar setupData = arguments[4];\n  \t\tvar labelFunction = arguments[5];\n\n  \t\tif (this._data) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_RUNNING;\n  \t\t}\n  \t\tvar rects = source.frameBounds;\n  \t\tvar rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n  \t\tif (!rect && !rects) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar baseFrameIndex = this._frames.length;\n  \t\tvar duration = source.timeline.duration;\n  \t\tfor (var i = 0; i < duration; i++) {\n  \t\t\tvar r = rects && rects[i] ? rects[i] : rect;\n  \t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, { i: i, f: setupFunction, d: setupData });\n  \t\t}\n  \t\tvar labels = source.timeline._labels;\n  \t\tvar lbls = [];\n  \t\tfor (var n in labels) {\n  \t\t\tlbls.push({ index: labels[n], label: n });\n  \t\t}\n  \t\tif (lbls.length) {\n  \t\t\tlbls.sort(function (a, b) {\n  \t\t\t\treturn a.index - b.index;\n  \t\t\t});\n  \t\t\tfor (var _i = 0, l = lbls.length; _i < l; _i++) {\n  \t\t\t\tvar label = lbls[_i].label;\n  \t\t\t\tvar start = baseFrameIndex + lbls[_i].index;\n  \t\t\t\tvar end = baseFrameIndex + (_i === l - 1 ? duration : lbls[_i + 1].index);\n  \t\t\t\tvar frames = [];\n  \t\t\t\tfor (var _i2 = start; _i2 < end; _i2++) {\n  \t\t\t\t\tframes.push(_i2);\n  \t\t\t\t}\n  \t\t\t\tif (labelFunction) {\n  \t\t\t\t\tlabel = labelFunction(label, source, start, end);\n  \t\t\t\t\tif (!label) {\n  \t\t\t\t\t\tcontinue;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Builds a {@link easeljs.SpriteSheet} instance based on the current frames.\n    * @return {easeljs.SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n    * occurred.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.build = function build() {\n  \t\tif (this._data) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_RUNNING;\n  \t\t}\n  \t\tthis._startBuild();\n  \t\twhile (this._drawNext()) {}\n  \t\tthis._endBuild();\n  \t\treturn this.spriteSheet;\n  \t};\n\n  \t/**\n    * Asynchronously builds a {@link easeljs.SpriteSheet} instance based on the current frames. It will\n    * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n    * specified callback.\n    * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.buildAsync = function buildAsync(timeSlice) {\n  \t\tvar _this2 = this;\n\n  \t\tif (this._data) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_RUNNING;\n  \t\t}\n  \t\tthis.timeSlice = timeSlice;\n  \t\tthis._startBuild();\n  \t\tthis._timerID = setTimeout(function () {\n  \t\t\treturn _this2._run();\n  \t\t}, 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n  \t};\n\n  \t/**\n    * Stops the current asynchronous build.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.stopAsync = function stopAsync() {\n  \t\tclearTimeout(this._timerID);\n  \t\tthis._data = null;\n  \t};\n\n  \t/**\n    * Returns a string representation of this object.\n    * @override\n    * @return {String} a string representation of the instance.\n    */\n\n\n  \tSpriteSheetBuilder.prototype.toString = function toString() {\n  \t\treturn \"[\" + this.constructor.name + \"]\";\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tSpriteSheetBuilder.prototype._startBuild = function _startBuild() {\n  \t\tvar pad = this.padding || 0;\n  \t\tthis.progress = 0;\n  \t\tthis.spriteSheet = null;\n  \t\tthis._index = 0;\n  \t\tthis._scale = this.scale;\n  \t\tvar dataFrames = [];\n  \t\tthis._data = {\n  \t\t\timages: [],\n  \t\t\tframes: dataFrames,\n  \t\t\tframerate: this.framerate,\n  \t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n  \t\t};\n\n  \t\tvar frames = this._frames.slice();\n  \t\tframes.sort(function (a, b) {\n  \t\t\treturn a.height <= b.height ? -1 : 1;\n  \t\t});\n\n  \t\tif (frames[frames.length - 1].height + pad * 2 > this.maxHeight) {\n  \t\t\tthrow SpriteSheetBuilder.ERR_DIMENSIONS;\n  \t\t}\n  \t\tvar y = 0,\n  \t\t    x = 0;\n  \t\tvar img = 0;\n  \t\twhile (frames.length) {\n  \t\t\tvar o = this._fillRow(frames, y, img, dataFrames, pad);\n  \t\t\tif (o.w > x) {\n  \t\t\t\tx = o.w;\n  \t\t\t}\n  \t\t\ty += o.h;\n  \t\t\tif (!o.h || !frames.length) {\n  \t\t\t\tvar canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n  \t\t\t\tcanvas.width = this._getSize(x, this.maxWidth);\n  \t\t\t\tcanvas.height = this._getSize(y, this.maxHeight);\n  \t\t\t\tthis._data.images[img] = canvas;\n  \t\t\t\tif (!o.h) {\n  \t\t\t\t\tx = y = 0;\n  \t\t\t\t\timg++;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    * @return {Number} The width & height of the row.\n    */\n  \tSpriteSheetBuilder.prototype._setupMovieClipFrame = function _setupMovieClipFrame(source, data) {\n  \t\tvar ae = source.actionsEnabled;\n  \t\tsource.actionsEnabled = false;\n  \t\tsource.gotoAndStop(data.i);\n  \t\tsource.actionsEnabled = ae;\n  \t\tdata.f && data.f(source, data.d, data.i);\n  \t};\n\n  \t/**\n    * @protected\n    * @return {Number} The width & height of the row.\n    */\n\n\n  \tSpriteSheetBuilder.prototype._getSize = function _getSize(size, max) {\n  \t\tvar pow = 4;\n  \t\twhile (Math.pow(2, ++pow) < size) {}\n  \t\treturn Math.min(max, Math.pow(2, pow));\n  \t};\n\n  \t/**\n    * @protected\n    * @param {Array} frames\n    * @param {Number} y\n    * @param {HTMLImageElement} img\n    * @param {Object} dataFrames\n    * @param {Number} pad\n    * @return {Number} The width & height of the row.\n    */\n  \tSpriteSheetBuilder.prototype._fillRow = function _fillRow(frames, y, img, dataFrames, pad) {\n  \t\tvar w = this.maxWidth;\n  \t\tvar maxH = this.maxHeight;\n  \t\ty += pad;\n  \t\tvar h = maxH - y;\n  \t\tvar x = pad;\n  \t\tvar height = 0;\n  \t\tfor (var i = frames.length - 1; i >= 0; i--) {\n  \t\t\tvar frame = frames[i];\n  \t\t\tvar sc = this._scale * frame.scale;\n  \t\t\tvar rect = frame.sourceRect;\n  \t\t\tvar source = frame.source;\n  \t\t\tvar rx = Math.floor(sc * rect.x - pad);\n  \t\t\tvar ry = Math.floor(sc * rect.y - pad);\n  \t\t\tvar rh = Math.ceil(sc * rect.height + pad * 2);\n  \t\t\tvar rw = Math.ceil(sc * rect.width + pad * 2);\n  \t\t\tif (rw > w) {\n  \t\t\t\tthrow SpriteSheetBuilder.ERR_DIMENSIONS;\n  \t\t\t}\n  \t\t\tif (rh > h || x + rw > w) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tframe.img = img;\n  \t\t\tframe.rect = new Rectangle(x, y, rw, rh);\n  \t\t\theight = height || rh;\n  \t\t\tframes.splice(i, 1);\n  \t\t\tdataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n  \t\t\tx += rw;\n  \t\t}\n  \t\treturn { w: x, h: height };\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tSpriteSheetBuilder.prototype._endBuild = function _endBuild() {\n  \t\tthis.spriteSheet = new SpriteSheet(this._data);\n  \t\tthis._data = null;\n  \t\tthis.progress = 1;\n  \t\tthis.dispatchEvent(\"complete\");\n  \t};\n\n  \t/**\n    * @protected\n    */\n\n\n  \tSpriteSheetBuilder.prototype._run = function _run() {\n  \t\tvar _this3 = this;\n\n  \t\tvar ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n  \t\tvar t = new Date().getTime() + ts;\n  \t\tvar complete = false;\n  \t\twhile (t > new Date().getTime()) {\n  \t\t\tif (!this._drawNext()) {\n  \t\t\t\tcomplete = true;break;\n  \t\t\t}\n  \t\t}\n  \t\tif (complete) {\n  \t\t\tthis._endBuild();\n  \t\t} else {\n  \t\t\tthis._timerID = setTimeout(function () {\n  \t\t\t\treturn _this3._run();\n  \t\t\t}, 50 - ts);\n  \t\t}\n  \t\tvar p = this.progress = this._index / this._frames.length;\n  \t\tif (this.hasEventListener(\"progress\")) {\n  \t\t\tvar evt = new Event(\"progress\");\n  \t\t\tevt.progress = p;\n  \t\t\tthis.dispatchEvent(evt);\n  \t\t}\n  \t};\n\n  \t/**\n    * @protected\n    * @return {Boolean} Returns false if this is the last draw.\n    */\n\n\n  \tSpriteSheetBuilder.prototype._drawNext = function _drawNext() {\n  \t\tvar frame = this._frames[this._index];\n  \t\tvar sc = frame.scale * this._scale;\n  \t\tvar rect = frame.rect;\n  \t\tvar sourceRect = frame.sourceRect;\n  \t\tvar canvas = this._data.images[frame.img];\n  \t\tvar ctx = canvas.getContext(\"2d\");\n  \t\tframe.funct && frame.funct(frame.source, frame.data);\n  \t\tctx.save();\n  \t\tctx.beginPath();\n  \t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n  \t\tctx.clip();\n  \t\tctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n  \t\tctx.scale(sc, sc);\n  \t\tframe.source.draw(ctx); // display object will draw itself.\n  \t\tctx.restore();\n  \t\treturn ++this._index < this._frames.length;\n  \t};\n\n  \treturn SpriteSheetBuilder;\n  }(EventDispatcher);\n  SpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n  /**\n   * @static\n   * @readonly\n   * @protected\n   * @type {String}\n   */\n  SpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n  /*\n  * @license SpriteSheetUtils\n  * Visit http://createjs.com/ for documentation, updates and examples.\n  *\n  * Copyright (c) 2017 gskinner.com, inc.\n  *\n  * Permission is hereby granted, free of charge, to any person\n  * obtaining a copy of this software and associated documentation\n  * files (the \"Software\"), to deal in the Software without\n  * restriction, including without limitation the rights to use,\n  * copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the\n  * Software is furnished to do so, subject to the following\n  * conditions:\n  *\n  * The above copyright notice and this permission notice shall be\n  * included in all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  * OTHER DEALINGS IN THE SOFTWARE.\n  */\n\n  /**\n   * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n   * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n   * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n   * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n   *\n   * @memberof easeljs\n   * @name easeljs.SpriteSheetUtils\n   */\n  var SpriteSheetUtils = SpriteSheetUtils = {\n\n  \t/**\n    * @protected\n    * @type {HTMLCanvasElement | Object}\n    */\n  \t_workingCanvas: createCanvas(),\n\n  \t/**\n    * @protected\n    * @type {CanvasRenderingContext2D}\n    */\n  \tget _workingContext() {\n  \t\treturn this._workingCanvas.getContext(\"2d\");\n  \t},\n\n  \t/**\n    * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n    * to use a spritesheet frame as the source for a bitmap fill.\n    *\n    * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {@link easeljs.Sprite}\n    * with a {@link easeljs.Sprite#gotoAndStop} call than it is to slice out a frame using this\n    * method and display it with a Bitmap instance. You can also crop an image using the {@link easeljs.Bitmap#sourceRect}\n    * property of {@link easeljs.Bitmap}.\n    *\n    * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n    *\n    * @param {easeljs.SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n    * @param {Number | String} frameOrAnimation The frame number or animation name to extract. If an animation\n    * name is specified, only the first frame of the animation will be extracted.\n    * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n    */\n  \textractFrame: function extractFrame(spriteSheet, frameOrAnimation) {\n  \t\tif (isNaN(frameOrAnimation)) {\n  \t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n  \t\t}\n  \t\tvar data = spriteSheet.getFrame(frameOrAnimation);\n  \t\tif (!data) {\n  \t\t\treturn null;\n  \t\t}\n  \t\tvar r = data.rect;\n  \t\tvar canvas = this._workingCanvas;\n  \t\tcanvas.width = r.width;\n  \t\tcanvas.height = r.height;\n  \t\tthis._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n  \t\tvar img = document.createElement(\"img\");\n  \t\timg.src = canvas.toDataURL(\"image/png\");\n  \t\treturn img;\n  \t},\n\n\n  \t/**\n    * @protected\n    * @param {easeljs.SpriteSheet} spriteSheet\n    * @param {Number} count\n    * @param {Number} h\n    * @param {Number} v\n    */\n  \t_flip: function _flip(spriteSheet, count, h, v) {\n  \t\tvar imgs = spriteSheet._images;\n  \t\tvar canvas = this._workingCanvas;\n  \t\tvar ctx = this._workingContext;\n  \t\tvar il = imgs.length / count;\n  \t\tfor (var i = 0; i < il; i++) {\n  \t\t\tvar src = imgs[i];\n  \t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n  \t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n  \t\t\tctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n  \t\t\tcanvas.width = src.width;\n  \t\t\tcanvas.height = src.height;\n  \t\t\tctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n  \t\t\tctx.drawImage(src, 0, 0);\n  \t\t\tvar img = document.createElement(\"img\");\n  \t\t\timg.src = canvas.toDataURL(\"image/png\");\n  \t\t\t// work around a strange bug in Safari:\n  \t\t\timg.width = src.width || src.naturalWidth;\n  \t\t\timg.height = src.height || src.naturalHeight;\n  \t\t\timgs.push(img);\n  \t\t}\n\n  \t\tvar frames = spriteSheet._frames;\n  \t\tvar fl = frames.length / count;\n  \t\tfor (var _i = 0; _i < fl; _i++) {\n  \t\t\tvar _src = frames[_i];\n  \t\t\tvar rect = _src.rect.clone();\n  \t\t\tvar _img = imgs[_src.image.__tmp + il * count];\n\n  \t\t\tvar frame = { image: _img, rect: rect, regX: _src.regX, regY: _src.regY };\n  \t\t\tif (h) {\n  \t\t\t\trect.x = (_img.width || _img.naturalWidth) - rect.x - rect.width; // update rect\n  \t\t\t\tframe.regX = rect.width - _src.regX; // update registration point\n  \t\t\t}\n  \t\t\tif (v) {\n  \t\t\t\trect.y = (_img.height || _img.naturalHeight) - rect.y - rect.height; // update rect\n  \t\t\t\tframe.regY = rect.height - _src.regY; // update registration point\n  \t\t\t}\n  \t\t\tframes.push(frame);\n  \t\t}\n\n  \t\tvar sfx = \"_\" + (h ? \"h\" : \"\") + (v ? \"v\" : \"\");\n  \t\tvar names = spriteSheet._animations;\n  \t\tvar data = spriteSheet._data;\n  \t\tvar al = names.length / count;\n  \t\tfor (var _i2 = 0; _i2 < al; _i2++) {\n  \t\t\tvar name = names[_i2];\n  \t\t\tvar _src2 = data[name];\n  \t\t\tvar anim = { name: name + sfx, speed: _src2.speed, next: _src2.next, frames: [] };\n  \t\t\tif (_src2.next) {\n  \t\t\t\tanim.next += sfx;\n  \t\t\t}\n  \t\t\tvar _frames = _src2.frames;\n  \t\t\tfor (var _i3 = 0, l = _frames.length; _i3 < l; _i3++) {\n  \t\t\t\tanim.frames.push(_frames[_i3] + fl * count);\n  \t\t\t}\n  \t\t\tdata[anim.name] = anim;\n  \t\t\tnames.push(anim.name);\n  \t\t}\n  \t}\n  };\n\n  /**\n   * @license WebGLInspector\n   * Visit http://createjs.com/ for documentation, updates and examples.\n   *\n   * Copyright (c) 2017 gskinner.com, inc.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use,\n   * copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the\n   * Software is furnished to do so, subject to the following\n   * conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n   * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n   * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n   * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n   * OTHER DEALINGS IN THE SOFTWARE.\n   */\n\n  /**\n   * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n   * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n   * utilities.\n   *\n   * @memberof easeljs\n   * @extends core.EventDispatcher\n   *\n   * @param {StageGL} stage The default stage to use when none is supplied.\n   */\n\n  var WebGLInspector = function (_EventDispatcher) {\n  \tinherits(WebGLInspector, _EventDispatcher);\n\n  \tfunction WebGLInspector(stage) {\n  \t\tclassCallCheck(this, WebGLInspector);\n\n  \t\t/**\n     * The internal reference to the default stage this Inspector is for.\n     * @protected\n     * @type {easeljs.StageGL}\n     */\n  \t\tvar _this = possibleConstructorReturn(this, _EventDispatcher.call(this));\n\n  \t\t_this._stage = stage;\n  \t\treturn _this;\n  \t}\n\n  \t/**\n    * Utility function for use with {@link easeljs.WebGLInspector#logDepth}. Logs an item's position and registration.\n    * Useful to see if something is being forced off screen or has an integer position.\n    * @param {easeljs.DisplayObject} item The item we're currently logging about.\n    * @param {String} [prepend] The string to show before the item, usually formatting for a tree view.\n    * @static\n    */\n\n\n  \tWebGLInspector.dispProps = function dispProps(item) {\n  \t\tvar prepend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  \t\tvar p = \"\\tP: \" + item.x.toFixed(2) + \"x\" + item.y.toFixed(2) + \"\\t\";\n  \t\tvar r = \"\\tR: \" + item.regX.toFixed(2) + \"x\" + item.regY.toFixed(2) + \"\\t\";\n  \t\tWebGLInspector._log(prepend, item.toString() + \"\\t\", p, r);\n  \t};\n\n  \t/**\n    * Log with alternateOutput if available, defaulting to the console.\n    * @param {...*} info The info to log.\n    * @static\n    */\n\n\n  \tWebGLInspector._log = function _log() {\n  \t\tif (WebGLInspector.alternateOutput) {\n  \t\t\tvar _WebGLInspector$alter;\n\n  \t\t\t(_WebGLInspector$alter = WebGLInspector.alternateOutput).log.apply(_WebGLInspector$alter, arguments);\n  \t\t} else {\n  \t\t\tvar _console;\n\n  \t\t\t(_console = console).log.apply(_console, arguments);\n  \t\t}\n  \t};\n\n  \t/**\n    * Perform all of the logging reports at once.\n    * @param {easeljs.StageGL} [stage] The stage to log information for.\n    */\n\n\n  \tWebGLInspector.prototype.log = function log(stage) {\n  \t\tif (!stage) {\n  \t\t\tstage = this._stage;\n  \t\t}\n  \t\tWebGLInspector._log(\"Batches Per Draw: \" + (stage._batchID / stage._drawID).toFixed(4));\n  \t\tthis.logContextInfo(stage._webGLContext);\n  \t\tthis.logDepth(stage.children, \"\");\n  \t\tthis.logTextureFill(stage);\n  \t};\n\n  \t/**\n    * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring rendering.\n    * @param {StageGL} [stage=] The stage to log information for.\n    * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n    */\n\n\n  \tWebGLInspector.prototype.toggleGPUDraw = function toggleGPUDraw(stage, enabled) {\n  \t\tif (!stage) {\n  \t\t\tstage = this._stage;\n  \t\t}\n\n  \t\tif (enabled === undefined) {\n  \t\t\tenabled = !!stage._drawBuffers_;\n  \t\t}\n\n  \t\tif (enabled && stage._drawBuffers_) {\n  \t\t\tstage._drawBuffers = stage._drawBuffers_;\n  \t\t\tstage._drawBuffers_ = undefined;\n  \t\t} else {\n  \t\t\tstage._drawBuffers_ = stage._drawBuffers;\n  \t\t\tstage._drawBuffers = function _inspectorDrawBuffers(gl) {\n  \t\t\t\tif (this.vocalDebug) {\n  \t\t\t\t\tWebGLInspector._log(\"BlankDraw[\" + this._drawID + \":\" + this._batchID + \"] : \" + this.batchReason);\n  \t\t\t\t}\n  \t\t\t};\n  \t\t}\n  \t};\n\n  \t/**\n    * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n    * @param {Array} [children] The children array to walk through.\n    * @param {String} [prepend] What to prepend to this output from this point onwards.\n    * @param {Function} [logFunc] Custom logging function, mainly for filtering or formatting output.\n    */\n\n\n  \tWebGLInspector.prototype.logDepth = function logDepth(children) {\n  \t\tvar prepend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  \t\tvar logFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WebGLInspector._log;\n\n  \t\tif (!children) {\n  \t\t\tchildren = this._stage.children;\n  \t\t}\n  \t\tvar l = children.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tvar child = children[i];\n  \t\t\tlogFunc(prepend + \"-\", child);\n  \t\t\tif (child.children && child.children.length) {\n  \t\t\t\tthis.logDepth(child.children, \"|\" + prepend, logFunc);\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Examine the context and provide information about its capabilities.\n    * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n    */\n\n\n  \tWebGLInspector.prototype.logContextInfo = function logContextInfo(gl) {\n  \t\tif (!gl) {\n  \t\t\tgl = this._stage._webGLContext;\n  \t\t}\n  \t\tvar data = \"\\n\\t\\t\\t== LOG:\\n\\n\\t\\t\\tMax textures per draw: \" + gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) + \"\\n\\n\\t\\t\\tMax textures active: \" + gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS) + \"\\n\\n\\t\\t\\t\\n\\n\\t\\t\\tMax texture size: \" + gl.getParameter(gl.MAX_TEXTURE_SIZE) / 2 + \"\\n\\n\\t\\t\\tMax cache size: \" + gl.getParameter(gl.MAX_RENDERBUFFER_SIZE) / 2 + \"\\n\\n\\t\\t\\t\\n\\n\\t\\t\\tMax attributes per vertex: \" + gl.getParameter(gl.MAX_VERTEX_ATTRIBS) + \"\\n\\n\\t\\t\\tWebGL Version string: \" + gl.getParameter(gl.VERSION) + \"\\n\\n\\t\\t\\t======\\n\\t\\t\";\n  \t\tWebGLInspector._log(data);\n  \t};\n\n  \t/**\n    * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n    * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n    * in place.\n    * @param {StageGL} [stage] The stage to log information for.\n    */\n\n\n  \tWebGLInspector.prototype.logTextureFill = function logTextureFill(stage) {\n  \t\tif (!stage) {\n  \t\t\tstage = this._stage;\n  \t\t}\n\n  \t\tvar dict = stage._textureDictionary;\n  \t\tvar count = stage._batchTextureCount;\n  \t\tWebGLInspector._log(textureMax + \": \" + count);\n  \t\tvar output = [];\n  \t\tfor (var n in dict) {\n  \t\t\tvar str = n.replace(window.location.origin, \"\");\n  \t\t\tvar tex = dict[n];\n  \t\t\tvar shifted = tex._lastActiveIndex ? tex._lastActiveIndex === tex._activeIndex : false;\n  \t\t\toutput.push({ src: src, element: tex, shifted: shifted });\n  \t\t\ttex._lastActiveIndex = tex._activeIndex;\n  \t\t}\n\n  \t\toutput.sort(function (a, b) {\n  \t\t\tif (a.element._drawID === stage._drawID) {\n  \t\t\t\treturn 1;\n  \t\t\t}\n  \t\t\tif (a.element._drawID < b.element._drawID) {\n  \t\t\t\treturn -1;\n  \t\t\t}\n  \t\t\treturn 0;\n  \t\t});\n\n  \t\tvar l = output.length;\n  \t\tfor (var i = 0; i < l; i++) {\n  \t\t\tvar out = output[i];\n  \t\t\tvar active = out.element._drawID === stage._drawID;\n  \t\t\tWebGLInspector._log(\"[\" + out.src + \"] \" + (active ? \"ACTIVE\" : \"stale\") + \" \" + (out.shifted ? \"steady\" : \"DRIFT\"), out.element);\n  \t\t}\n  \t};\n\n  \treturn WebGLInspector;\n  }(EventDispatcher);\n  WebGLInspector.alternateOutput = null;\n\n  /**\n   * The core classes of EaselJS.\n   * @namespace easeljs\n   *\n   * @example\n   * import { Stage, Shape } from \"@createjs/easeljs\";\n   * const stage = new Stage(\"myCanvas\");\n   * const shape = new Shape();\n   * shape.graphics.beginFill(\"red\").drawCircle(0, 0, 50);\n   * stage.addChild(shape);\n   * stage.update();\n   */\n\n  exports.StageGL = StageGL;\n  exports.Stage = Stage;\n  exports.Container = Container;\n  exports.DisplayObject = DisplayObject;\n  exports.Bitmap = Bitmap;\n  exports.BitmapText = BitmapText;\n  exports.DOMElement = DOMElement;\n  exports.Graphics = Graphics;\n  exports.MovieClip = MovieClip;\n  exports.Shadow = Shadow;\n  exports.Shape = Shape;\n  exports.Sprite = Sprite;\n  exports.SpriteSheet = SpriteSheet;\n  exports.Text = Text;\n  exports.MouseEvent = MouseEvent;\n  exports.AlphaMapFilter = AlphaMapFilter;\n  exports.AlphaMaskFilter = AlphaMaskFilter;\n  exports.BitmapCache = BitmapCache;\n  exports.BlurFilter = BlurFilter;\n  exports.ColorFilter = ColorFilter;\n  exports.ColorMatrix = ColorMatrix;\n  exports.ColorMatrixFilter = ColorMatrixFilter;\n  exports.Filter = Filter;\n  exports.DisplayProps = DisplayProps;\n  exports.Matrix2D = Matrix2D;\n  exports.Point = Point;\n  exports.Rectangle = Rectangle;\n  exports.ButtonHelper = ButtonHelper;\n  exports.Touch = Touch;\n  exports.SpriteSheetBuilder = SpriteSheetBuilder;\n  exports.SpriteSheetUtils = SpriteSheetUtils;\n  exports.uid = uid;\n  exports.createCanvas = createCanvas;\n  exports.WebGLInspector = WebGLInspector;\n\n  exports.Event = Event;\n  exports.EventDispatcher = EventDispatcher;\n  exports.Ticker = Ticker;\n  var v = exports.versions = exports.versions || {};\n  v.easeljs = \"NEXT\";\n\n}((this.createjs = this.createjs || {}),this.createjs && this.createjs.Tween,this.createjs && this.createjs.Timeline));\n"]}