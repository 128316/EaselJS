{"version":3,"sources":["C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/Event.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/EventDispatcher.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/utils/Ticker.js","../../src/display/StageGL.js","../../src/utils/UID.js","../../src/geom/Point.js","../../src/geom/Matrix2D.js","../../src/geom/DisplayProps.js","../../src/geom/Rectangle.js","../../src/filters/Filter.js","../../src/filters/BitmapCache.js","../../src/display/DisplayObject.js","../../src/display/Container.js","../../src/events/MouseEvent.js","../../src/display/Stage.js","../../src/utils/VideoBuffer.js","../../src/display/Bitmap.js","../../src/display/Sprite.js","../../src/display/BitmapText.js","../../src/display/DOMElement.js","../../src/display/Graphics.js","../../src/display/MovieClip.js","../../src/display/Shadow.js","../../src/display/Shape.js","../../src/display/SpriteSheet.js","../../src/display/Text.js","../../src/filters/AlphaMapFilter.js","../../src/filters/AlphaMaskFilter.js","../../src/filters/BlurFilter.js","../../src/filters/ColorFilter.js","../../src/filters/ColorMatrix.js","../../src/filters/ColorMatrixFilter.js","../../src/ui/ButtonHelper.js","../../src/ui/Touch.js","../../src/utils/SpriteSheetBuilder.js","../../src/utils/SpriteSheetUtils.js","../../src/utils/WebGLInspector.js"],"names":["Event","type","bubbles","arguments","length","undefined","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","this","stopPropagation","stopImmediatePropagation","remove","clone","event","n","hasOwnProperty","set","props","toString","constructor","name","EventDispatcher","initialize","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","l","i","splice","eventObj","e","parent","top","list","captureListeners","o","slice","Ticker","_EventDispatcher","timingMode","TIMEOUT","maxDelta","paused","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","init","_getTime","_setupTick","reset","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","getMeasuredTickTime","ticks","times","Math","min","framerate","reduce","a","b","getMeasuredFPS","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","mode","RAF","RAF_SYNCHED","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","setTimeout","time","elapsedTime","delta","unshift","pop","now","performance","_instance","interval","StageGL","Error","_nextID","UID","get","nextID","Point","x","y","setValues","copy","point","Matrix2D","c","d","tx","ty","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","prependTransform","rotate","angle","skew","scale","translate","identity","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","abs","PI","DisplayProps","visible","alpha","shadow","compositeOperation","Rectangle","width","height","extend","pad","left","bottom","right","rectangle","contains","union","rect","intersection","x1","y1","x2","y2","intersects","isEmpty","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","getBounds","shaderParamSetup","gl","stage","shaderProgram","applyFilter","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","_Filter","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","getFilterBounds","output","filters","filterCount","test","define","options","_options","_useWebGL","update","filterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","release","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","getCacheDataURL","toDataURL","draw","drawImage","setValue","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","isVisible","ignoreCache","drawCache","cache","updateContext","mtx","graphics","getMatrix","transform","drawAsPath","clip","_snapToPixelEnabled","globalAlpha","_applyShadow","updateCache","uncache","getDataURL","localToGlobal","getConcatenatedMatrix","globalToLocal","localToLocal","getConcatenatedDisplayProps","hitTest","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","_MOUSE_EVENTS","value","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","_DisplayObject","children","mouseChildren","tickChildren","hasContent","child","addChild","Array","_len","_key","silent","_removeChildAt","indexOf","addChildAt","_len2","_key2","index","removeChild","_len3","_key3","good","removeChildAt","indexes","_len4","_key4","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","mouse","activeListener","currentDepth","_testMask","result","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","_Event","Stage","_Container","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","tick","beginPath","clear","backgroundColor","mimeType","fillRect","dataURL","enableMouseOver","frequency","_testMouseOver","setInterval","_this2","enable","_eventListeners","t","_this3","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","nextStage","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","style","pointerId","VideoBuffer","video","readyState","_video","_canvas","_videoReady","getImage","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","play","stop","_goto","gotoAndStop","advance","fps","getFrameBounds","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","_maxPoolSize","_spritePool","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","ss","_getSpaceWidth","change","spaceW","lineH","pool","childIndex","numKids","sprite","hasSpace","charAt","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","getRGB","g","getHSL","hue","saturation","lightness","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","instructions","paramCount","params","base64","BASE_64","fi","pl","charCount","num","sign","apply","store","unstore","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","args","lineWidth","lineCap","STROKE_CAPS_MAP","lineJoin","STROKE_JOINTS_MAP","EMPTY_SEGMENTS","setLineDash","lineDashOffset","_EMPTY_SEGMENTS","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","_ref$mode","INDEPENDENT","startPosition","_ref$startPosition","loop","_ref$loop","_ref$paused","frameBounds","_ref$frameBounds","labels","_ref$labels","inited","timeline","Timeline","useTicks","actionsEnabled","autoReset","_this","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","install","positionOrLabel","_framerate","_updateTimeline","pos","resolve","_reset","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","_renderFirstFrame","tweens","_isArray","isArray","_iterator","_i","Symbol","iterator","tween","_ref2","passive","_stepPosition","_addManagedChild","_setState","state","_off","getCurrentLabel","duration","SYNCHED","MovieClipPlugin","_installPlugin","prop","startValues","endValues","ratio","wait","priority","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","frameIndex","images","onload","_handleImageLoad","onerror","_handleImageError","_img","_ref","_isArray2","_iterator2","_i2","spacing","margin","count","_calculateFrames","animations","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgs","imgW","imgH","naturalHeight","imgLoop","_H_OFFSETS","start","center","_V_OFFSETS","hanging","middle","alphabetic","ideographic","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","H_OFFSETS","V_OFFSETS","getMetrics","lines","vOffset","substr","paint","_workingContext","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","HTMLCanvasElement","AlphaMaskFilter","_MUL_TABLE","_SHG_TABLE","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","_updateShader","replace","toFixed","_getTable","spread","EDGE","adjust","factor","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","xChange","yChange","qChange","_compiledShader","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","_DELTA_INDEX","_IDENTITY_MATRIX","_LENGTH","ColorMatrix","brightness","contrast","setColor","adjustColor","IDENTITY_MATRIX","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","LENGTH","toArray","val","limit","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","label","__reset","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","disable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","_ERR_DIMENSIONS","_ERR_RUNNING","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","addFrame","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","_run","stopAsync","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","extractFrame","_workingCanvas","mergeAlpha","rgbImage","alphaImage","_flip","il","__tmp","fl","sfx","names","al","_alternateOutput","WebGLInspector","_stage","dispProps","item","_log","alternateOutput","log","_WebGLInspector$alter","_console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","toggleGPUDraw","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out"],"mappings":"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","file":"../easeljs-NEXT.js","sourcesContent":["/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\nexport default Event;\n","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/**\n * @license Ticker\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport Event from \"../events/Event\";\n\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n *\n * @memberof core\n * @example\n * Ticker.addEventListener(\"tick\", event => {\n *   // Actions carried out each tick (aka frame)\n *   if (!event.paused) {\n *     // Actions carried out when the Ticker is not paused.\n *   }\n * });\n * @example\n * // Ticker export explanation\n * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n * TickerClass.RAF // -> raf\n * Ticker === getTicker(\"createjs.global\") // -> true\n *\n * @extends core.EventDispatcher\n * @param {string} name The name assigned to this instance.\n */\nclass Ticker extends EventDispatcher {\n\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"synched\"\n\t * @readonly\n\t */\n\tstatic get RAF_SYNCHED () { return \"synched\"; }\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"raf\"\n\t * @readonly\n\t */\n\tstatic get RAF () { return \"raf\"; }\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"timeout\"\n\t * @readonly\n\t */\n\tstatic get TIMEOUT () { return \"timeout\"; }\n\n\tconstructor (name) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of this instance.\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n\t\t *\n\t\t * @see {@link core.Ticker.TIMEOUT}\n\t\t * @see {@link core.Ticker.RAF}\n\t\t * @see {@link core.Ticker.RAF_SYNCHED}\n\t\t *\n\t\t * @type {string}\n\t\t * @default Ticker.TIMEOUT\n\t\t */\n\t\tthis.timingMode = Ticker.TIMEOUT;\n\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t *\n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t *\n\t\t * If 0, there is no maximum.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.maxDelta = 0;\n\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase.\n\t\t *\n\t\t * @example\n\t\t * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n\t\t * Ticker.paused = true;\n\t\t *\n\t\t * @see {@link core.Ticker#event:tick}\n\t\t * @see {@link core.Ticker#getTime}\n\t\t * @see {@link core.Ticker#getEventTime}\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._inited = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._startTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pausedTime = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._ticks = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._pausedTicks = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._interval = 50;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._lastTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._times = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._tickTimes = null;\n\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis._timerId = null;\n\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t *\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis._raf = true;\n\t}\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t *\n\t * @type {number}\n\t */\n\tget interval () { return this._interval; }\n\tset interval (interval) {\n\t\tthis._interval = interval;\n\t\tif (!this._inited) { return; }\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t *\n\t * @type {number}\n\t */\n\tget framerate () { return 1000 / this._interval; }\n\tset framerate (framerate) { this.interval = 1000 / framerate; }\n\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t */\n\tinit () {\n\t\tif (this._inited) { return; }\n\t\tthis._inited = true;\n\t\tthis._times = [];\n\t\tthis._tickTimes = [];\n\t\tthis._startTime = this._getTime();\n\t\tthis._times.push(this._lastTime = 0);\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t */\n\treset () {\n\t\tif (this._raf) {\n\t\t\tlet f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf && f(this._timerId);\n\t\t} else {\n\t\t\tclearTimeout(this._timerId);\n\t\t}\n\t\tthis.removeAllEventListeners(\"tick\");\n\t\tthis._timerId = this._times = this._tickTimes = null;\n\t\tthis._startTime = this._lastTime = this._ticks = 0;\n\t\tthis._inited = false;\n\t}\n\n\t/**\n\t * Init the Ticker instance if it hasn't been already.\n\t */\n\taddEventListener (type, listener, useCapture) {\n\t\t!this._inited && this.init();\n\t\treturn super.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack.\n\t *\n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {number} The average time spent in a tick in milliseconds.\n\t */\n\tgetMeasuredTickTime (ticks = null) {\n\t\tconst times = this._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks || (this.framerate | 0));\n\t\treturn times.reduce((a, b) => a + b, 0) / ticks;\n\t}\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t */\n\tgetMeasuredFPS (ticks = null) {\n\t\tconst times = this._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length - 1, ticks || (this.framerate | 0));\n\t\treturn 1000 / ((times[0] - times[ticks]) / ticks);\n\t}\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t *\n\t * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t */\n\tgetTime (runTime = false) {\n\t\treturn this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n\t * event object.\n\t *\n\t * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tgetEventTime (runTime = false) {\n\t\treturn this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t *\n\t * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value.\n\t * @return {number} of ticks that have been broadcast.\n\t */\n\tgetTicks (pauseable = false) {\n\t\treturn this._ticks - (pauseable ? this._pausedTicks : 0);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleSynch () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n\t\t\tthis._tick();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleRAF () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTimeout () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_setupTick () {\n\t\tif (this._timerId != null) { return; } // avoid duplicates\n\t\tconst mode = this.timingMode || (this._raf && Ticker.RAF);\n\t\tif (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n\t\t\tconst f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tthis._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t\t\t\tthis._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._raf = false;\n\t\tthis._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t}\n\n\t/**\n\t * @private\n\t * @emits core.Ticker#event:tick\n\t */\n\t_tick () {\n\t\tconst paused = this.paused, time = this._getTime(), elapsedTime = time - this._lastTime;\n\t\tthis._lastTime = time;\n\t\tthis._ticks++;\n\n\t\tif (paused) {\n\t\t\tthis._pausedTicks++;\n\t\t\tthis._pausedTime += elapsedTime;\n\t\t}\n\n\t\tif (this.hasEventListener(\"tick\")) {\n\t\t\tconst event = new Event(\"tick\");\n\t\t\tconst maxDelta = this.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time - this._pausedTime;\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\t\tthis._tickTimes.unshift(this._getTime() - time);\n\t\twhile (this._tickTimes.length > 100) { this._tickTimes.pop(); }\n\n\t\tthis._times.unshift(time);\n\t\twhile (this._times.length > 100) { this._times.pop(); }\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getTime () {\n\t\tconst now = window.performance && window.performance.now;\n\t\treturn ((now && now.call(performance)) || (new Date().getTime())) - this._startTime;\n\t}\n\n\tstatic on (type, listener, scope, once, data, useCapture) { return _instance.on(type, listener, scope, once, data, useCapture); }\n\tstatic removeEventListener (type, listener, useCapture) { _instance.removeEventListener(type, listener, useCapture); }\n\tstatic off (type, listener, useCapture) { _instance.off(type, listener, useCapture); }\n\tstatic removeAllEventListeners (type) { _instance.removeAllEventListeners(type); }\n\tstatic dispatchEvent (eventObj, bubbles, cancelable) { return _instance.dispatchEvent(eventObj, bubbles, cancelable); }\n\tstatic hasEventListener (type) { return _instance.hasEventListener(type); }\n\tstatic willTrigger (type) { return _instance.willTrigger(type); }\n\tstatic toString () { return _instance.toString(); }\n\tstatic init () { _instance.init(); }\n\tstatic reset () { _instance.reset(); }\n\tstatic addEventListener (type, listener, useCapture) { _instance.addEventListener(type, listener, useCapture); }\n\tstatic getMeasuredTickTime (ticks) { return _instance.getMeasuredTickTime(ticks); }\n\tstatic getMeasuredFPS (ticks) { return _instance.getMeasuredFPS(ticks); }\n\tstatic getTime (runTime) { return _instance.getTime(runTime); }\n\tstatic getEventTime (runTime) { return _instance.getEventTime(runTime); }\n\tstatic getTicks (pauseable) { return _instance.getTicks(pauseable); }\n\n\tstatic get interval () { return _instance.interval; }\n\tstatic set interval (interval) { _instance.interval = interval; }\n\tstatic get framerate () { return _instance.framerate; }\n\tstatic set framerate (framerate) { _instance.framerate = framerate; }\n\tstatic get name () { return _instance.name; }\n\tstatic set name (name) { _instance.name = name; }\n\tstatic get timingMode () { return _instance.timingMode; }\n\tstatic set timingMode (timingMode) { _instance.timingMode = timingMode; }\n\tstatic get maxDelta () { return _instance.maxDelta; }\n\tstatic set maxDelta (maxDelta) { _instance.maxDelta = maxDelta; }\n\tstatic get paused () { return _instance.paused; }\n\tstatic set paused (paused) { _instance.paused = paused; }\n\n}\n\n/**\n * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused.\n *\n * @example\n * Ticker.addEventListener(\"tick\", event => console.log(\"Paused:\", event.paused, event.delta));\n *\n * @event core.Ticker#tick\n * @type {Object}\n * @property {Object} target The object that dispatched the event.\n * @property {string} type The event type.\n * @property {boolean} paused Indicates whether the ticker is currently paused.\n * @property {number} delta The time elapsed in ms since the last tick.\n * @property {number} time The total time in ms since Ticker was initialized.\n * @property {number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n * you could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n * @since 0.6.0\n */\n\nexport default Ticker;\n\n// the default Ticker instance\nconst _instance = new Ticker(\"createjs.global\");\n","/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass StageGL {\n\tconstructor () {\n\t\tthrow new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t}\n}\n\nexport default StageGL;\n","/*\n* @license UID\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet _nextID = 0;\n\n/**\n * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n * and should not be instantiated.\n * @class UID\n * @static\n * @module EaselJS\n */\nexport default class UID {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t */\n\tstatic get _nextID () { return _nextID; }\n\tstatic set _nextID (nextID) { _nextID = nextID; }\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t */\n\tstatic get () {\n\t\treturn UID._nextID++;\n\t}\n\n}\n","/*\n* @license Point\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * <h4>Example</h4>\n *\n *      var point = new createjs.Point(0, 100);\n *\n * @class Point\n */\nexport default class Point {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t */\n\tconstructor (x = 0, y = 0) {\n\t\tthis.setValues(x, y);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t */\n\tclone () {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t}\n\n}\n","/*\n* @license Matrix2D\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Point from \"./Point\";\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n *\n * @class Matrix2D\n */\nexport default class Matrix2D {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t */\n\tconstructor (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tsetValues (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprepend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet c1 = this.c;\n\t\tlet tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendMatrix (matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependMatrix (matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t *\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c;\n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t *\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\trotate (angle) {\n\t\tangle *= Matrix2D.DEG_TO_RAD;\n\t\tlet cos = Math.cos(angle);\n\t\tlet sin = Math.sin(angle);\n\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tskew (skewX, skewY) {\n\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tscale (x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\ttranslate (x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tidentity () {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tinvert () {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tlet tx1 = this.tx;\n\t\tlet n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t */\n\tisIdentity () {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t}\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t */\n\tequals (matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t}\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t */\n\ttransformPoint (x, y, pt = new Point()) {\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t}\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} [target={}] The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tdecompose (target = {}) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tlet skewX = Math.atan2(-this.c, this.d);\n\t\tlet skewY = Math.atan2(this.b, this.a);\n\n\t\tlet delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tcopy (matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t */\n\tclone () {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t}\n\n}\n\n// constants:\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @property DEG_TO_RAD\n * @static\n * @final\n * @type Number\n * @readonly\n */\n// static public properties:\n/**\n * An identity matrix, representing a null transformation.\n * @property identity\n * @static\n * @type Matrix2D\n * @readonly\n */\n{\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\tMatrix2D.identity = new Matrix2D();\n}\n","/*\n* @license DisplayProps\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Matrix2D from \"./Matrix2D\";\n\n/**\n * Used for calculating and encapsulating display related properties.\n * @class DisplayProps\n */\nexport default class DisplayProps {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t */\n\tconstructor (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t */\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t */\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t */\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible;\n\t\tthis.alpha = alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new Matrix2D();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tappend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t *\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tprepend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tidentity () {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t */\n\tclone () {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t}\n\n}\n","/*\n* @license Rectangle\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n *\n * <h4>Example</h4>\n *\n *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n *\n * @class Rectangle\n * @module EaselJS\n */\nexport default class Rectangle {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t */\n\tconstructor (x = 0, y = 0, width = 0, height = 0) {\n\t\tthis.setValues(x, y, width, height);\n\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0, width = 0, height = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\textend (x, y, width = 0, height = 0) {\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tpad (top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t}\n\n\t/**\n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tcontains (x, y, width = 0, height = 0) {\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tunion (rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tintersection (rect) {\n\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t}\n\n\t/**\n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tintersects (rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t}\n\n\t/**\n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tisEmpty () {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t}\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t */\n\tclone () {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n *\n * <h4>Example</h4>\n *\n *      myInstance.filters = [\n *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *          new createjs.BlurFilter(5, 5, 10)\n *      ];\n *      myInstance.cache(0,0, 100, 100);\n *\n * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @class Filter\n */\nexport default class Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t */\n\tgetBounds (rect) {\n\t\treturn rect;\n\t}\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\n\t}\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t */\n\tclone () {\n\t\treturn new Filter();\n\t}\n\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t */\n\t_applyFilter (imageData) {\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\nimport StageGL from \"../display/StageGL\";\n\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n *\n * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {{#crossLink \"Stage/update\"}}{{/crossLink}},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {{#crossLink \"Filter\"}}{{/crossLink}}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @class BitmapCache\n * @module EaselJS\n */\nexport default class BitmapCache extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t */\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t\t * with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/x:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/y:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t\t * useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.cacheID = 0;\n\n// private properties:\n\t\t/**\n\t\t * Relative offset of the x position, used for drawing the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offX.\n\t\t */\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offY.\n\t\t */\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation\n\t\t * @property _boundRect\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default Rectangle\n\t\t */\n\t\tthis._boundRect = new Rectangle();\n\n\t}\n\n\t/**\n\t * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes\n\t * bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=Rectangle] Optional parameter, if provided then calculated bounds will be applied to that\n\t * object.\n\t * @return {Rectangle} a string representation of the instance.\n\t * @todo Please clarify if the return type is a Rectangle or string.\n\t * @static\n\t */\n\tstatic getFilterBounds (target, output = new Rectangle()) {\n\t\tlet filters = target.filters;\n\t\tlet filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor (let i=0; i<filterCount; i++) {\n\t\t\tlet f = filters[i];\n\t\t\tif (!f || !f.getBounds) { continue; }\n\t\t\tlet test = f.getBounds();\n\t\t\tif (!test) { continue; }\n\t\t\tif (i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n// public methods:\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}. Creates and sets properties needed\n\t * for a cache to function, and performs the initial update.\n\t * @method define\n\t * @param {DisplayObject} target The DisplayObject this cache is linked to.\n\t * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t * @param {Number} [width=1] The width of the cache region.\n\t * @param {Number} [height=1] The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t * and rotate cached elements with greater fidelity.\n\t * @param {Object} [options] When using things like {{#crossLink \"StageGL\"}}{{/crossLink}} there may be\n\t * extra caching opportunities or requirements.\n\t */\n\tdefine (target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t\tif (!target) { throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis._useWebGL = options !== undefined;\n\t\tthis.target = target;\n\n\t\tthis.width = width >= 1 ? width : 1;\n\t\tthis.height = height >= 1 ? height : 1;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scale = scale;\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t */\n\tupdate (compositeOperation) {\n\t\tif (!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tlet filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tlet surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t}\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t */\n\trelease () {\n\t\tlet stage = this.target.stage;\n\t\tif (this._useWebGL && this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT) { this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else if (stage instanceof StageGL) {\n\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t}\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\tlet cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t}\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t */\n\tdraw (ctx) {\n\t\tif (!this.target) { return false; }\n\t\tctx.drawImage(\n\t\t\tthis.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\n\t\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\n\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @method getBounds\n\t * @returns {Rectangle}\n\t */\n\tgetBounds () {\n\t\tconst scale = this.scale;\n\t\treturn this._boundRect.setValue(\n\t\t\tthis._filterOffX/scale,\n\t\t\tthis._filterOffY/scale,\n\t\t\tthis.width/scale,\n\t\t\tthis.height/scale\n\t\t);\n\t}\n\n\n// private methods:\n\t/**\n\t * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t * create and or size the canvas as needed.\n\t * @method _updateSurface\n\t * @protected\n\t */\n\t_updateSurface () {\n\t\tlet surface;\n\t\tif (!this._useWebGL) {\n\t\t\tsurface = this.target.cacheCanvas;\n\t\t\t// create it if it's missing\n\t\t\tif (!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\t// skip the webgl-only updates\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t\t\t\t\tthrow `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\t\t\t} else if (this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;    // use this flag to control stage sizing and final output\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tlet stageGL = this._webGLCache;\n\t\tsurface = this.target.cacheCanvas;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else if (!stageGL.isCacheControlled) {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t}\n\t}\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t */\n\t_drawToCache (compositeOperation) {\n\t\tlet target = this.target;\n\t\tlet surface = target.cacheCanvas;\n\t\tlet webGL = this._webGLCache;\n\n\t\tif (!this._useWebGL || !webGL) {\n\t\t\tlet ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(target);\n\t\t\t}\n\t\t\tsurface._invalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n\t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\t\tsurface = this.target.cacheCanvas;\n\t\tsurface.width = this._drawWidth;\n\t\tsurface.height = this._drawHeight;\n\t\tsurface._invalid = true;\n\t}\n\n\t/**\n\t * Work through every filter and apply its individual transformation to it.\n\t * @method _applyFilters\n\t * @protected\n\t */\n\t_applyFilters () {\n\t\tlet surface = this.target.cacheCanvas;\n\t\tlet filters = this.target.filters;\n\n\t\tlet w = this._drawWidth;\n\t\tlet h = this._drawHeight;\n\n\t\t// setup\n\t\tlet data = surface.getContext(\"2d\").getImageData(0,0, w,h);\n\n\t\t// apply\n\t\tlet l = filters.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tfilters[i]._applyFilter(data);\n\t\t}\n\n\t\t//done\n\t\tsurface.getContext(\"2d\").putImageData(data, 0,0);\n\t}\n\n}\n\n/**\n * Functionality injected to {{#crossLink \"BitmapCache\"}}{{/crossLink}}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n * <h4>Example</h4>\n * Using WebGL cache with a 2d context\n *\n *     var stage = new createjs.Stage();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, true);          // no StageGL to use, so make one\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * <h4>Example</h4>\n * Using WebGL cache with a WebGL context:\n *\n *     var stageGL = new createjs.StageGL();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL);       // use our StageGL to cache\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n * @method cache\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity. Default is 1.\n * @param {Boolean|StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n","/*\n* @license DisplayObject\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport UID from \"../utils/UID\";\nimport DisplayProps from \"../geom/DisplayProps\";\nimport Rectangle from \"../geom/Rectangle\";\nimport Point from \"../geom/Point\";\nimport Matrix2D from \"../geom/Matrix2D\";\nimport BitmapCache from \"../filters/BitmapCache\";\n\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n * @class DisplayObject\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class DisplayObject extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t* If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n\t\t* for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @property cacheCanvas\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * for more information.\n\t\t * @property bitmapCache\n\t\t * @type {BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @property id\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tthis.id = UID.get();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n\t\t * provided in the next release of EaselJS.\n\t\t * @property mouseEnabled\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n\t\t * debugging.\n\t\t * @property name\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n\t\t * contains this display object, or null if it has not been added\n\t\t * to one.\n\t\t * @property parent\n\t\t * @final\n\t\t * @type {Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n\t\t * @property regX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n\t\t * @property regY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @property scaleX\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @property scaleY\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @property skewX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @property skewY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @property shadow\n\t\t * @type {Shadow}\n\t\t * @default null\n\t\t */\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.x = 0;\n\n\t\t/**\n\t\t * The y (vertical) position of the display object, relative to its parent.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @property transformMatrix\n\t\t * @type {Matrix2D}\n\t\t * @default null\n\t\t */\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t\t * whatwg spec on compositing</a>.\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @property snapToPixel\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n\t\t * cached.\n\t\t * @property filters\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @property mask\n\t\t * @type {Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t *\n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t * @property cursor\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\n// private properties:\n\t\t/**\n\t\t * @property _props\n\t\t * @protected\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis._props = new DisplayProps();\n\n\t\t/**\n\t\t * @property _rectangle\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._rectangle = new Rectangle();\n\n\t\t/**\n\t\t * @property _bounds\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @property stage\n\t * @type {Stage}\n\t * @readonly\n\t */\n\tget stage () {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tlet o = this;\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) { return o; }\n\t\treturn null;\n\t}\n\n\tget scale () {\n\t\treturn this.scaleX;\n\t}\n\n\t/**\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n\t * it will return only the `scaleX`.\n\t * @property scale\n\t * @type {Number}\n\t * @default 1\n\t */\n\tset scale (value) {\n\t\tthis.scaleX = this.scaleY = value;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Alias for draw(). Used by grandchildren (or deeper) in their draw method to directly call DisplayObject.draw, bypassing\n\t * their parent(s).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\treturn this.drawCache(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawCache\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdrawCache (ctx, ignoreCache = false) {\n\t\tlet cache = this.bitmapCache;\n\t\tif (cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n\t * @method updateContext\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t */\n\tupdateContext (ctx) {\n\t\tlet o=this, mask=o.mask, mtx=o._props.matrix;\n\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\n\t\tthis.getMatrix(mtx);\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t}\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * <h4>Example</h4>\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t *\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      myShape.cache(-25, -25, 50, 50);\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n\t *\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t */\n\tcache (x, y, width, height, scale = 1, options) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthis.bitmapCache = new BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t}\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * <h4>Example</h4>\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n\t * will be drawn on top of the old one.\n\t *\n\t *      // Not shown: Creating the shape, and caching it.\n\t *      shapeInstance.clear();\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n\t *      shapeInstance.updateCache();\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method updateCache\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t * whatwg spec on compositing</a>.\n\t */\n\tupdateCache (compositeOperation) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthrow \"cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t}\n\n\t/**\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n\t * @method uncache\n\t */\n\tuncache () {\n\t\tif (this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.localToGlobal(100, 100);\n\t *      // Results in x=400, y=300\n\t *\n\t * @method localToGlobal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t */\n\tlocalToGlobal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.globalToLocal(100, 100);\n\t *      // Results in x=-200, y=-100\n\t *\n\t * @method globalToLocal\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t */\n\tglobalToLocal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t *\n\t *      var pt = this.localToGlobal(x, y);\n\t *      pt = target.globalToLocal(pt.x, pt.y);\n\t *\n\t * @method localToLocal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t */\n\tlocalToLocal (x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t}\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @method setTransform\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n\t * @chainable\n\t*/\n\tsetTransform (x=0, y=0, scaleX=1, scaleY=1, rotation=0, skewX=0, skewY=0, regX=0, regY=0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scaleX = scaleX;\n\t\tthis.scaleY = scaleY;\n\t\tthis.rotation = rotation;\n\t\tthis.skewX = skewX;\n\t\tthis.skewY = skewY;\n\t\tthis.regX = regX;\n\t\tthis.regY = regY;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @method getMatrix\n\t * @param {Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new\n\t * Matrix object is returned.\n\t * @return {Matrix2D} A matrix representing this display object's transform.\n\t */\n\tgetMatrix (matrix) {\n\t\tlet o = this, mtx = matrix&&matrix.identity() || new Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t}\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t * @method getConcatenatedMatrix\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new Matrix2D object is returned.\n\t * @return {Matrix2D} The combined matrix.\n\t */\n\tgetConcatenatedMatrix (matrix) {\n\t\tlet o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t}\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n\t * @method getConcatenatedDisplayProps\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new DisplayProps object is returned.\n\t * @return {DisplayProps} The combined display properties.\n\t */\n\tgetConcatenatedDisplayProps (props) {\n\t\tprops = props ? props.identity() : new DisplayProps();\n\t\tlet o = this, mtx = o.getMatrix(props.matrix);\n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n\t *      function handleMouseDown(event) {\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\n\t *      }\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\thitTest (x, y) {\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tlet hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t *\n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly:\n\t *\n\t * \tvar bounds = obj.getBounds();\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * \t// getBounds will now use the set values, instead of recalculating\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * \tvar myBounds = obj.getBounds().clone();\n\t * \t// OR:\n\t * \tmyRect.copy(obj.getBounds());\n\t *\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n\t * object.\n\t */\n\tgetBounds () {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tlet cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tlet scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @method getTransformedBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t *\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t * @method setBounds\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t */\n\tsetBounds (x, y, width, height) {\n\t\tif (x == null) { this._bounds = x; }\n\t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t}\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t * @method clone\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new DisplayObject());\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\n// private methods:\n\t// separated so it can be used more easily in subclasses:\n\t/**\n\t * @method _cloneProps\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {DisplayObject} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _applyShadow\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Shadow} [shadow=Shadow]\n\t */\n\t_applyShadow (ctx, shadow = Shadow.identity) {\n\t\tshadow = shadow;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tlet ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t}\n\n\t/**\n\t * @method _testHit\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t */\n\t_testHit (ctx) {\n\t\ttry {\n\t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t}\n\n\t/**\n\t * @method _transformBounds\n\t * @param {Rectangle} bounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_transformBounds (bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tlet { x, y, width, height } = bounds;\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tlet x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tlet y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\n\t\tlet minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t}\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @method _hasMouseEventListener\n\t * @return {Boolean}\n\t * @protected\n\t */\n\t_hasMouseEventListener () {\n\t\tlet evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (let i=0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t}\n\n}\n\n// static properties:\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @property _MOUSE_EVENTS\n * @protected\n * @static\n * @type {Array}\n * @readonly\n */\n\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @property suppressCrossDomainErrors\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _snapToPixelEnabled\n * @protected\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _hitTestCanvas\n * @type {HTMLCanvasElement | Object}\n * @static\n * @protected\n */\n/**\n * @property _hitTestContext\n * @type {CanvasRenderingContext2D}\n * @static\n * @protected\n */\n{\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\t// ES6 does not support static properties, this is a work around.\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\tDisplayObject.suppressCrossDomainErrors = false;\n\tDisplayObject.snapToPixelEnabled = false;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_NONE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_NONE = 0;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_SPRITE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_SPRITE = 1;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_BITMAP\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_BITMAP = 2;\n\n}\n\n// events:\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object. See the\n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n\t * myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t * @event pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t * @event pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n\t * dispatched on their parent.\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n\t * @since 0.6.0\n\t */\n","/*\n* @license Container\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from './DisplayObject';\n\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * <h4>Example</h4>\n *\n *      var container = new createjs.Container();\n *      container.addChild(bitmapInstance, shapeInstance);\n *      container.x = 100;\n *\n * @class Container\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Container extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n\t\t * included for advanced uses.\n\t\t * @property children\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @property mouseChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickChildren = true;\n\t\t}\n\n// accessor properties:\n\t/**\n\t * Returns the number of children in the container.\n\t * @property numChildren\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget numChildren () {\n\t\treturn this.children.length;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tlet list = this.children.slice();\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tlet child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance);\n\t *\n\t * You can also add multiple children at once:\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @method addChild\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n\t */\n\taddChild (...children) {\n\t\tconst l = children.length;\n\t\tif (l === 0) { return null; }\n\t\tlet child = children[0];\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { child = this.addChild(children[i]); }\n\t\t\treturn child;\n\t\t}\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this Container.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      addChildAt(child1, index);\n\t *\n\t * You can also add multiple children, such as:\n\t *\n\t *      addChildAt(child1, child2, ..., index);\n\t *\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n\t * you could use:\n\t *\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t *\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @method addChildAt\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t */\n\taddChildAt (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return null; }\n    let index = children.pop();\n\t\tif (index < 0 || index > this.children.length) { return children[l - 2]; }\n\t\tif (l > 2) {\n\t\t\tfor (let i = 0; i < l - 1; i++) { this.addChildAt(children[i], index++); }\n\t\t\treturn children[l - 2];\n\t\t}\n\t\tlet child = children[0];\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index++, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChild(child);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      removeChild(child1, child2, ...);\n\t *\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\n\t * @method removeChild\n\t * @param {DisplayObject} children The display object(s) to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t */\n\tremoveChild (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeChild(children[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n\t}\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChildAt(2);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      container.removeChild(2, 7, ...)\n\t *\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\n\t * @method removeChildAt\n\t * @param {...Number} indexes The indexes of children to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t */\n\tremoveChildAt (...indexes) {\n\t\tconst l = indexes.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tindexes.sort((a, b) => b - a);\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this._removeChildAt(indexes[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(indexes[0]);\n\t}\n\n\t/**\n\t * Removes all children from the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tcontainer.removeAllChildren();\n\t *\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {\n\t\tlet kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t}\n\n\t/**\n\t * Returns the child at the specified index.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.getChildAt(2);\n\t *\n\t * @method getChildAt\n\t * @param {Number} index The index of the child to return.\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t */\n\tgetChildAt (index) {\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @method getChildByName\n\t * @param {String} name The name of the child to return.\n\t * @return {DisplayObject} The child with the specified name.\n\t */\n\tgetChildByName (name) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (kids[i].name === name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * <h4>Example: Display children with a higher y in front.</h4>\n\t *\n\t *      var sortFunction = function(obj1, obj2, options) {\n\t *          if (obj1.y > obj2.y) { return 1; }\n\t *          if (obj1.y < obj2.y) { return -1; }\n\t *          return 0;\n\t *      }\n\t *      container.sortChildren(sortFunction);\n\t *\n\t * @method sortChildren\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n\t * documentation for details.\n\t */\n\tsortChildren (sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t}\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var index = container.getChildIndex(child);\n\t *\n\t * @method getChildIndex\n\t * @param {DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t */\n\tgetChildIndex (child) {\n\t\treturn this.children.indexOf(child);\n\t}\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @method swapChildrenAt\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t */\n\tswapChildrenAt (index1, index2) {\n\t\tlet kids = this.children;\n\t\tlet o1 = kids[index1];\n\t\tlet o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @method swapChildren\n\t * @param {DisplayObject} child1\n\t * @param {DisplayObject} child2\n\t */\n\tswapChildren (child1, child2) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tlet index1,index2;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child1) { index1 = i; }\n\t\t\tif (kids[i] === child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i === l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t}\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {DisplayObject} child\n\t * @param {Number} index\n\t * @method setChildIndex\n\t */\n\tsetChildIndex (child, index) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child) { break; }\n\t\t}\n\t\tif (i === l || i === index) { return; }\n\t\tkids.splice(i, 1);\n\t\tkids.splice(index, 0, child);\n\t}\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @method contains\n\t * @param {DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t */\n\tcontains (child) {\n\t\twhile (child) {\n\t\t\tif (child === this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t */\n\thitTest (x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn this.getObjectUnderPoint(x, y) != null;\n\t}\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n\t * and only if the mouse's position has changed.\n\t *\n\t * <ul>\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n\t * </li>\n\t *\n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n\t * @method getObjectsUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\n\t */\n\tgetObjectsUnderPoint (x, y, mode = 0) {\n\t\tlet arr = [];\n\t\tlet pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n\t * @method getObjectUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\n\t */\n\tgetObjectUnderPoint (x, y, mode = 0) {\n\t\tlet pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\treturn this._getBounds(null, true);\n\t}\n\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {Container} A clone of the current Container instance.\n\t */\n\tclone (recursive = false) {\n\t\tlet o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\tlet child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @method cloneChildren\n\t * @protected\n\t * @param {Container} o The target container.\n\t */\n\t_cloneChildren (o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tlet arr = o.children;\n\t\tconst l = this.children.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t}\n\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   * @method removeChildAt\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   **/\n  _removeChildAt (index, silent = false) {\n    if (index < 0 || index > this.children.length - 1) { return false; }\n    let child = this.children[index];\n    if (child) { child.parent = null; }\n    this.children.splice(index, 1);\n    if (!silent) { child.dispatchEvent(\"removed\"); }\n    return true;\n  }\n\n\t/**\n\t * @method _getObjectsUnderPoint\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t * @return {DisplayObject}\n\t * @protected\n\t */\n\t_getObjectsUnderPoint (x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tlet mtx, ctx = DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse && this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tlet children = this.children;\n\t\tconst l = children.length;\n\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\tlet child = children[i];\n\t\t\tlet hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tlet result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tlet props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea || child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @method _testMask\n\t * @param {DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t * @protected\n\t */\n\t_testMask (target, x, y) {\n\t\tlet mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n\t\tlet mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = super.getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tconst l = this.children.length;\n\t\tlet rect = null;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t}\n\n}\n","/*\n* @license MouseEvent\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n * @class MouseEvent\n * @extends Event\n * @module EaselJS\n */\nexport default class MouseEvent extends Event {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t */\n\tconstructor (type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tsuper (type, bubbles, cancelable);\n\n// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t */\n\t\tthis.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t */\n\t\tthis.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t *\n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\n// accessor properties:\n/**\n * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n * @property localX\n * @type {Number}\n * @readonly\n */\n\tget localX () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t}\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localY () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t}\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tget isTouch () {\n\t\treturn this.pointerID !== -1;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t */\n\tclone () {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t}\n\n}\n","/*\n* @license Stage\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport MouseEvent from \"../events/MouseEvent\";\n\n/**\n * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n * method is called, it will render its display list to its target canvas.\n *\n * <h4>Example</h4>\n * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvasElementId\");\n *      var image = new createjs.Bitmap(\"imagePath.png\");\n *      stage.addChild(image);\n *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n *      function handleTick(event) {\n *          image.x += 10;\n *          stage.update();\n *      }\n *\n * @class Stage\n * @extends Container\n * @module EaselJS\n */\nexport default class Stage extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t */\n\tconstructor (canvas) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t */\n\t\tthis.canvas = (typeof canvas === \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\n// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._nextStage = null;\n\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._prevStage = null;\n\n\t\tthis.enableDOMEvents(true);\n\t}\n\n// accessor properties:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t *\n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t *\n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t *\n\t *\ttargetStage.enableDOMEvents(false);\n\t *\n\t * @property nextStage\n\t * @type {Stage}\n\t */\n\tget nextStage () {\n\t\treturn this._nextStage;\n\t}\n\n\tset nextStage (stage) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (stage) { stage._prevStage = this; }\n\t\tthis._nextStage = stage;\n\t}\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t */\n\tupdate (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tlet r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t}\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t *\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t *\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t *\n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t */\n\ttick (props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tlet evtObj = new Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (let n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t}\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage\");\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t */\n\thandleEvent (evt) {\n\t\tif (evt.type === \"tick\") { this.update(evt); }\n\t}\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t */\n\tclear () {\n\t\tif (!this.canvas) { return; }\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t}\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t */\n\ttoDataURL (backgroundColor, mimeType = \"image/png\") {\n\t\tlet data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tlet dataURL = this.canvas.toDataURL(mimeType);\n\n\t\tif (backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t */\n\tenableMouseOver (frequency = 20) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency === 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency <= 0) { return; }\n\t\tthis._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000/Math.min(50,frequency));\n\t}\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t */\n\tenableDOMEvents (enable = true) {\n\t\tlet ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tlet t = window.addEventListener ? window : document;\n\t\t\tls = this._eventListeners = {\n\t\t\t\tmouseup: {t, f:e => this._handleMouseUp(e) },\n\t\t\t\tmousemove: {t, f:e => this._handleMouseMove(e) },\n\t\t\t\tdblclick: {t:this.canvas, f:e => this._handleDoubleClick(e) },\n\t\t\t\tmousedown: {t:this.canvas, f:e => this._handleMouseDown(e) }\n\t\t\t};\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t}\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t */\n\t_getElementRect (e) {\n\t\tlet bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top:e.offsetTop, left:e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tlet offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tlet offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tlet styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\t\tlet padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tlet padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tlet padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tlet padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t};\n\t}\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t */\n\t_getPointerData (id) {\n\t\tlet data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0, y:0}; }\n\t\treturn data;\n\t}\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} [e=window.event]\n\t */\n\t_handleMouseMove (e = window.event) {\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerMove (id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tlet nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tlet inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds === !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t}\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t */\n\t_updatePointerPosition (id, e, pageX, pageY) {\n\t\tlet rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tlet w = this.canvas.width;\n\t\tlet h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tlet o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseUp (e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t}\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerUp (id, e, clear, owner) {\n\t\tlet nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n\t\tif (target === oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t}\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseDown (e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerDown (id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tlet target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t}\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t */\n\t_testMouseOver (clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tlet o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds)) { return; }\n\n\t\tlet e = o.posEvtObj;\n\t\tlet isEventTarget = eventTarget || e&&(e.target === this.canvas);\n\t\tlet target=null, common = -1, cursor=\"\";\n\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tlet oldList = this._mouseOverTarget||[];\n\t\tlet oldTarget = oldList[oldList.length-1];\n\t\tlet list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tlet t = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t}\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handleDoubleClick (e, owner) {\n\t\tlet target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t}\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t */\n\t_dispatchMouseEvent (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tlet pt = this._mtx.transformPoint(o.x, o.y);\n\t\tlet evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tlet evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemousemove\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event stagemousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemouseup\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseleave\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseenter\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event tickstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event tickend\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event drawstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event drawend\n * @since 0.7.0\n */\n","/**\n* @license VideoBuffer\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n * \tvar myBitmap = new Bitmap(myBuffer);\n *\n * @class VideoBuffer\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n * @constructor\n **/\nexport default class VideoBuffer {\n\n  constructor (video) {\n// private properties:\n  \t/**\n  \t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n  \t * @property readyState\n  \t * @protected\n  \t * @type {Number}\n  \t * @default 0\n  \t **/\n  \tthis.readyState = video.readyState;\n\n  \t/**\n  \t * @property _video\n  \t * @protected\n  \t * @type {HTMLVideoElement}\n  \t * @default 0\n  \t **/\n  \tthis._video = video;\n\n  \t/**\n  \t * @property _canvas\n  \t * @protected\n  \t * @type {HTMLCanvasElement}\n  \t * @default 0\n  \t **/\n  \tthis._canvas = null;\n\n  \t/**\n  \t * @property _lastTime\n  \t * @protected\n  \t * @type {Number}\n  \t * @default -1\n  \t **/\n  \tthis._lastTime = -1;\n\n  \tif (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } //once:true isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n// public methods:\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   * @method getImage\n   **/\n  getImage () {\n  \tif (this.readyState < 2) { return; }\n  \tlet canvas = this._canvas, video = this._video;\n  \tif (!canvas) {\n\t\t\tcanvas = this._canvas = document.createElement(\"canvas\");\n  \t\tcanvas.width = video.videoWidth;\n  \t\tcanvas.height = video.videoHeight;\n  \t}\n  \tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n  \t\tconst ctx = canvas.getContext(\"2d\");\n  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \t\tthis._lastTime = video.currentTime;\n  \t}\n  \treturn canvas;\n  }\n\n  // private methods:\n  /**\n   * @method _videoReady\n   * @protected\n   **/\n  _videoReady () {\n  \tthis.readyState = 2;\n  }\n\n}\n","/*\n* @license Bitmap\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport VideoBuffer from \"../utils/VideoBuffer\";\n\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <h4>Example</h4>\n *\n *      var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @class Bitmap\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Bitmap extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t * @constructor\n\t */\n\tconstructor (imageOrUri) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t */\n\t\tif (typeof imageOrUri === \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet image = this.image;\n\t\tlet hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tlet img = this.image, rect = this.sourceRect;\n\t\tif (img instanceof VideoBuffer) { img = img.getImage(); }\n\t\tif (img == null) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tlet rect = super.getBounds();\n\t\tif (rect) { return rect; }\n\t\tlet image = this.image, o = this.sourceRect || image;\n\t\tlet hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t}\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t */\n\tclone (node) {\n\t\tlet img = this.image;\n\t\tif (img != null && node != null) { img = img.cloneNode(); }\n\t\tlet bmp = new Bitmap(img);\n\t\tif (this.sourceRect) { bmp.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(bmp);\n\t\treturn bmp;\n\t}\n\n}\n","/*\n* @license Sprite\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n *\n * <h4>Example</h4>\n *\n *      var instance = new createjs.Sprite(spriteSheet);\n *      instance.gotoAndStop(\"frameName\");\n *\n * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @class Sprite\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Sprite extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t */\n\tconstructor (spriteSheet, frameOrAnimation) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t */\n\t\tthis.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = 0;\n\n\n// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tlet o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tlet rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t */\n\tgotoAndPlay (frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t */\n\tgotoAndStop (frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet fps = this.framerate || this.spriteSheet.framerate;\n\t\tlet t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t */\n\tgetBounds () {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t}\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t}\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t */\n\t_tick (evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t * @param {Number} [frameDelta=0]\n\t */\n\t_normalizeFrame (frameDelta = 0) {\n\t\tlet animation = this._animation;\n\t\tlet paused = this.paused;\n\t\tlet frame = this._currentFrame;\n\n\t\tif (animation) {\n\t\t\tlet speed = animation.speed || 1;\n\t\t\tlet animFrame = this.currentAnimationFrame;\n\t\t\tlet l = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tlet next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tlet l = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @method _dispatchAnimationEnd\n\t * @param animation\n\t * @param frame\n\t * @param paused\n\t * @param next\n\t * @param end\n\t * @private\n\t */\n\t_dispatchAnimationEnd (animation, frame, paused, next, end) {\n\t\tlet name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tlet evt = new Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tlet changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t */\n\t_goto (frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tlet data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when an animation reaches its ends.\n * @event animationend\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {String} name The name of the animation that just ended.\n * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event change\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n */\n","/*\n* @license BitmapText\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport Sprite from \"./Sprite\";\n\n// ES6 does not support static properties, this is a work around.\nlet _maxPoolSize = 100;\nlet _spritePool = [];\n\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n * property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @class BitmapText\n * @extends Container\n * @module EaselJS\n */\nexport default class BitmapText extends Container {\n\n// constructor:\n\t/**\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t */\n\tconstructor (text = \"\", spriteSheet = null) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t *\n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.spaceWidth = 0;\n\n\n// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\n\t}\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t */\n\tstatic get maxPoolSize () { return _maxPoolSize; }\n\tstatic set maxPoolSize (maxPoolSize) { _maxPoolSize = maxPoolSize;}\n\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t * @readonly\n\t */\n\tstatic get _spritePool () { return _spritePool; }\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (this.drawCache(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tthis._updateText();\n\t\treturn super.getBounds();\n\t}\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t}\n\n\tclone () {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t */\n\taddChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t */\n\taddChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t */\n\tremoveChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t */\n\tremoveChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tthis._updateText();\n\t}\n\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getFrameIndex (character, spriteSheet) {\n\t\tlet c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t}\n\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t */\n\t_getFrame (character, spriteSheet) {\n\t\tlet index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t}\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getLineHeight (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t}\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getSpaceWidth (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t */\n\t_updateText () {\n\t\tlet x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n\t\tlet pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n\t\tfor (let n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\n\t\tlet hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\n\t\tfor (let i = 0, l = this.text.length; i < l; i++) {\n\t\t\tlet character = this.text.charAt(i);\n\t\t\tif (character === \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n\t\t\t\tif (character === \"\\r\" && this.text.charAt(i+1) === \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t}\n\n}\n","/*\n* @license DOMElement\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport DisplayProps from \"../geom/DisplayProps\";\n\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @class DOMElement\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class DOMElement extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLElement|String} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tconstructor (htmlElement) {\n\t\tsuper();\n\n\t\tif (typeof(htmlElement) === \"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\n\t\tlet style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\n// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn this.htmlElement != null;\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tcache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tuncache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tupdateCache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\thitTest () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tlocalToGlobal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tglobalToLocal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tlocalToLocal () {}\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tif (stage != null && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\t_handleDrawEnd (evt) {\n\t\tlet o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tlet style = o.style;\n\n\t\tlet props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n\t\tlet visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\n\t\tlet oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tlet n = 10000; // precision\n\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tlet str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t}\n\n}\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mousedown\n */\n\n/**\n * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mouseover\n */\n\n/**\n * Not applicable to DOMElement.\n * @event tick\n */\n","/**\n* @license Graphics\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n *      var g = new createjs.Graphics();\n *      g.setStrokeStyle(1);\n *      g.beginStroke(\"#000000\");\n *      g.beginFill(\"red\");\n *      g.drawCircle(0,0,30);\n *\n * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n *\n *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n *\n *      var fillCommand = myGraphics.beginFill(\"red\").command;\n *      // ... later, update the fill style/color:\n *      fillCommand.style = \"blue\";\n *      // or change it to a bitmap fill:\n *      fillCommand.bitmap(myImage);\n *\n * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n *      myGraphics.append(createjs.Graphics.beginCmd);\n *      // we need to define the path before applying the fill:\n *      var circle = new createjs.Graphics.Circle(0,0,30);\n *      myGraphics.append(circle);\n *      // fill the path we just defined:\n *      var fill = new createjs.Graphics.Fill(\"red\");\n *      myGraphics.append(fill);\n *\n * These approaches can be used together, for example to insert a custom command:\n *\n *      myGraphics.beginFill(\"red\");\n *      var customCommand = new CustomSpiralCommand(etc);\n *      myGraphics.append(customCommand);\n *      myGraphics.beginFill(\"blue\");\n *      myGraphics.drawCircle(0, 0, 30);\n *\n * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n * </table>\n *\n * Here is the above example, using the tiny API instead.\n *\n *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @class Graphics\n * @module EaselJS\n */\nexport default class Graphics {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t */\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t */\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._strokeStyle = null;\n\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._strokeDash = null;\n\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t */\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t */\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._storeIndex = 0;\n\n// ActionScript mappings:\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method curveTo\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.curveTo = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method drawRect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.drawRect = this.rect;\n\n// tiny API:\n\t\t/**\n\t\t * Shortcut to moveTo.\n\t\t * @method mt\n\t\t * @param {Number} x The x coordinate the drawing point should move to.\n\t\t * @param {Number} y The y coordinate the drawing point should move to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.mt = this.moveTo;\n\n\t\t/**\n\t\t * Shortcut to lineTo.\n\t\t * @method lt\n\t\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lt = this.lineTo;\n\n\t\t/**\n\t\t * Shortcut to arcTo.\n\t\t * @method at\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.at = this.arcTo;\n\n\t\t/**\n\t\t * Shortcut to bezierCurveTo.\n\t\t * @method bt\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bt = this.bezierCurveTo;\n\n\t\t/**\n\t\t * Shortcut to quadraticCurveTo / curveTo.\n\t\t * @method qt\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.qt = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Shortcut to arc.\n\t\t * @method a\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle Measured in radians.\n\t\t * @param {Number} endAngle Measured in radians.\n\t\t * @param {Boolean} anticlockwise\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.a = this.arc;\n\n\t\t/**\n\t\t * Shortcut to rect.\n\t\t * @method r\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.r = this.rect;\n\n\t\t/**\n\t\t * Shortcut to closePath.\n\t\t * @method cp\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.cp = this.closePath;\n\n\t\t/**\n\t\t * Shortcut to clear.\n\t\t * @method c\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.c = this.clear;\n\n\t\t/**\n\t\t * Shortcut to beginFill.\n\t\t * @method f\n\t\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no fill.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.f = this.beginFill;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientFill.\n\t\t * @method lf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t\t * drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t\t * the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lf = this.beginLinearGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientFill.\n\t\t * @method rf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rf = this.beginRadialGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapFill.\n\t\t * @method bf\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t\t * will be applied relative to the parent transform.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bf = this.beginBitmapFill;\n\n\t\t/**\n\t\t * Shortcut to endFill.\n\t\t * @method ef\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ef = this.endFill;\n\n\t\t/**\n\t\t * Shortcut to setStrokeStyle.\n\t\t * @method ss\n\t\t * @param {Number} thickness The width of the stroke.\n\t\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t\t * the tiny API.\n\t\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t\t * for use with the tiny API.\n\t\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t\t * controls at what point a mitered joint will be clipped.\n\t\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t\t * of active transformations.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ss = this.setStrokeStyle;\n\n\t\t/**\n\t\t * Shortcut to setStrokeDash.\n\t\t * @method sd\n\t\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t\t * Passing null or an empty array will clear any existing dash.\n\t\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.sd = this.setStrokeDash;\n\n\t\t/**\n\t\t * Shortcut to beginStroke.\n\t\t * @method s\n\t\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no stroke.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.s = this.beginStroke;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientStroke.\n\t\t * @method ls\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ls = this.beginLinearGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientStroke.\n\t\t * @method rs\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t\t * to 100%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rs = this.beginRadialGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapStroke.\n\t\t * @method bs\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bs = this.beginBitmapStroke;\n\n\t\t/**\n\t\t * Shortcut to endStroke.\n\t\t * @method es\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.es = this.endStroke;\n\n\t\t/**\n\t\t * Shortcut to drawRect.\n\t\t * @method dr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dr = this.drawRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRect.\n\t\t * @method rr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radius Corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rr = this.drawRoundRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRectComplex.\n\t\t * @method rc\n\t\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t\t * @param {Number} w The width of the round rect.\n\t\t * @param {Number} h The height of the round rect.\n\t\t * @param {Number} radiusTL Top left corner radius.\n\t\t * @param {Number} radiusTR Top right corner radius.\n\t\t * @param {Number} radiusBR Bottom right corner radius.\n\t\t * @param {Number} radiusBL Bottom left corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rc = this.drawRoundRectComplex;\n\n\t\t/**\n\t\t * Shortcut to drawCircle.\n\t\t * @method dc\n\t\t * @param {Number} x x coordinate center point of circle.\n\t\t * @param {Number} y y coordinate center point of circle.\n\t\t * @param {Number} radius Radius of circle.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dc = this.drawCircle;\n\n\t\t/**\n\t\t * Shortcut to drawEllipse.\n\t\t * @method de\n\t\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from center.\n\t\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from the center.\n\t\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t\t * number.\n\t\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.de = this.drawEllipse;\n\n\t\t/**\n\t\t * Shortcut to drawPolyStar.\n\t\t * @method dp\n\t\t * @param {Number} x Position of the center of the shape.\n\t\t * @param {Number} y Position of the center of the shape.\n\t\t * @param {Number} radius The outer radius of the shape.\n\t\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t\t * directly to the right of the center.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dp = this.drawPolyStar;\n\n\t\t/**\n\t\t * Shortcut to decodePath.\n\t\t * @method p\n\t\t * @param {String} str The path string to decode.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.p = this.decodePath;\n\n\t\tthis.clear();\n\t}\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t */\n\tstatic getRGB (r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn `rgb(${r},${g},${b})`;\n\t\t} else {\n\t\t\treturn `rgba(${r},${g},${b},${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t */\n\tstatic getHSL (hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t\t} else {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget instructions () {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t */\n\tisEmpty () {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t */\n\tdraw (ctx, data) {\n\t\tthis._updateInstructions();\n\t\tlet instr = this._instructions;\n\t\tconst l = instr.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t}\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t */\n\tdrawAsPath (ctx) {\n\t\tthis._updateInstructions();\n\t\tlet instr, instrs = this._instructions;\n\t\tconst l = instrs.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t}\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t */\n\tmoveTo (x, y) {\n\t\treturn this.append(new MoveTo(x,y), true);\n\t}\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tlineTo (x, y) {\n\t\treturn this.append(new LineTo(x,y));\n\t}\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarcTo (x1, y1, x2, y2, radius) {\n\t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarc (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tquadraticCurveTo (cpx, cpy, x, y) {\n\t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t}\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbezierCurveTo (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t}\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\trect (x, y, w, h) {\n\t\treturn this.append(new Rect(x, y, w, h));\n\t}\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclosePath () {\n\t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t}\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclear () {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginFill (color) {\n\t\treturn this._setFill(color ? new Fill(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientFill (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientFill (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapFill (image, repetition, matrix) {\n\t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendFill () {\n\t\treturn this.beginFill();\n\t}\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeStyle (thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeDash (segments, offset = 0) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginStroke (color) {\n\t\treturn this._setStroke(color ? new Stroke(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientStroke (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientStroke (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapStroke (image, repetition = \"repeat\") {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendStroke () {\n\t\treturn this.beginStroke();\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRect (x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRectComplex (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t}\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\t  s.x = 100;\n\t *\t\t  s.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawCircle (x, y, radius) {\n\t\treturn this.append(new Circle(x, y, radius));\n\t}\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawEllipse (x, y, w, h) {\n\t\treturn this.append(new Ellipse(x, y, w, h));\n\t}\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawPolyStar (x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t}\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tappend (command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdecodePath (str) {\n\t\tlet instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tlet paramCount = [2, 2, 4, 6, 0];\n\t\tlet i = 0;\n\t\tconst l = str.length;\n\t\tlet params = [];\n\t\tlet x = 0, y = 0;\n\t\tlet base64 = Graphics.BASE_64;\n\n\t\twhile (i < l) {\n\t\t\tlet c = str.charAt(i);\n\t\t\tlet n = base64[c];\n\t\t\tlet fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tlet f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(`bad path data (@${i}):c`); }\n\t\t\tconst pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tlet charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (let p = 0; p < pl; p++) {\n\t\t\t\tlet num = base64[str.charAt(i)];\n\t\t\t\tlet sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount === 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this, params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tstore () {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tunstore () {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t */\n\tclone () {\n\t\tlet o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t */\n\t_updateInstructions (commit) {\n\t\tlet instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tconst l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (let i = 0; i < l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t */\n\t_setFill (fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t */\n\t_setStroke (stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t}\n\n}\n\n// Command Objects:\n\n/**\n * @namespace Graphics\n */\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class LineTo\n */\nexport class LineTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class MoveTo\n */\nexport class MoveTo {\n\t/**\n\t * @constructor\n   * @param {Number} x\n   * @param {Number} y\n\t */\n \tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n \t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n \texec (ctx) {\n \t\tctx.moveTo(this.x, this.y);\n \t}\n}\n\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ArcTo\n */\nexport class ArcTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t */\n \tconstructor (x1, y1, x2, y2, radius) {\n\t\t/**\n\t\t * @property x1\n\t\t * @type Number\n\t\t */\n\t \tthis.x1 = x1;\n\t\t/**\n\t\t * @property y1\n\t\t * @type Number\n\t\t */\n\t\tthis.y1 = y1;\n\t\t/**\n\t\t * @property x2\n\t\t * @type Number\n\t\t */\n\t \tthis.x2 = x2;\n\t\t/**\n\t\t * @property y2\n\t\t * @type Number\n\t\t */\n\t\tthis.y2 = y2;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Arc\n */\nexport class Arc {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t */\n \tconstructor (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property startAngle\n\t\t * @type Number\n\t\t */\n\t \tthis.startAngle = startAngle;\n\t\t/**\n\t\t * @property endAngle\n\t\t * @type Number\n\t\t */\n\t\tthis.endAngle = endAngle;\n\t\t/**\n\t\t * @property anticlockwise\n\t\t * @type Number\n\t\t */\n\t \tthis.anticlockwise = !!anticlockwise;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class QuadraticCurveTo\n */\nexport class QuadraticCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cpx, cpy, x, y) {\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t \tthis.cpx = cpx;\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\tthis.cpy = cpy;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BezierCurveTo\n */\nexport class BezierCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t/**\n\t\t * @property cp1x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp1x = cp1x;\n\t\t/**\n\t\t * @property cp1y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp1y = cp1y;\n\t\t/**\n\t\t * @property cp2x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp2x = cp2x;\n\t\t/**\n\t\t * @property cp2y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp2y = cp2y;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Rect\n */\nexport class Rect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.rect(this.x, this.y, this.w, this.h);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ClosePath\n */\nexport class ClosePath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BeginPath\n */\nexport class BeginPath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.beginPath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Fill\n */\nexport class Fill {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t */\n\tconstructor (style, matrix) {\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t\tthis.matrix = matrix;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tlet mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tlinearGradient (colors, ratios, x0, y0, x1, y1) {\n\t\tlet o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, x1, y1, type:\"linear\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tradialGradient (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tlet o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, r0, x1, y1, r1, type: \"radial\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tbitmap (image, repetition = \"\") {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tlet o = this.style = Graphics._ctx.createPattern(image, repetition);\n\t\t\to.props = {image, repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Stroke\n */\nexport class Stroke {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t */\n\tconstructor (style, ignoreScale) {\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tlinearGradient (...args) {\n\t\t// TODO-ES6: Anything but this...\n\t\tFill.prototype.linearGradient.apply(this, args);\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tradialGradient (...args) {\n \t\tFill.prototype.radialGradient.apply(this, args);\n \t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tbitmap (...args) {\n \t\tFill.prototype.bitmap.apply(this, args);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeStyle\n */\nexport class StrokeStyle {\n\t/**\n\t * @constructor\n\t * @param {Number} [width=1]\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t * @type {String}\n\t */\n\tconstructor (width, caps = \"butt\", joints = \"miter\", miterLimit = 10, ignoreScale = false) {\n\t\t/**\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\t\tthis.width = width;\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @property caps\n\t\t * @type String\n\t\t */\n\t\tthis.caps = caps;\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @property joints\n\t\t * @type String\n\t\t */\n\t\tthis.joints = joints;\n\t\t/**\n\t\t * @property miterLimit\n\t\t * @type Number\n\t\t */\n\t\tthis.miterLimit = miterLimit;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineWidth = this.width;\n\t\tctx.lineCap = (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]);\n\t\tctx.lineJoin = (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]);\n\t\tctx.miterLimit = this.miterLimit;\n\t\tctx.ignoreScale = this.ignoreScale;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeDash\n */\nexport class StrokeDash {\n\t/**\n\t * @constructor\n\t * @param {Array} [segments=[]]\n\t * @param {Number} [offset=0]\n\t */\n \tconstructor (segments = StrokeDash.EMPTY_SEGMENTS, offset = 0) {\n\t\t/**\n\t\t * @property segments\n\t\t * @type Array\n\t\t */\n\t \tthis.segments = segments;\n\t\t/**\n\t\t * @property offset\n\t\t * @type Number\n\t\t */\n\t \tthis.offset = offset;\n \t}\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * Used instead of [] to reduce churn.\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t */\n\tstatic get EMPTY_SEGMENTS () { return _EMPTY_SEGMENTS; }\n\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tif (ctx.setLineDash) { // feature detection.\n\t \t\tctx.setLineDash(this.segments);\n\t \t\tctx.lineDashOffset = this.offset;\n\t \t}\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class RoundRect\n */\nexport class RoundRect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t */\n \tconstructor (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n\t\t/**\n\t\t * @property radiusTL\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusTL = radiusTL;\n\t\t/**\n\t\t * @property radiusTR\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusTR = radiusTR;\n\t\t/**\n\t\t * @property radiusBR\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusBR = radiusBR;\n\t\t/**\n\t\t * @property radiusBL\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusBL = radiusBL;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet max = (w<h?w:h)/2;\n\t \tlet mTL=0, mTR=0, mBR=0, mBL=0;\n\t \tlet x = this.x, y = this.y, w = this.w, h = this.h;\n\t \tlet rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t \tif (rTL < 0) { rTL *= (mTL=-1); }\n\t \tif (rTL > max) { rTL = max; }\n\t \tif (rTR < 0) { rTR *= (mTR=-1); }\n\t \tif (rTR > max) { rTR = max; }\n\t \tif (rBR < 0) { rBR *= (mBR=-1); }\n\t \tif (rBR > max) { rBR = max; }\n\t \tif (rBL < 0) { rBL *= (mBL=-1); }\n\t \tif (rBL > max) { rBL = max; }\n\n\t \tctx.moveTo(x+w-rTR, y);\n\t \tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t \tctx.lineTo(x+w, y+h-rBR);\n\t \tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t \tctx.lineTo(x+rBL, y+h);\n\t \tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t \tctx.lineTo(x, y+rTL);\n\t \tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Circle\n */\nexport class Circle {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t */\n \tconstructor (x, y, radius) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Ellipse\n */\nexport class Ellipse {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet w = this.w, h = this.h;\n\n\t \tlet k = 0.5522848;\n\t \tlet ox = (w / 2) * k;\n\t \tlet oy = (h / 2) * k;\n\t \tlet xe = x + w;\n\t \tlet ye = y + h;\n\t \tlet xm = x + w / 2;\n\t \tlet ym = y + h / 2;\n\n\t \tctx.moveTo(x, ym);\n\t \tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t \tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t \tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t \tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class PolyStar\n */\nexport class PolyStar {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} [pointSize=0]\n\t * @param {Number} [angle=0]\n\t */\n \tconstructor (x, y, radius, sides, pointSize = 0, angle = 0) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property sides\n\t\t * @type Number\n\t\t */\n\t \tthis.sides = sides;\n\t\t/**\n\t\t * @property pointSize\n\t\t * @type Number\n\t\t */\n\t \tthis.pointSize = pointSize;\n\t\t/**\n\t\t * @property angle\n\t\t * @type Number\n\t\t */\n\t \tthis.angle = angle;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet radius = this.radius;\n\t \tlet angle = this.angle/180*Math.PI;\n\t \tlet sides = this.sides;\n\t \tlet ps = 1-this.pointSize;\n\t \tlet a = Math.PI/sides;\n\n\t \tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \tfor (let i = 0; i < sides; i++) {\n\t \t\tangle += a;\n\t \t\tif (ps != 1) {\n\t \t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t \t\t}\n\t \t\tangle += a;\n\t \t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \t}\n\t \tctx.closePath();\n \t}\n}\n\n// static properties:\n/**\n * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n * unnecessary instantiation.\n * @property beginCmd\n * @type {Graphics.BeginPath}\n * @static\n * @readonly\n */\n/**\n * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n * @property BASE_64\n * @static\n * @final\n * @readonly\n * @type {Object}\n */\n/**\n * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"butt\", 1 to \"round\", and 2 to \"square\".\n * For example, to set the line caps to \"square\":\n *\n *      myGraphics.ss(16, 2);\n *\n * @property STROKE_CAPS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n * For example, to set the line joints to \"bevel\":\n *\n *      myGraphics.ss(16, 0, 2);\n *\n * @property STROKE_JOINTS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * @property _ctx\n * @static\n * @protected\n * @type {CanvasRenderingContext2D}\n */\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\tGraphics.beginCmd = new BeginPath();\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\tGraphics.EMPTY_SEGMENTS = [];\n}\n","/*\n* @license MovieClip\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Tween from \"@createjs/tweenjs/src/Tween\";\nimport Timeline from \"@createjs/tweenjs/src/Timeline\";\n\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * <h4>Example</h4>\n * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvas\");\n *      createjs.Ticker.addEventListener(\"tick\", stage);\n *\n *      var mc = new createjs.MovieClip(null, 0, true, {start:20});\n *      stage.addChild(mc);\n *\n *      var child1 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#999999\")\n *              .drawCircle(30,30,30));\n *      var child2 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n *              .drawCircle(30,30,30));\n *\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child1)\n *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child2)\n *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n *\n *      mc.gotoAndPlay(\"start\");\n *\n * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n *\n * @class MovieClip\n * @extends Container\n * @module EaselJS\n */\nexport default class MovieClip extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n   * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n   * specified.<UL>\n   *    <LI> `mode`</LI>\n   *    <LI> `startPosition`</LI>\n   *    <LI> `frameBounds`</LI>\n   * </UL>\n   *\n   * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n   * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t */\n\tconstructor ({ mode = MovieClip.INDEPENDENT, startPosition = 0, loop = -1, paused = false, frameBounds = null, labels = null }) {\n\t\tsuper();\n\t\t!MovieClip.inited && MovieClip.init();\n\n// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.mode = mode;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition;\n\n\t\t/**\n    * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n    * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n\t\tthis.loop = loop === true ? -1 : (loop || 0);\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * <h4>Example</h4>\n     *\n     *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     *      var mc = new createjs.MovieClip();\n     *      mc.timeline.addTween(tween);\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     *      var tween = createjs.Tween.get(target).to({_off:false})\n     *          .wait(1).to({_off:true})\n     *          .wait(1).to({_off:false});\n     *\n     * @property timeline\n     * @type Timeline\n\t\t * @default Timeline\n\t\t */\n\t\tthis.timeline = new Timeline({ useTicks: true, paused: true, mode, startPosition, loop, frameBounds, labels });\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = paused;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.framerate = null;\n\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t}\n\n// static methods:\n\tstatic init () {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t}\n\n// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n// accessor properties:\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * Shortcut to TweenJS: Timeline.getLabels();\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget labels () {\n\t\treturn this.timeline.labels;\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\n\t * for more information.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t */\n\tget currentLabel () {\n\t\treturn this.timeline.getCurrentLabel();\n\t}\n\n\t /**\n \t * Returns the duration of this MovieClip in seconds or ticks.\n \t * @property duration\n \t * @type {Number}\n \t * @readonly\n \t */\n \tget duration () {\n\t\treturn this.timeline.duration;\n\t}\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget totalFrames () {\n\t\treturn this.duration;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.drawCache(ctx, ignoreCache)) { return true; }\n    this._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet INDEPENDENT = MovieClip.INDEPENDENT;\n\t\tif (this.mode !== INDEPENDENT) { return; } // update happens in draw for synched clips\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tlet o = this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) {\n\t\t\tif (o.mode === INDEPENDENT) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\n\t\tif (this.paused) { return; }\n\t\t// calculate how many frames to advance:\n\t\tlet t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n\t\tlet frames = t | 0;\n\t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n\t\twhile (frames--) {\n\t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n\t\t}\n\t}\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow \"MovieClip cannot be cloned.\";\n\t}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tthis.advance(evtObj && evtObj.delta);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t}\n\n\t/**\n\t * @method _reset\n\t * @private\n\t */\n\t_reset () {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * @method _updateTimeline\n\t * @param {Number} rawPosition\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t */\n\t_updateTimeline (rawPosition, jump) {\n\t\tlet synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n\t\tif (rawPosition < 1) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t}\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n\t_renderFirstFrame () {\n\t\tconst tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t}\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t */\n\t_resolveState () {\n\t\tlet tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\n\t\tfor (let n in this._managed) { this._managed[n] = 1; }\n\n\t\tlet tweens = tl.tweens;\n\t\tfor (let tween of tweens) {\n\t\t\tlet target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\t\t\tlet offset = tween._stepPosition;\n\n\t\t\tif (target instanceof DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tlet kids = this.children;\n\t\tfor (let i=kids.length-1; i>=0; i--) {\n\t\t\tlet id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t */\n\t_setState (state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (let i = state.length - 1; i >= 0; i--) {\n\t\t\tlet o = state[i];\n\t\t\tlet target = o.t;\n\t\t\tlet props = o.p;\n\t\t\tfor (let n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t */\n\t_addManagedChild (child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child, 0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = this.getBounds();\n\t\tif (!bounds && this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn super._getBounds(matrix, ignoreTransform);\n\t}\n\n}\n\n// static constants:\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @property INDEPENDENT\n * @static\n * @type String\n * @default \"independent\"\n * @readonly\n */\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @property SINGLE_FRAME\n * @static\n * @type String\n * @default \"single\"\n * @readonly\n */\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @property SYNCHED\n * @static\n * @type String\n * @default \"synched\"\n * @readonly\n */\n{\n\tMovieClip.INDEPENDENT = \"independent\";\n\tMovieClip.SINGLE_FRAME = \"single\";\n\tMovieClip.SYNCHED = \"synched\";\n\tMovieClip.inited = false;\n}\n\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n * property from tweening.\n * @class MovieClipPlugin\n * @todo update to new plugin model\n * @static\n * @private\n */\nclass MovieClipPlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n\t}\n\n\t/**\n\t * @method install\n\t * @private\n\t */\n\tstatic install () {\n\t\tTween._installPlugin(MovieClipPlugin);\n\t}\n\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t */\n\tstatic init (tween, prop, value) {\n\t\treturn value;\n\t}\n\n\t/**\n\t * @method tween\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio === 1 ? endValues[prop] : startValues[prop]);\n\t}\n\n}\n\n/**\n * @property priority\n * @static\n */\n{\n\tMovieClipPlugin.priority = 100;\n}\n","/*\n* @license Shadow\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n * via its <code>shadow</code> property.\n *\n * <h4>Example</h4>\n *\n *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n *\n * @class Shadow\n * @module EaselJS\n */\nexport default class Shadow {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t */\n\tconstructor (color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n// public properties:\n\t\t/**\n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default black\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX;\n\n\t\t/**\n\t\t * The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY;\n\n\t\t/**\n\t\t * The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t */\n\tclone () {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t}\n\n}\n\n// static public properties:\n/**\n * An identity shadow object (all properties are set to 0).\n * @property identity\n * @type Shadow\n * @static\n * @final\n * @readonly\n */\n{\n\tShadow.identity = new Shadow(\"transparent\");\n}\n","/*\n* @license Shape\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Graphics from \"./Graphics\";\n\n/**\n * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not\n * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n * rendering cost.\n *\n * <h4>Example</h4>\n *\n *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *      var shape = new createjs.Shape(graphics);\n *\n *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n *      var shape = new createjs.Shape();\n *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @class Shape\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Shape extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Graphics} [graphics=Graphics] Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t */\n\tconstructor (graphics = new Graphics()) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t */\n\t\tthis.graphics = graphics;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t */\n\tclone (recursive = false) {\n\t\tlet g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t}\n\n}\n","/*\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n *\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @class SpriteSheet\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheet extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n   * @param {Object} data An object describing the SpriteSheet data.\n\t */\n\tconstructor (data) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t */\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._margin = 0;\n\n\t\tthis._parseData(data);\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget animations () {\n\t\treturn this._animations.slice();\n\t}\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tgetNumFrames (animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tlet data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t */\n\tgetAnimation (name) {\n\t\treturn this._data[name];\n\t}\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t */\n\tgetFrame (frameIndex) {\n\t\tlet frame;\n\t\tif (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle=Rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetFrameBounds (frameIndex, rectangle = new Rectangle()) {\n\t\tlet frame = this.getFrame(frameIndex);\n\t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO-ES6: Add throw docs\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t */\n\t_parseData (data) {\n\t\tif (data == null) { return; }\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images) {\n\t\t\tfor (let img of data.images) {\n\t\t\t\tlet a = this._images = [];\n\t\t\t\tlet src;\n\t\t\t\tif (typeof img === \"string\") {\n\t\t\t\t\tsrc = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\timg.onload = () => this._handleImageLoad(src);\n\t\t\t\t\timg.onerror = () => this._handleImageError(src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames != null) {\n\t\t\tif (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\tfor (let arr of data.frames) {\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet o = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount === 0) { this._calculateFrames(); }\n\t\t\t}\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif (data.animations != null) {\n\t\t\tthis._data = {};\n\t\t\tlet o = data.animations;\n\t\t\tfor (let name in o) {\n\t\t\t\tlet anim = { name };\n\t\t\t\tlet obj = o[name];\n\t\t\t\tlet a;\n\t\t\t\tif (typeof obj === \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length === 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (let i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tlet frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames === \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next === name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t */\n\t _handleImageLoad (src) {\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\t_handleImageError (src) {\n\t\tlet errorEvent = new Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t */\n\t_calculateFrames () {\n\t\tif (this._frames || this._frameWidth === 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tlet maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tlet frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tlet spacing = this._spacing, margin = this._margin;\n\n\t\timgLoop:\n\t\tfor (let i=0, imgs=this._images, l=imgs.length; i<l; i++) {\n\t\t\tlet img = imgs[i],\n\t\t\t\timgW = (img.width||img.naturalWidth),\n\t\t\t\timgH = (img.height||img.naturalHeight);\n\n\t\t\tlet y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tlet x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\timage: img,\n\t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n * when doing on-demand rendering.\n * @event getframe\n * @param {Number} index The frame index.\n * @param {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n * event once all images are finished processing, even if an error is encountered.\n * @event error\n * @param {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n","/*\n* @license Text\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\nconst _V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\nimport DisplayObject from \"./DisplayObject\";\n\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * <h4>Example</h4>\n *\n *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n *      text.x = 100;\n *      text.textBaseline = \"alphabetic\";\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n * @class Text\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Text extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t */\n\tconstructor (text, font, color) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t */\n\t\tthis.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t */\n\t\tthis.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t */\n\t\tthis.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t */\n\t\tthis.lineWidth = null;\n\t}\n\n// static constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get H_OFFSETS () { return _H_OFFSETS; }\n\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get V_OFFSETS () { return _V_OFFSETS; }\n\n// public methods:\n \t/**\n \t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n \t * This does not account for whether it would be visible within the boundaries of the stage.\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method isVisible\n \t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n \t */\n \tisVisible () {\n \t\tlet hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n \t}\n\n \t/**\n \t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n \t * Returns true if the draw was handled (useful for overriding functionality).\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method draw\n \t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n \t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n \t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n \t * into itself).\n \t */\n \tdraw (ctx, ignoreCache) {\n \t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n \t\tlet col = this.color || \"#000\";\n \t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n \t\telse { ctx.fillStyle = col; }\n\n \t\tthis._drawText(this._prepContext(ctx));\n \t\treturn true;\n \t}\n\n \t/**\n \t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n \t * @method getMeasuredWidth\n \t * @return {Number} The measured, untransformed width of the text.\n \t */\n \tgetMeasuredWidth () {\n \t\treturn this._getMeasuredWidth(this.text);\n \t}\n\n \t/**\n \t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n \t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n \t * @method getMeasuredLineHeight\n \t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n \t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n \t */\n \tgetMeasuredLineHeight () {\n \t\treturn this._getMeasuredWidth(\"M\")*1.2;\n \t}\n\n \t/**\n \t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n \t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n \t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n \t * @method getMeasuredHeight\n \t * @return {Number} The approximate height of the untransformed multi-line text.\n \t */\n \tgetMeasuredHeight () {\n \t\treturn this._drawText(null, {}).height;\n \t}\n\n \t/**\n \t * Docced in superclass.\n \t */\n \tgetBounds () {\n \t\tlet rect = super.getBounds();\n \t\tif (rect) { return rect; }\n \t\tif (this.text == null || this.text === \"\") { return null; }\n \t\tlet o = this._drawText(null, {});\n \t\tlet w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n \t\tlet x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n \t\tlet y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._rectangle.setValues(x, y, w, o.height);\n \t}\n\n \t/**\n \t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n \t * of the drawn text. The lines property contains an array of strings, one for\n \t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n \t * whitespace removed.\n \t * @method getMetrics\n \t * @return {Object} An object with width, height, and lines properties.\n \t */\n \tgetMetrics () {\n \t\tlet o = {lines:[]};\n \t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n \t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._drawText(null, o, o.lines);\n \t}\n\n \t/**\n \t * Returns a clone of the Text instance.\n \t * @method clone\n \t * @return {Text} a clone of the Text instance.\n \t */\n \tclone () {\n \t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n \t}\n\n \t/**\n \t * Returns a string representation of this object.\n \t * @method toString\n \t * @return {String} a string representation of the instance.\n \t */\n \ttoString () {\n \t\treturn `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n \t}\n\n// private methods:\n \t/**\n \t * @method _cloneProps\n \t * @param {Text} o\n \t * @protected\n \t * @return {Text} o\n \t */\n \t_cloneProps (o) {\n \t\tsuper._cloneProps(o);\n \t\to.textAlign = this.textAlign;\n \t\to.textBaseline = this.textBaseline;\n \t\to.maxWidth = this.maxWidth;\n \t\to.outline = this.outline;\n \t\to.lineHeight = this.lineHeight;\n \t\to.lineWidth = this.lineWidth;\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _getWorkingContext\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @return {CanvasRenderingContext2D}\n \t * @protected\n \t */\n \t_prepContext (ctx) {\n \t\tctx.font = this.font||\"10px sans-serif\";\n \t\tctx.textAlign = this.textAlign||\"left\";\n \t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t */\n \t_drawText (ctx, o, lines) {\n \t\tconst paint = !!ctx;\n \t\tif (!paint) {\n \t\t\tctx = Text._workingContext;\n \t\t\tctx.save();\n \t\t\tthis._prepContext(ctx);\n \t\t}\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\n \t\tlet maxW = 0, count = 0;\n \t\tlet hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n \t\tfor (let str of hardLines) {\n \t\t\tlet w = null;\n\n \t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n \t\t\t\t// text wrapping:\n \t\t\t\tlet words = str.split(/(\\s)/);\n \t\t\t\tstr = words[0];\n \t\t\t\tw = ctx.measureText(str).width;\n\n\t\t\t\tconst l = words.length;\n \t\t\t\tfor (let i=1; i<l; i+=2) {\n \t\t\t\t\t// Line needs to wrap:\n \t\t\t\t\tlet wordW = ctx.measureText(words[i] + words[i+1]).width;\n \t\t\t\t\tif (w + wordW > this.lineWidth) {\n \t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\t\t\t\tif (lines) { lines.push(str); }\n \t\t\t\t\t\tif (w > maxW) { maxW = w; }\n \t\t\t\t\t\tstr = words[i+1];\n \t\t\t\t\t\tw = ctx.measureText(str).width;\n \t\t\t\t\t\tcount++;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tstr += words[i] + words[i+1];\n \t\t\t\t\t\tw += wordW;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n\n \t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\tif (lines) { lines.push(str); }\n \t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n \t\t\tif (w > maxW) { maxW = w; }\n \t\t\tcount++;\n \t\t}\n\n \t\tif (o) {\n \t\t\to.width = maxW;\n \t\t\to.height = count*lineHeight;\n \t\t}\n \t\tif (!paint) { ctx.restore(); }\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _drawTextLine\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @param {String} text\n \t * @param {Number} y\n \t * @protected\n \t */\n \t_drawTextLine (ctx, text, y) {\n \t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n \t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n \t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n \t}\n\n \t/**\n \t * @method _getMeasuredWidth\n \t * @param {String} text\n \t * @protected\n \t */\n \t_getMeasuredWidth (text) {\n \t\tlet ctx = Text._workingContext;\n \t\tctx.save();\n \t\tlet w = this._prepContext(ctx).measureText(text).width;\n \t\tctx.restore();\n \t\treturn w;\n \t}\n\n}\n\n{\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t * @static\n\t */\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\tif (canvas.getContext) {\n\t\tText._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n * better performance.\n *\n * <h4>Example</h4>\n * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n *\n *       var box = new createjs.Shape();\n *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n *       box.graphics.drawRect(0, 0, 100, 100);\n *       box.cache(0, 0, 100, 100);\n *\n *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *       bmp.filters = [\n *           new createjs.AlphaMapFilter(box.cacheCanvas)\n *       ];\n *       bmp.cache(0, 0, 100, 100);\n *       stage.addChild(bmp);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMapFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMapFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t */\n\tconstructor (alphaMap) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.alphaMap = alphaMap;\n\n// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis._alphaMap = null;\n\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t */\n\t\tthis._mapData = null;\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * TODO: Docs\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tclone () {\n\t\tlet o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\t_applyFilter (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tlet data = imageData.data;\n\t\tlet map = this._mapData;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t */\n\t_prepAlphaMap () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap === this._alphaMap && this._mapData) { return true; }\n\t\tthis._mapData = null;\n\n\t\tlet map = this._alphaMap = this.alphaMap;\n\t\tlet canvas = map;\n\t\tlet ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n}\n","/*\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * <h4>Example</h4>\n * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n *\n *      var box = new createjs.Shape();\n *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n *      box.graphics.drawRect(0, 0, 100, 100);\n *      box.cache(0, 0, 100, 100);\n *\n *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *      bmp.filters = [\n *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n *      ];\n *      bmp.cache(0, 0, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMaskFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMaskFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t */\n\tconstructor (mask) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.mask = mask;\n\n\t\t/** docced in super class **/\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t}\n\n\t/**\n\t * Docced in superclass\n\t */\n\tclone () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t}\n\n\t/**\n\t * TODO: Doc\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n}\n","/*\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @module EaselJS\n */\n\nconst _MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\nconst _SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * <h4>Example</h4>\n * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n * method to account for the spread that the blur causes.\n *\n *      let shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      let blurFilter = new createjs.BlurFilter(5, 5, 1);\n *      shape.filters = [blurFilter];\n *      let bounds = blurFilter.getBounds();\n *\n *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class BlurFilter\n * @extends Filter\n */\nexport default class BlurFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t */\n\tconstructor (blurX = 0, blurY = 0, quality = 1) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurX = blurX;\n\t\tthis._blurXTable = [];\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurY = blurY;\n\t\tthis._blurYTable = [];\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t */\n\t\tthis._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n\t\tthis._lastQuality = null;\n\t\tthis.quality = this._quality | 0;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n\t\tthis.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t}\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get MUL_TABLE () { return _MUL_TABLE; }\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get SHG_TABLE () { return _SHG_TABLE; }\n\n// accessor properties:\n// TODO: Docs for these.\n\tget blurX () {\n\t\treturn this._blurX;\n\t}\n\n\tset blurX (blurX) {\n\t\tif (isNaN(blurX) || blurX < 0) { blurX = 0; }\n\t\tthis._blurX = blurX;\n\t}\n\n\tget blurY () {\n\t\treturn this._blurY;\n\t}\n\n\tset blurY (blurY) {\n\t\tif (isNaN(blurY) || blurY < 0){ blurY = 0; }\n\t\tthis._blurY = blurY;\n\t}\n\n\tget quality () {\n\t\treturn this._quality;\n\t}\n\n\tset quality (quality) {\n\t\tif (isNaN(quality) || quality < 0) { quality = 0; }\n\t\tthis._quality = quality | 0;\n\t}\n\n\tget _buildShader () {\n\t\tconst xChange = this._lastBlurX !== this._blurX;\n\t\tconst yChange = this._lastBlurY !== this._blurY;\n\t\tconst qChange = this._lastQuality !== this._quality;\n\t\tif (xChange || yChange || qChange) {\n\t\t\t\tif (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\t\tif (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\t\tthis._updateShader();\n\t\t\t\tthis._lastBlurX = this._blurX;\n\t\t\t\tthis._lastBlurY = this._blurY;\n\t\t\t\tthis._lastQuality = this._quality;\n\t\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t}\n\n\tset _builtShader (value) {\n\t\tthis._compiledShader;\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tgetBounds (rect) {\n\t\tlet x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tlet q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass\n\t */\n\t_updateShader () {\n\t\tlet result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t}\n\t/**\n\t * Docced in superclass\n\t */\n\t_getTable (spread) {\n\t\tconst EDGE = 4.2;\n\t\tif (spread <= 1) { return [1]; }\n\n\t\tlet result = [];\n\t\tlet count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tlet adjust = (count/2)|0;\n\t\tfor (let i = -adjust; i<=adjust; i++) {\n\t\t\tlet x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tlet factor = result.reduce((a, b) => a + b, 0);\n\t\treturn result.map(currentValue => currentValue / factor);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tlet radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX === 0 && radiusY === 0) return false;\n\n\t\tlet iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tlet px = imageData.data;\n\t\tlet x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tlet divx = (radiusX + radiusX + 1) | 0;\n\t\tlet divy = (radiusY + radiusY + 1) | 0;\n\t\tlet w = imageData.width | 0;\n\t\tlet h = imageData.height | 0;\n\n\t\tlet w1 = (w - 1) | 0;\n\t\tlet h1 = (h - 1) | 0;\n\t\tlet rxp1 = (radiusX + 1) | 0;\n\t\tlet ryp1 = (radiusY + 1) | 0;\n\n\t\tlet ssx = {r:0,b:0,g:0,a:0};\n\t\tlet sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tlet ssy = {r:0,b:0,g:0,a:0};\n\t\tlet sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tlet si = null;\n\n\n\t\tlet mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tlet stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tlet mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tlet sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tlet ms = mtx;\n\t\t\tlet ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a color transform to DisplayObjects.\n *\n * <h4>Example</h4>\n * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      shape.filters = [\n *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n *      ];\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorFilter\n * @extends Filter\n */\nexport default class ColorFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t */\n\tconstructor (redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.redMultiplier = redMultiplier;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.greenMultiplier = greenMultiplier;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.blueMultiplier = blueMultiplier;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.redOffset = redOffset;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.greenOffset = greenOffset;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.blueOffset = blueOffset;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaOffset = alphaOffset;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorMatrix\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nconst _DELTA_INDEX = [\n \t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n \t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n \t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n \t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n \t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n \t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n \t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n \t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n \t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n \t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n \t10.0\n];\nconst _IDENTITY_MATRIX = [\n \t1,0,0,0,0,\n \t0,1,0,0,0,\n \t0,0,1,0,0,\n \t0,0,0,1,0,\n \t0,0,0,0,1\n];\nconst _LENGTH = 25;\n\n/**\n * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n * Most methods return the instance to facilitate chained calls.\n *\n * <h4>Example</h4>\n *\n *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n * for an example of how to use ColorMatrix to change a DisplayObject's color.\n * @class ColorMatrix\n */\nexport default class ColorMatrix {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t */\n\tconstructor (brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get DELTA_INDEX () { return _DELTA_INDEX; }\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get IDENTITY_MATRIX () { return _IDENTITY_MATRIX; }\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t */\n\tstatic get LENGTH () { return _LENGTH; }\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetColor (brightness, contrast, saturation, hue) {\n\t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\treset () {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t}\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustColor (brightness, contrast, saturation, hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t}\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustBrightness (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustContrast (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x === 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustSaturation (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tlet lumR = 0.3086;\n\t\tlet lumG = 0.6094;\n\t\tlet lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustHue (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 180)/180*Math.PI;\n\t\tlet cosVal = Math.cos(value);\n\t\tlet sinVal = Math.sin(value);\n\t\tlet lumR = 0.213;\n\t\tlet lumG = 0.715;\n\t\tlet lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tconcat (matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t */\n\tclone () {\n\t\treturn (new ColorMatrix()).copy(this);\n\t}\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t */\n\ttoArray () {\n\t\tlet arr = [];\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tcopy (matrix) {\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_multiplyMatrix (matrix) {\n\t\tlet col = [];\n\n\t\tfor (let i=0;i<5;i++) {\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tlet val=0;\n\t\t\t\tfor (let k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t */\n\t_cleanValue (value, limit) {\n\t\treturn Math.min(limit, Math.max(-limit, value));\n\t}\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_fixMatrix (matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t}\n\n}\n","/*\n* @license ColorMatrixFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n *      shape.filters = [\n *          new createjs.ColorMatrixFilter(matrix)\n *      ];\n *\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorMatrixFilter\n * @extends Filter\n */\nexport default class ColorMatrixFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t */\n\tconstructor (matrix) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t */\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tlet mat = this.matrix;\n\t\tlet colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tlet r,g,b,a;\n\t\tlet mtx = this.matrix;\n\t\tlet m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tlet m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tlet m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tlet m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n *\n *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n *      myInstance.addEventListener(\"click\", handleClick);\n *      function handleClick(event) {\n *          // Click Happened.\n *      }\n *\n * @class ButtonHelper\n * @module EaselJS\n */\nexport default class ButtonHelper {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t */\n\tconstructor (target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.overLabel = overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.outLabel = outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.downLabel = downLabel == null;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t */\n\t\tthis.play = play;\n\n\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isPressed = false;\n\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isOver = false;\n\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._enabled = false;\n\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t */\n\tget enabled () {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled (enabled) {\n\t\tif (enabled === this._enabled) { return; }\n\t\tlet o = this.target;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t */\n\thandleEvent (evt) {\n\t\tlet label, t = this.target, type = evt.type;\n\t\tif (type === \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type === \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type === \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t}\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t */\n\t_reset () {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tlet p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t}\n\n}\n","/*\n* @license Touch\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n * @module EaselJS\n */\nexport default class Touch {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t */\n\tstatic isSupported () {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t}\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t */\n\tstatic enable (stage, singleTouch = false, allowDefault = false) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t */\n\tstatic disable (stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\n\t\tdelete stage.__touch;\n\t}\n\n\n// private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IOS_handleEvent(stage, e);\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_disable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tlet f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t */\n\tstatic _IOS_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tlet touches = e.changedTouches;\n\t\tlet type = e.type;\n\t\tconst l = touches.length;\n\t\tfor (let touch of touches) {\n\t\t\tlet id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type === \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IE_handleEvent(stage,e);\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t}\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_disable (stage) {\n\t\tlet f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t */\n\tstatic _IE_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tlet type = e.type;\n\t\tlet id = e.pointerId;\n\t\tlet ids = stage.__touch.activeIDs;\n\n\t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\"\n\t\t\t\t\t|| type === \"pointerup\" || type === \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleStart (stage, id, e, x, y) {\n\t\tlet props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tlet ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleMove (stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t */\n\tstatic _handleEnd (stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tlet props = stage.__touch;\n\t\tlet ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t}\n\n}\n","/*\n* @license SpriteSheetBuilder\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\nconst _ERR_RUNNING = \"a build is already running\";\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Rectangle from \"../geom/Rectangle\";\nimport SpriteSheet from \"../display/SpriteSheet\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n * @class SpriteSheetBuilder\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheetBuilder extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t */\n\tconstructor (framerate = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t */\n\t\tthis.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t */\n\t\tthis.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t*/\n\t\tthis.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t */\n\t\tthis.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate;\n\n// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = [];\n\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = {};\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._timerID = null;\n\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._scale = 1;\n\t}\n\n// constants:\n\tstatic get ERR_DIMENSIONS () { return _ERR_DIMENSIONS; }\n\tstatic get ERR_RUNNING () { return _ERR_RUNNING; }\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t */\n\taddFrame (source, sourceRect, scale = 1, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect) { return null; }\n\t\treturn this._frames.push({source, sourceRect:rect, scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t}\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t */\n\taddAnimation (name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames, next, speed};\n\t}\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t */\n\taddMovieClip (source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rects = source.frameBounds;\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect && !rects) { return; }\n\n\t\tlet baseFrameIndex = this._frames.length;\n\t\tconst duration = source.timeline.duration;\n\t\tfor (let i=0; i<duration; i++) {\n\t\t\tlet r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i, f:setupFunction, d:setupData});\n\t\t}\n\t\tconst labels = source.timeline._labels;\n\t\tlet lbls = [];\n\t\tfor (let n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort((a, b) => a.index-b.index);\n\t\t\tfor (let i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tlet label = lbls[i].label;\n\t\t\t\tlet start = baseFrameIndex+lbls[i].index;\n\t\t\t\tlet end = baseFrameIndex+((i === l-1) ? duration : lbls[i+1].index);\n\t\t\t\tlet frames = [];\n\t\t\t\tfor (let i=start; i<end; i++) { frames.push(i); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t */\n\tbuild () {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t}\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t */\n\tbuildAsync (timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tthis._timerID = setTimeout(() => this._run(), 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t}\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t */\n\tstopAsync () {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t}\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow \"SpriteSheetBuilder cannot be cloned.\";\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t */\n\t_startBuild () {\n\t\tlet pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tlet dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tlet frames = this._frames.slice();\n\t\tframes.sort((a, b) => (a.height<=b.height) ? -1 : 1);\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tlet y=0, x=0;\n\t\tlet img = 0;\n\t\twhile (frames.length) {\n\t\t\tlet o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tlet canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_setupMovieClipFrame (source, data) {\n\t\tlet ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t}\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_getSize (size, max) {\n\t\tlet pow = 4;\n\t\twhile (Math.pow(2, ++pow) < size) {}\n\t\treturn Math.min(max, Math.pow(2, pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_fillRow (frames, y, img, dataFrames, pad) {\n\t\tlet w = this.maxWidth;\n\t\tlet maxH = this.maxHeight;\n\t\ty += pad;\n\t\tlet h = maxH-y;\n\t\tlet x = pad;\n\t\tlet height = 0;\n\t\tfor (let i=frames.length-1; i>=0; i--) {\n\t\t\tlet frame = frames[i];\n\t\t\tlet sc = this._scale*frame.scale;\n\t\t\tlet rect = frame.sourceRect;\n\t\t\tlet source = frame.source;\n\t\t\tlet rx = Math.floor(sc*rect.x-pad);\n\t\t\tlet ry = Math.floor(sc*rect.y-pad);\n\t\t\tlet rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tlet rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t}\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t */\n\t_endBuild () {\n\t\tthis.spriteSheet = new SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t}\n\n\t/**\n\t * @method _run\n\t * @protected\n\t */\n\t_run () {\n\t\tlet ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tlet t = (new Date()).getTime()+ts;\n\t\tlet complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tthis._timerID = setTimeout(() => this._run(), 50-ts);\n\t\t}\n\t\tlet p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tlet evt = new Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t}\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t */\n\t_drawNext () {\n\t\tlet frame = this._frames[this._index];\n\t\tlet sc = frame.scale*this._scale;\n\t\tlet rect = frame.rect;\n\t\tlet sourceRect = frame.sourceRect;\n\t\tlet canvas = this._data.images[frame.img];\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when a build completes.\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event progress\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n","/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n * @class SpriteSheetUtils\n * @static\n * @module EaselJS\n */\nexport default class SpriteSheetUtils {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t * @method extractFrame\n\t * @static\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t*/\n\tstatic extractFrame (spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tlet data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tlet r = data.rect;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tlet img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t}\n\n\t/**\n\t * Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\n\t * JPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\n\t * images (those with detail that lend itself to JPEG compression) this can provide significant file size savings\n\t * versus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).\n\t * @method mergeAlpha\n\t * @static\n\t * @param {HTMLImageElement} rbgImage The image (or canvas) containing the RGB channels to use.\n\t * @param {HTMLImageElement} alphaImage The image (or canvas) containing the alpha channel to use.\n\t * @param {HTMLCanvasElement} [canvas] If specified, this canvas will be used and returned. If not, a new canvas will be created.\n\t * @return {HTMLCanvasElement} A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.\n\t * @deprecated Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.\n\t*/\n\tstatic mergeAlpha (rgbImage, alphaImage, canvas) {\n\t\tif (!canvas) { canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\n\t\tcanvas.width = Math.max(alphaImage.width, rgbImage.width);\n\t\tcanvas.height = Math.max(alphaImage.height, rgbImage.height);\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tctx.save();\n\t\tctx.drawImage(rgbImage,0,0);\n\t\tctx.globalCompositeOperation = \"destination-in\";\n\t\tctx.drawImage(alphaImage,0,0);\n\t\tctx.restore();\n\t\treturn canvas;\n\t}\n\n\n// private static methods:\n\tstatic _flip (spriteSheet, count, h, v) {\n\t\tlet imgs = spriteSheet._images;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tlet ctx = SpriteSheetUtils._workingContext;\n\t\tconst il = imgs.length/count;\n\t\tfor (let i=0; i<il; i++) {\n\t\t\tlet src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tlet img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tlet frames = spriteSheet._frames;\n\t\tconst fl = frames.length/count;\n\t\tfor (let i=0; i<fl; i++) {\n\t\t\tlet src = frames[i];\n\t\t\tlet rect = src.rect.clone();\n\t\t\tlet img = imgs[src.image.__tmp+il*count];\n\n\t\t\tlet frame = {image:img,rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tlet sfx = `_${h?\"h\":\"\"}${v?\"v\":\"\"}`;\n\t\tlet names = spriteSheet._animations;\n\t\tlet data = spriteSheet._data;\n\t\tconst al = names.length/count;\n\t\tfor (let i=0; i<al; i++) {\n\t\t\tlet name = names[i];\n\t\t\tlet src = data[name];\n\t\t\tlet anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tlet frames = src.frames;\n\t\t\tfor (let i=0,l=frames.length;i<l;i++) {\n\t\t\t\tanim.frames.push(frames[i]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t}\n\n}\n\n// private static properties:\n/**\n * @property _workingCanvas\n * @static\n * @type HTMLCanvasElement | Object\n * @protected\n*/\n/**\n * @property _workingContext\n * @static\n * @type CanvasRenderingContext2D\n * @protected\n*/\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tSpriteSheetUtils._workingCanvas = canvas;\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet _alternateOutput = null;\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\n\n /**\n  * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n  * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n  * utilities.\n  * @class WebGLInspector\n  * @extends EventDispatcher\n  * @module EaselJS\n  */\nexport default class WebGLInspector extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {StageGL} stage The default stage to use when none is supplied.\n\t */\n\tconstructor (stage) {\n\t\tsuper();\n\n// private properties:\n\t\t/**\n\t\t * The internal reference to the default stage this Inspector is for.\n\t\t * @property _stage\n\t\t * @protected\n\t\t * @type {StageGL}\n\t\t */\n\t\tthis._stage = stage;\n\t}\n\n// static properties:\n\t/**\n\t * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n\t * Expects object with a \"log\" function that takes any number of params.\n\t * @property alternateOutput\n\t * @type {Console}\n\t * @default null\n\t * @static\n\t * @protected\n\t */\n\tstatic get alternateOutput () { return _alternateOutput; }\n\tstatic set alternateOutput (alternateOutput) { _alternateOutput = alternateOutput; }\n\n// static methods:\n\t/**\n\t * Utility function for use with {{#crossLink \"logDepth\"))((/crossLink}}. Logs an item's position and registration.\n\t * Useful to see if something is being forced off screen or has an integer position.\n\t * @method dispProps\n\t * @param {DisplayObject} item The item we're currently logging about.\n\t * @param {String} [prepend=\"\"] The string to show before the item, usually formatting for a tree view.\n\t * @static\n\t */\n\tstatic dispProps (item, prepend = \"\") {\n\t\tlet p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t\tlet r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\t\tWebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t}\n\n// private static methods:\n\t/**\n\t * Log with alternateOutput if available, defaulting to the console.\n\t * @method _log\n\t * @param {...*} info The info to log.\n\t * @static\n\t */\n\tstatic _log (...info) {\n\t\tif (WebGLInspector.alternateOutput) {\n\t\t\tWebGLInspector.alternateOutput.log(...info);\n\t\t} else {\n\t\t\tconsole.log(...info);\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Perform all of the logging reports at once.\n\t * @method log\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlog (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\t\tWebGLInspector._log(`Batches Per Draw: ${(stage._batchID/stage._drawID).toFixed(4)}`);\n\t\tthis.logContextInfo(stage._webGLContext);\n\t\tthis.logDepth(stage.children, \"\");\n\t\tthis.logTextureFill(stage);\n\t}\n\n\t/**\n\t * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring\n\t * rendering.\n\t * @method toggleGPUDraw\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t */\n\ttoggleGPUDraw (stage, enabled) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tif (enabled === undefined) {\n\t\t\tenabled = !!stage._drawBuffers_;\n\t\t}\n\n\t\tif (enabled && stage._drawBuffers_) {\n\t\t\tstage._drawBuffers = stage._drawBuffers_;\n\t\t\tstage._drawBuffers_ = undefined;\n\t\t} else {\n\t\t\tstage._drawBuffers_ = stage._drawBuffers;\n\t\t\tstage._drawBuffers = function _inspectorDrawBuffers (gl) {\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tWebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t * @method logDepth\n\t * @param {Array} [children=this._stage.children] The children array to walk through.\n\t * @param {String} [prepend=\"\"] What to prepend to this output from this point onwards.\n\t * @param {Function} [logFunc=WebGLInspector._log] Custom logging function, mainly for filtering or formatting output.\n\t */\n\tlogDepth (children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t\tif (!children) { children = this._stage.children; }\n\t\tconst l = children.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet child = children[i];\n\t\t\tlogFunc(`${prepend}-`, child);\n\t\t\tif (child.children && child.children.length) {\n\t\t\t\tthis.logDepth(child.children, `|${prepend}`, logFunc);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Examine the context and provide information about its capabilities.\n\t * @method logContextInfo\n\t * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t */\n\tlogContextInfo (gl) {\n\t\tif (!gl) { gl = this._stage._webGLContext; }\n\t\tlet data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE)/2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)/2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\t\tWebGLInspector._log(data);\n\t}\n\n\t/**\n\t * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t * in place.\n\t * @method logTextureFill\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlogTextureFill (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tlet dict = stage._textureDictionary;\n\t\tlet count = stage._batchTextureCount;\n\t\tWebGLInspector._log(`${textureMax}: ${count}`);\n\t\tlet output = [];\n\t\tfor (let n in dict) {\n\t\t\tlet str = n.replace(window.location.origin, \"\");\n\t\t\tlet tex = dict[n];\n\t\t\tlet shifted = tex._lastActiveIndex?tex._lastActiveIndex === tex._activeIndex:false;\n\t\t\toutput.push({src, element:tex, shifted});\n\t\t\ttex._lastActiveIndex = tex._activeIndex;\n\t\t}\n\n\t\toutput.sort((a,b) => {\n\t\t\tif (a.element._drawID === stage._drawID) { return 1; }\n\t\t\tif (a.element._drawID < b.element._drawID) { return -1; }\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst l = output.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet out = output[i];\n\t\t\tlet active = out.element._drawID === stage._drawID;\n\t\t\tWebGLInspector._log(`[${out.src}] ${active?\"ACTIVE\":\"stale\"} ${out.shifted?\"steady\":\"DRIFT\"}`, out.element);\n\t\t}\n\t}\n\n}\n"]}