{"version":3,"sources":["C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/Event.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/EventDispatcher.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/utils/Ticker.js","../../src/display/StageGL.js","../../src/utils/UID.js","../../src/geom/Point.js","../../src/geom/Matrix2D.js","../../src/geom/DisplayProps.js","../../src/geom/Rectangle.js","../../src/filters/Filter.js","../../src/filters/BitmapCache.js","../../src/display/DisplayObject.js","../../src/display/Container.js","../../src/events/MouseEvent.js","../../src/display/Stage.js","../../src/utils/VideoBuffer.js","../../src/display/Bitmap.js","../../src/display/Sprite.js","../../src/display/BitmapText.js","../../src/display/DOMElement.js","../../src/display/Graphics.js","../../src/display/MovieClip.js","../../src/display/Shadow.js","../../src/display/Shape.js","../../src/display/SpriteSheet.js","../../src/display/Text.js","../../src/filters/AlphaMapFilter.js","../../src/filters/AlphaMaskFilter.js","../../src/filters/BlurFilter.js","../../src/filters/ColorFilter.js","../../src/filters/ColorMatrix.js","../../src/filters/ColorMatrixFilter.js","../../src/ui/ButtonHelper.js","../../src/ui/Touch.js","../../src/utils/SpriteSheetBuilder.js","../../src/utils/SpriteSheetUtils.js","../../src/utils/WebGLInspector.js"],"names":["Event","[object Object]","type","bubbles","cancelable","this","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","event","n","hasOwnProperty","props","constructor","name","EventDispatcher","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","remove","l","length","i","splice","eventObj","clone","e","parent","top","list","captureListeners","o","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","super","timingMode","maxDelta","paused","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","interval","_setupTick","framerate","_getTime","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","init","ticks","times","Math","min","reduce","a","b","runTime","pauseable","_tick","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_handleRAF","bind","_handleSynch","setTimeout","_handleTimeout","time","elapsedTime","delta","unshift","pop","now","performance","_instance","toString","reset","getMeasuredTickTime","getMeasuredFPS","getEventTime","getTicks","StageGL","Error","_nextID","UID","nextID","Point","x","y","setValues","point","Matrix2D","c","d","tx","ty","a1","b1","c1","d1","tx1","matrix","append","prepend","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","angle","pt","sqrt","atan2","abs","PI","identity","DisplayProps","visible","alpha","shadow","compositeOperation","appendMatrix","prependMatrix","Rectangle","width","height","left","bottom","right","rectangle","rect","extend","x1","y1","x2","y2","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","gl","stage","shaderProgram","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","undefined","scale","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","output","filters","filterCount","getBounds","test","options","_options","_useWebGL","update","filterBounds","getFilterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","toDataURL","drawImage","setValue","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","translate","draw","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","bitmapCache","id","get","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","value","ignoreCache","drawCache","cache","mtx","graphics","isEmpty","getMatrix","transform","drawAsPath","clip","invert","_snapToPixelEnabled","globalAlpha","_applyShadow","define","release","getDataURL","getConcatenatedMatrix","transformPoint","localToGlobal","globalToLocal","copy","appendTransform","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","_getBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","evts","_MOUSE_EVENTS","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","children","mouseChildren","tickChildren","numChildren","hasContent","child","isVisible","updateContext","addChild","silent","_removeChildAt","indexOf","index","addChildAt","good","removeChild","indexes","sort","kids","sortFunction","index1","index2","o1","o2","child1","child2","getObjectUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","removeAllChildren","mouse","activeListener","currentDepth","_testMask","_hasMouseEventListener","result","getConcatenatedDisplayProps","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","localX","localY","isTouch","Stage","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","nextStage","tick","beginPath","backgroundColor","mimeType","fillRect","dataURL","frequency","clearInterval","_testMouseOver","setInterval","enable","_eventListeners","t","mouseup","_handleMouseUp","mousemove","_handleMouseMove","dblclick","_handleDoubleClick","mousedown","_handleMouseDown","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_handlePointerMove","pageX","pageY","owner","_getPointerData","inBounds","_updatePointerPosition","_dispatchMouseEvent","_getElementRect","posEvtObj","_handlePointerUp","clear","oTarget","down","_handlePointerDown","preventDefault","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","style","pointerId","VideoBuffer","video","readyState","_video","_canvas","_videoReady","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","getImage","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","_goto","fps","getFrameBounds","advance","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","_maxPoolSize","_spritePool","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","maxPoolSize","_updateState","_updateText","character","toUpperCase","toLowerCase","_getFrameIndex","ss","_getFrame","change","spaceW","lineH","pool","childIndex","numKids","sprite","hasSpace","_getSpaceWidth","_getLineHeight","charAt","gotoAndStop","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","equals","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","g","hue","saturation","lightness","instructions","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","paramCount","params","base64","BASE_64","fi","pl","charCount","num","sign","apply","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","args","lineWidth","lineCap","STROKE_CAPS_MAP","lineJoin","STROKE_JOINTS_MAP","EMPTY_SEGMENTS","_EMPTY_SEGMENTS","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","INDEPENDENT","startPosition","loop","frameBounds","labels","inited","timeline","Timeline","useTicks","actionsEnabled","autoReset","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","MovieClipPlugin","install","currentLabel","getCurrentLabel","duration","totalFrames","positionOrLabel","_framerate","_updateTimeline","pos","resolve","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","removeChildAt","_off","_reset","SYNCHED","Tween","_installPlugin","prop","startValues","endValues","ratio","wait","priority","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","animations","frameIndex","images","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","spacing","margin","count","_calculateFrames","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","_H_OFFSETS","start","center","_V_OFFSETS","hanging","middle","alphabetic","ideographic","Text","font","textAlign","textBaseline","maxWidth","outline","H_OFFSETS","V_OFFSETS","col","_drawText","_prepContext","_getMeasuredWidth","getMeasuredLineHeight","lines","vOffset","substr","paint","_workingContext","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","HTMLCanvasElement","AlphaMaskFilter","_MUL_TABLE","_SHG_TABLE","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","MUL_TABLE","SHG_TABLE","_buildShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_builtShader","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","pad","replace","toFixed","spread","EDGE","adjust","factor","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","stx","mty","sty","ms","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","_DELTA_INDEX","_IDENTITY_MATRIX","_LENGTH","ColorMatrix","brightness","contrast","setColor","DELTA_INDEX","IDENTITY_MATRIX","LENGTH","adjustColor","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","lumR","lumG","lumB","cosVal","sinVal","_fixMatrix","val","limit","toArray","concat","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","play","hitLabel","_isPressed","_isOver","_enabled","enabled","__reset","label","Touch","navigator","singleTouch","allowDefault","isSupported","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","_ERR_DIMENSIONS","_ERR_RUNNING","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","ERR_DIMENSIONS","ERR_RUNNING","source","setupFunction","setupData","nominalBounds","funct","labelFunction","rects","baseFrameIndex","addFrame","_setupMovieClipFrame","_labels","lbls","addAnimation","_startBuild","_drawNext","_endBuild","_run","dataFrames","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","_workingCanvas","rgbImage","alphaImage","il","__tmp","fl","sfx","names","al","_alternateOutput","WebGLInspector","_stage","alternateOutput","item","_log","info","log","console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out"],"mappings":"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","file":"../easeljs.module.js","sourcesContent":["/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\nexport default Event;\n","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/**\n * @license Ticker\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport Event from \"../events/Event\";\n\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n *\n * @memberof core\n * @example\n * Ticker.addEventListener(\"tick\", event => {\n *   // Actions carried out each tick (aka frame)\n *   if (!event.paused) {\n *     // Actions carried out when the Ticker is not paused.\n *   }\n * });\n * @example\n * // Ticker export explanation\n * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n * TickerClass.RAF // -> raf\n * Ticker === getTicker(\"createjs.global\") // -> true\n *\n * @extends core.EventDispatcher\n * @param {string} name The name assigned to this instance.\n */\nclass Ticker extends EventDispatcher {\n\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"synched\"\n\t * @readonly\n\t */\n\tstatic get RAF_SYNCHED () { return \"synched\"; }\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"raf\"\n\t * @readonly\n\t */\n\tstatic get RAF () { return \"raf\"; }\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"timeout\"\n\t * @readonly\n\t */\n\tstatic get TIMEOUT () { return \"timeout\"; }\n\n\tconstructor (name) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of this instance.\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n\t\t *\n\t\t * @see {@link core.Ticker.TIMEOUT}\n\t\t * @see {@link core.Ticker.RAF}\n\t\t * @see {@link core.Ticker.RAF_SYNCHED}\n\t\t *\n\t\t * @type {string}\n\t\t * @default Ticker.TIMEOUT\n\t\t */\n\t\tthis.timingMode = Ticker.TIMEOUT;\n\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t *\n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t *\n\t\t * If 0, there is no maximum.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.maxDelta = 0;\n\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase.\n\t\t *\n\t\t * @example\n\t\t * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n\t\t * Ticker.paused = true;\n\t\t *\n\t\t * @see {@link core.Ticker#event:tick}\n\t\t * @see {@link core.Ticker#getTime}\n\t\t * @see {@link core.Ticker#getEventTime}\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._inited = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._startTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pausedTime = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._ticks = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._pausedTicks = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._interval = 50;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._lastTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._times = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._tickTimes = null;\n\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis._timerId = null;\n\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t *\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis._raf = true;\n\t}\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t *\n\t * @type {number}\n\t */\n\tget interval () { return this._interval; }\n\tset interval (interval) {\n\t\tthis._interval = interval;\n\t\tif (!this._inited) { return; }\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t *\n\t * @type {number}\n\t */\n\tget framerate () { return 1000 / this._interval; }\n\tset framerate (framerate) { this.interval = 1000 / framerate; }\n\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t */\n\tinit () {\n\t\tif (this._inited) { return; }\n\t\tthis._inited = true;\n\t\tthis._times = [];\n\t\tthis._tickTimes = [];\n\t\tthis._startTime = this._getTime();\n\t\tthis._times.push(this._lastTime = 0);\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t */\n\treset () {\n\t\tif (this._raf) {\n\t\t\tlet f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf && f(this._timerId);\n\t\t} else {\n\t\t\tclearTimeout(this._timerId);\n\t\t}\n\t\tthis.removeAllEventListeners(\"tick\");\n\t\tthis._timerId = this._times = this._tickTimes = null;\n\t\tthis._startTime = this._lastTime = this._ticks = 0;\n\t\tthis._inited = false;\n\t}\n\n\t/**\n\t * Init the Ticker instance if it hasn't been already.\n\t */\n\taddEventListener (type, listener, useCapture) {\n\t\t!this._inited && this.init();\n\t\treturn super.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack.\n\t *\n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {number} The average time spent in a tick in milliseconds.\n\t */\n\tgetMeasuredTickTime (ticks = null) {\n\t\tconst times = this._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks || (this.framerate | 0));\n\t\treturn times.reduce((a, b) => a + b, 0) / ticks;\n\t}\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t */\n\tgetMeasuredFPS (ticks = null) {\n\t\tconst times = this._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length - 1, ticks || (this.framerate | 0));\n\t\treturn 1000 / ((times[0] - times[ticks]) / ticks);\n\t}\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t *\n\t * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t */\n\tgetTime (runTime = false) {\n\t\treturn this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n\t * event object.\n\t *\n\t * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tgetEventTime (runTime = false) {\n\t\treturn this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t *\n\t * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value.\n\t * @return {number} of ticks that have been broadcast.\n\t */\n\tgetTicks (pauseable = false) {\n\t\treturn this._ticks - (pauseable ? this._pausedTicks : 0);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleSynch () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n\t\t\tthis._tick();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleRAF () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTimeout () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_setupTick () {\n\t\tif (this._timerId != null) { return; } // avoid duplicates\n\t\tconst mode = this.timingMode || (this._raf && Ticker.RAF);\n\t\tif (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n\t\t\tconst f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tthis._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t\t\t\tthis._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._raf = false;\n\t\tthis._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t}\n\n\t/**\n\t * @private\n\t * @emits core.Ticker#event:tick\n\t */\n\t_tick () {\n\t\tconst paused = this.paused, time = this._getTime(), elapsedTime = time - this._lastTime;\n\t\tthis._lastTime = time;\n\t\tthis._ticks++;\n\n\t\tif (paused) {\n\t\t\tthis._pausedTicks++;\n\t\t\tthis._pausedTime += elapsedTime;\n\t\t}\n\n\t\tif (this.hasEventListener(\"tick\")) {\n\t\t\tconst event = new Event(\"tick\");\n\t\t\tconst maxDelta = this.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time - this._pausedTime;\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\t\tthis._tickTimes.unshift(this._getTime() - time);\n\t\twhile (this._tickTimes.length > 100) { this._tickTimes.pop(); }\n\n\t\tthis._times.unshift(time);\n\t\twhile (this._times.length > 100) { this._times.pop(); }\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getTime () {\n\t\tconst now = window.performance && window.performance.now;\n\t\treturn ((now && now.call(performance)) || (new Date().getTime())) - this._startTime;\n\t}\n\n\tstatic on (type, listener, scope, once, data, useCapture) { return _instance.on(type, listener, scope, once, data, useCapture); }\n\tstatic removeEventListener (type, listener, useCapture) { _instance.removeEventListener(type, listener, useCapture); }\n\tstatic off (type, listener, useCapture) { _instance.off(type, listener, useCapture); }\n\tstatic removeAllEventListeners (type) { _instance.removeAllEventListeners(type); }\n\tstatic dispatchEvent (eventObj, bubbles, cancelable) { return _instance.dispatchEvent(eventObj, bubbles, cancelable); }\n\tstatic hasEventListener (type) { return _instance.hasEventListener(type); }\n\tstatic willTrigger (type) { return _instance.willTrigger(type); }\n\tstatic toString () { return _instance.toString(); }\n\tstatic init () { _instance.init(); }\n\tstatic reset () { _instance.reset(); }\n\tstatic addEventListener (type, listener, useCapture) { _instance.addEventListener(type, listener, useCapture); }\n\tstatic getMeasuredTickTime (ticks) { return _instance.getMeasuredTickTime(ticks); }\n\tstatic getMeasuredFPS (ticks) { return _instance.getMeasuredFPS(ticks); }\n\tstatic getTime (runTime) { return _instance.getTime(runTime); }\n\tstatic getEventTime (runTime) { return _instance.getEventTime(runTime); }\n\tstatic getTicks (pauseable) { return _instance.getTicks(pauseable); }\n\n\tstatic get interval () { return _instance.interval; }\n\tstatic set interval (interval) { _instance.interval = interval; }\n\tstatic get framerate () { return _instance.framerate; }\n\tstatic set framerate (framerate) { _instance.framerate = framerate; }\n\tstatic get name () { return _instance.name; }\n\tstatic set name (name) { _instance.name = name; }\n\tstatic get timingMode () { return _instance.timingMode; }\n\tstatic set timingMode (timingMode) { _instance.timingMode = timingMode; }\n\tstatic get maxDelta () { return _instance.maxDelta; }\n\tstatic set maxDelta (maxDelta) { _instance.maxDelta = maxDelta; }\n\tstatic get paused () { return _instance.paused; }\n\tstatic set paused (paused) { _instance.paused = paused; }\n\n}\n\n/**\n * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused.\n *\n * @example\n * Ticker.addEventListener(\"tick\", event => console.log(\"Paused:\", event.paused, event.delta));\n *\n * @event core.Ticker#tick\n * @type {Object}\n * @property {Object} target The object that dispatched the event.\n * @property {string} type The event type.\n * @property {boolean} paused Indicates whether the ticker is currently paused.\n * @property {number} delta The time elapsed in ms since the last tick.\n * @property {number} time The total time in ms since Ticker was initialized.\n * @property {number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n * you could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n * @since 0.6.0\n */\n\nexport default Ticker;\n\n// the default Ticker instance\nconst _instance = new Ticker(\"createjs.global\");\n","/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass StageGL {\n\tconstructor () {\n\t\tthrow new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t}\n}\n\nexport default StageGL;\n","/*\n* @license UID\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet _nextID = 0;\n\n/**\n * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n * and should not be instantiated.\n * @class UID\n * @static\n * @module EaselJS\n */\nexport default class UID {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t */\n\tstatic get _nextID () { return _nextID; }\n\tstatic set _nextID (nextID) { _nextID = nextID; }\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t */\n\tstatic get () {\n\t\treturn UID._nextID++;\n\t}\n\n}\n","/*\n* @license Point\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * <h4>Example</h4>\n *\n *      var point = new createjs.Point(0, 100);\n *\n * @class Point\n */\nexport default class Point {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t */\n\tconstructor (x = 0, y = 0) {\n\t\tthis.setValues(x, y);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t */\n\tclone () {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t}\n\n}\n","/*\n* @license Matrix2D\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Point from \"./Point\";\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n *\n * @class Matrix2D\n */\nexport default class Matrix2D {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t */\n\tconstructor (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tsetValues (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprepend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet c1 = this.c;\n\t\tlet tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendMatrix (matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependMatrix (matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t *\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c;\n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t *\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\trotate (angle) {\n\t\tangle *= Matrix2D.DEG_TO_RAD;\n\t\tlet cos = Math.cos(angle);\n\t\tlet sin = Math.sin(angle);\n\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tskew (skewX, skewY) {\n\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tscale (x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\ttranslate (x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tidentity () {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tinvert () {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tlet tx1 = this.tx;\n\t\tlet n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t */\n\tisIdentity () {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t}\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t */\n\tequals (matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t}\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t */\n\ttransformPoint (x, y, pt = new Point()) {\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t}\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} [target={}] The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tdecompose (target = {}) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tlet skewX = Math.atan2(-this.c, this.d);\n\t\tlet skewY = Math.atan2(this.b, this.a);\n\n\t\tlet delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tcopy (matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t */\n\tclone () {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t}\n\n}\n\n// constants:\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @property DEG_TO_RAD\n * @static\n * @final\n * @type Number\n * @readonly\n */\n// static public properties:\n/**\n * An identity matrix, representing a null transformation.\n * @property identity\n * @static\n * @type Matrix2D\n * @readonly\n */\n{\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\tMatrix2D.identity = new Matrix2D();\n}\n","/*\n* @license DisplayProps\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Matrix2D from \"./Matrix2D\";\n\n/**\n * Used for calculating and encapsulating display related properties.\n * @class DisplayProps\n */\nexport default class DisplayProps {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t */\n\tconstructor (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t */\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t */\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t */\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible;\n\t\tthis.alpha = alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new Matrix2D();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tappend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t *\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tprepend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tidentity () {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t */\n\tclone () {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t}\n\n}\n","/*\n* @license Rectangle\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n *\n * <h4>Example</h4>\n *\n *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n *\n * @class Rectangle\n * @module EaselJS\n */\nexport default class Rectangle {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t */\n\tconstructor (x = 0, y = 0, width = 0, height = 0) {\n\t\tthis.setValues(x, y, width, height);\n\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0, width = 0, height = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\textend (x, y, width = 0, height = 0) {\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tpad (top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t}\n\n\t/**\n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tcontains (x, y, width = 0, height = 0) {\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tunion (rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tintersection (rect) {\n\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t}\n\n\t/**\n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tintersects (rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t}\n\n\t/**\n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tisEmpty () {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t}\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t */\n\tclone () {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n *\n * <h4>Example</h4>\n *\n *      myInstance.filters = [\n *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *          new createjs.BlurFilter(5, 5, 10)\n *      ];\n *      myInstance.cache(0,0, 100, 100);\n *\n * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @class Filter\n */\nexport default class Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t */\n\tgetBounds (rect) {\n\t\treturn rect;\n\t}\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\n\t}\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t */\n\tclone () {\n\t\treturn new Filter();\n\t}\n\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t */\n\t_applyFilter (imageData) {\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\nimport StageGL from \"../display/StageGL\";\n\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n *\n * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {{#crossLink \"Stage/update\"}}{{/crossLink}},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {{#crossLink \"Filter\"}}{{/crossLink}}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @class BitmapCache\n * @module EaselJS\n */\nexport default class BitmapCache extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t */\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t\t * with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/x:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/y:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t\t * useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.cacheID = 0;\n\n// private properties:\n\t\t/**\n\t\t * Relative offset of the x position, used for drawing the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offX.\n\t\t */\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offY.\n\t\t */\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation\n\t\t * @property _boundRect\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default Rectangle\n\t\t */\n\t\tthis._boundRect = new Rectangle();\n\n\t}\n\n\t/**\n\t * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes\n\t * bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=Rectangle] Optional parameter, if provided then calculated bounds will be applied to that\n\t * object.\n\t * @return {Rectangle} a string representation of the instance.\n\t * @todo Please clarify if the return type is a Rectangle or string.\n\t * @static\n\t */\n\tstatic getFilterBounds (target, output = new Rectangle()) {\n\t\tlet filters = target.filters;\n\t\tlet filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor (let i=0; i<filterCount; i++) {\n\t\t\tlet f = filters[i];\n\t\t\tif (!f || !f.getBounds) { continue; }\n\t\t\tlet test = f.getBounds();\n\t\t\tif (!test) { continue; }\n\t\t\tif (i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n// public methods:\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}. Creates and sets properties needed\n\t * for a cache to function, and performs the initial update.\n\t * @method define\n\t * @param {DisplayObject} target The DisplayObject this cache is linked to.\n\t * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t * @param {Number} [width=1] The width of the cache region.\n\t * @param {Number} [height=1] The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t * and rotate cached elements with greater fidelity.\n\t * @param {Object} [options] When using things like {{#crossLink \"StageGL\"}}{{/crossLink}} there may be\n\t * extra caching opportunities or requirements.\n\t */\n\tdefine (target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t\tif (!target) { throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis._useWebGL = options !== undefined;\n\t\tthis.target = target;\n\n\t\tthis.width = width >= 1 ? width : 1;\n\t\tthis.height = height >= 1 ? height : 1;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scale = scale;\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t */\n\tupdate (compositeOperation) {\n\t\tif (!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tlet filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tlet surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t}\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t */\n\trelease () {\n\t\tlet stage = this.target.stage;\n\t\tif (this._useWebGL && this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT) { this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else if (stage instanceof StageGL) {\n\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t}\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\tlet cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t}\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t */\n\tdraw (ctx) {\n\t\tif (!this.target) { return false; }\n\t\tctx.drawImage(\n\t\t\tthis.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\n\t\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\n\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @method getBounds\n\t * @returns {Rectangle}\n\t */\n\tgetBounds () {\n\t\tconst scale = this.scale;\n\t\treturn this._boundRect.setValue(\n\t\t\tthis._filterOffX/scale,\n\t\t\tthis._filterOffY/scale,\n\t\t\tthis.width/scale,\n\t\t\tthis.height/scale\n\t\t);\n\t}\n\n\n// private methods:\n\t/**\n\t * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t * create and or size the canvas as needed.\n\t * @method _updateSurface\n\t * @protected\n\t */\n\t_updateSurface () {\n\t\tlet surface;\n\t\tif (!this._useWebGL) {\n\t\t\tsurface = this.target.cacheCanvas;\n\t\t\t// create it if it's missing\n\t\t\tif (!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\t// skip the webgl-only updates\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t\t\t\t\tthrow `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\t\t\t} else if (this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;    // use this flag to control stage sizing and final output\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tlet stageGL = this._webGLCache;\n\t\tsurface = this.target.cacheCanvas;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else if (!stageGL.isCacheControlled) {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t}\n\t}\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t */\n\t_drawToCache (compositeOperation) {\n\t\tlet target = this.target;\n\t\tlet surface = target.cacheCanvas;\n\t\tlet webGL = this._webGLCache;\n\n\t\tif (!this._useWebGL || !webGL) {\n\t\t\tlet ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(target);\n\t\t\t}\n\t\t\tsurface._invalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n\t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\t\tsurface = this.target.cacheCanvas;\n\t\tsurface.width = this._drawWidth;\n\t\tsurface.height = this._drawHeight;\n\t\tsurface._invalid = true;\n\t}\n\n\t/**\n\t * Work through every filter and apply its individual transformation to it.\n\t * @method _applyFilters\n\t * @protected\n\t */\n\t_applyFilters () {\n\t\tlet surface = this.target.cacheCanvas;\n\t\tlet filters = this.target.filters;\n\n\t\tlet w = this._drawWidth;\n\t\tlet h = this._drawHeight;\n\n\t\t// setup\n\t\tlet data = surface.getContext(\"2d\").getImageData(0,0, w,h);\n\n\t\t// apply\n\t\tlet l = filters.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tfilters[i]._applyFilter(data);\n\t\t}\n\n\t\t//done\n\t\tsurface.getContext(\"2d\").putImageData(data, 0,0);\n\t}\n\n}\n\n/**\n * Functionality injected to {{#crossLink \"BitmapCache\"}}{{/crossLink}}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n * <h4>Example</h4>\n * Using WebGL cache with a 2d context\n *\n *     var stage = new createjs.Stage();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, true);          // no StageGL to use, so make one\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * <h4>Example</h4>\n * Using WebGL cache with a WebGL context:\n *\n *     var stageGL = new createjs.StageGL();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL);       // use our StageGL to cache\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n * @method cache\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity. Default is 1.\n * @param {Boolean|StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n","/*\n* @license DisplayObject\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport UID from \"../utils/UID\";\nimport DisplayProps from \"../geom/DisplayProps\";\nimport Rectangle from \"../geom/Rectangle\";\nimport Point from \"../geom/Point\";\nimport Matrix2D from \"../geom/Matrix2D\";\nimport BitmapCache from \"../filters/BitmapCache\";\n\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n * @class DisplayObject\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class DisplayObject extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t* If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n\t\t* for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @property cacheCanvas\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * for more information.\n\t\t * @property bitmapCache\n\t\t * @type {BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @property id\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tthis.id = UID.get();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n\t\t * provided in the next release of EaselJS.\n\t\t * @property mouseEnabled\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n\t\t * debugging.\n\t\t * @property name\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n\t\t * contains this display object, or null if it has not been added\n\t\t * to one.\n\t\t * @property parent\n\t\t * @final\n\t\t * @type {Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n\t\t * @property regX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n\t\t * @property regY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @property scaleX\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @property scaleY\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @property skewX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @property skewY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @property shadow\n\t\t * @type {Shadow}\n\t\t * @default null\n\t\t */\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.x = 0;\n\n\t\t/**\n\t\t * The y (vertical) position of the display object, relative to its parent.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @property transformMatrix\n\t\t * @type {Matrix2D}\n\t\t * @default null\n\t\t */\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t\t * whatwg spec on compositing</a>.\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @property snapToPixel\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n\t\t * cached.\n\t\t * @property filters\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @property mask\n\t\t * @type {Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t *\n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t * @property cursor\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\n// private properties:\n\t\t/**\n\t\t * @property _props\n\t\t * @protected\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis._props = new DisplayProps();\n\n\t\t/**\n\t\t * @property _rectangle\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._rectangle = new Rectangle();\n\n\t\t/**\n\t\t * @property _bounds\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @property stage\n\t * @type {Stage}\n\t * @readonly\n\t */\n\tget stage () {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tlet o = this;\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) { return o; }\n\t\treturn null;\n\t}\n\n\tget scale () {\n\t\treturn this.scaleX;\n\t}\n\n\t/**\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n\t * it will return only the `scaleX`.\n\t * @property scale\n\t * @type {Number}\n\t * @default 1\n\t */\n\tset scale (value) {\n\t\tthis.scaleX = this.scaleY = value;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Alias for draw(). Used by grandchildren (or deeper) in their draw method to directly call DisplayObject.draw, bypassing\n\t * their parent(s).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\treturn this.drawCache(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawCache\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdrawCache (ctx, ignoreCache = false) {\n\t\tlet cache = this.bitmapCache;\n\t\tif (cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n\t * @method updateContext\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t */\n\tupdateContext (ctx) {\n\t\tlet o=this, mask=o.mask, mtx=o._props.matrix;\n\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\n\t\tthis.getMatrix(mtx);\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t}\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * <h4>Example</h4>\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t *\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      myShape.cache(-25, -25, 50, 50);\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n\t *\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t */\n\tcache (x, y, width, height, scale = 1, options) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthis.bitmapCache = new BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t}\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * <h4>Example</h4>\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n\t * will be drawn on top of the old one.\n\t *\n\t *      // Not shown: Creating the shape, and caching it.\n\t *      shapeInstance.clear();\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n\t *      shapeInstance.updateCache();\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method updateCache\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t * whatwg spec on compositing</a>.\n\t */\n\tupdateCache (compositeOperation) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthrow \"cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t}\n\n\t/**\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n\t * @method uncache\n\t */\n\tuncache () {\n\t\tif (this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.localToGlobal(100, 100);\n\t *      // Results in x=400, y=300\n\t *\n\t * @method localToGlobal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t */\n\tlocalToGlobal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.globalToLocal(100, 100);\n\t *      // Results in x=-200, y=-100\n\t *\n\t * @method globalToLocal\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t */\n\tglobalToLocal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t *\n\t *      var pt = this.localToGlobal(x, y);\n\t *      pt = target.globalToLocal(pt.x, pt.y);\n\t *\n\t * @method localToLocal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t */\n\tlocalToLocal (x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t}\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @method setTransform\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n\t * @chainable\n\t*/\n\tsetTransform (x=0, y=0, scaleX=1, scaleY=1, rotation=0, skewX=0, skewY=0, regX=0, regY=0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scaleX = scaleX;\n\t\tthis.scaleY = scaleY;\n\t\tthis.rotation = rotation;\n\t\tthis.skewX = skewX;\n\t\tthis.skewY = skewY;\n\t\tthis.regX = regX;\n\t\tthis.regY = regY;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @method getMatrix\n\t * @param {Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new\n\t * Matrix object is returned.\n\t * @return {Matrix2D} A matrix representing this display object's transform.\n\t */\n\tgetMatrix (matrix) {\n\t\tlet o = this, mtx = matrix&&matrix.identity() || new Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t}\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t * @method getConcatenatedMatrix\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new Matrix2D object is returned.\n\t * @return {Matrix2D} The combined matrix.\n\t */\n\tgetConcatenatedMatrix (matrix) {\n\t\tlet o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t}\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n\t * @method getConcatenatedDisplayProps\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new DisplayProps object is returned.\n\t * @return {DisplayProps} The combined display properties.\n\t */\n\tgetConcatenatedDisplayProps (props) {\n\t\tprops = props ? props.identity() : new DisplayProps();\n\t\tlet o = this, mtx = o.getMatrix(props.matrix);\n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n\t *      function handleMouseDown(event) {\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\n\t *      }\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\thitTest (x, y) {\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tlet hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t *\n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly:\n\t *\n\t * \tvar bounds = obj.getBounds();\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * \t// getBounds will now use the set values, instead of recalculating\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * \tvar myBounds = obj.getBounds().clone();\n\t * \t// OR:\n\t * \tmyRect.copy(obj.getBounds());\n\t *\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n\t * object.\n\t */\n\tgetBounds () {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tlet cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tlet scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @method getTransformedBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t *\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t * @method setBounds\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t */\n\tsetBounds (x, y, width, height) {\n\t\tif (x == null) { this._bounds = x; }\n\t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t}\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t * @method clone\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new DisplayObject());\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\n// private methods:\n\t// separated so it can be used more easily in subclasses:\n\t/**\n\t * @method _cloneProps\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {DisplayObject} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _applyShadow\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Shadow} [shadow=Shadow]\n\t */\n\t_applyShadow (ctx, shadow = Shadow.identity) {\n\t\tshadow = shadow;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tlet ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t}\n\n\t/**\n\t * @method _testHit\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t */\n\t_testHit (ctx) {\n\t\ttry {\n\t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t}\n\n\t/**\n\t * @method _transformBounds\n\t * @param {Rectangle} bounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_transformBounds (bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tlet { x, y, width, height } = bounds;\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tlet x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tlet y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\n\t\tlet minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t}\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @method _hasMouseEventListener\n\t * @return {Boolean}\n\t * @protected\n\t */\n\t_hasMouseEventListener () {\n\t\tlet evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (let i=0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t}\n\n}\n\n// static properties:\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @property _MOUSE_EVENTS\n * @protected\n * @static\n * @type {Array}\n * @readonly\n */\n\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @property suppressCrossDomainErrors\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _snapToPixelEnabled\n * @protected\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _hitTestCanvas\n * @type {HTMLCanvasElement | Object}\n * @static\n * @protected\n */\n/**\n * @property _hitTestContext\n * @type {CanvasRenderingContext2D}\n * @static\n * @protected\n */\n{\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\t// ES6 does not support static properties, this is a work around.\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\tDisplayObject.suppressCrossDomainErrors = false;\n\tDisplayObject.snapToPixelEnabled = false;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_NONE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_NONE = 0;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_SPRITE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_SPRITE = 1;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_BITMAP\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_BITMAP = 2;\n\n}\n\n// events:\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object. See the\n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n\t * myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t * @event pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t * @event pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n\t * dispatched on their parent.\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n\t * @since 0.6.0\n\t */\n","/*\n* @license Container\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from './DisplayObject';\n\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * <h4>Example</h4>\n *\n *      var container = new createjs.Container();\n *      container.addChild(bitmapInstance, shapeInstance);\n *      container.x = 100;\n *\n * @class Container\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Container extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n\t\t * included for advanced uses.\n\t\t * @property children\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @property mouseChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickChildren = true;\n\t\t}\n\n// accessor properties:\n\t/**\n\t * Returns the number of children in the container.\n\t * @property numChildren\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget numChildren () {\n\t\treturn this.children.length;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tlet list = this.children.slice();\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tlet child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance);\n\t *\n\t * You can also add multiple children at once:\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @method addChild\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n\t */\n\taddChild (...children) {\n\t\tconst l = children.length;\n\t\tif (l === 0) { return null; }\n\t\tlet child = children[0];\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { child = this.addChild(children[i]); }\n\t\t\treturn child;\n\t\t}\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this Container.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      addChildAt(child1, index);\n\t *\n\t * You can also add multiple children, such as:\n\t *\n\t *      addChildAt(child1, child2, ..., index);\n\t *\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n\t * you could use:\n\t *\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t *\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @method addChildAt\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t */\n\taddChildAt (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return null; }\n    let index = children.pop();\n\t\tif (index < 0 || index > this.children.length) { return children[l - 2]; }\n\t\tif (l > 2) {\n\t\t\tfor (let i = 0; i < l - 1; i++) { this.addChildAt(children[i], index++); }\n\t\t\treturn children[l - 2];\n\t\t}\n\t\tlet child = children[0];\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index++, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChild(child);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      removeChild(child1, child2, ...);\n\t *\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\n\t * @method removeChild\n\t * @param {DisplayObject} children The display object(s) to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t */\n\tremoveChild (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeChild(children[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n\t}\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChildAt(2);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      container.removeChild(2, 7, ...)\n\t *\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\n\t * @method removeChildAt\n\t * @param {...Number} indexes The indexes of children to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t */\n\tremoveChildAt (...indexes) {\n\t\tconst l = indexes.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tindexes.sort((a, b) => b - a);\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this._removeChildAt(indexes[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(indexes[0]);\n\t}\n\n\t/**\n\t * Removes all children from the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tcontainer.removeAllChildren();\n\t *\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {\n\t\tlet kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t}\n\n\t/**\n\t * Returns the child at the specified index.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.getChildAt(2);\n\t *\n\t * @method getChildAt\n\t * @param {Number} index The index of the child to return.\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t */\n\tgetChildAt (index) {\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @method getChildByName\n\t * @param {String} name The name of the child to return.\n\t * @return {DisplayObject} The child with the specified name.\n\t */\n\tgetChildByName (name) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (kids[i].name === name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * <h4>Example: Display children with a higher y in front.</h4>\n\t *\n\t *      var sortFunction = function(obj1, obj2, options) {\n\t *          if (obj1.y > obj2.y) { return 1; }\n\t *          if (obj1.y < obj2.y) { return -1; }\n\t *          return 0;\n\t *      }\n\t *      container.sortChildren(sortFunction);\n\t *\n\t * @method sortChildren\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n\t * documentation for details.\n\t */\n\tsortChildren (sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t}\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var index = container.getChildIndex(child);\n\t *\n\t * @method getChildIndex\n\t * @param {DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t */\n\tgetChildIndex (child) {\n\t\treturn this.children.indexOf(child);\n\t}\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @method swapChildrenAt\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t */\n\tswapChildrenAt (index1, index2) {\n\t\tlet kids = this.children;\n\t\tlet o1 = kids[index1];\n\t\tlet o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @method swapChildren\n\t * @param {DisplayObject} child1\n\t * @param {DisplayObject} child2\n\t */\n\tswapChildren (child1, child2) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tlet index1,index2;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child1) { index1 = i; }\n\t\t\tif (kids[i] === child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i === l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t}\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {DisplayObject} child\n\t * @param {Number} index\n\t * @method setChildIndex\n\t */\n\tsetChildIndex (child, index) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child) { break; }\n\t\t}\n\t\tif (i === l || i === index) { return; }\n\t\tkids.splice(i, 1);\n\t\tkids.splice(index, 0, child);\n\t}\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @method contains\n\t * @param {DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t */\n\tcontains (child) {\n\t\twhile (child) {\n\t\t\tif (child === this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t */\n\thitTest (x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn this.getObjectUnderPoint(x, y) != null;\n\t}\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n\t * and only if the mouse's position has changed.\n\t *\n\t * <ul>\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n\t * </li>\n\t *\n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n\t * @method getObjectsUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\n\t */\n\tgetObjectsUnderPoint (x, y, mode = 0) {\n\t\tlet arr = [];\n\t\tlet pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n\t * @method getObjectUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\n\t */\n\tgetObjectUnderPoint (x, y, mode = 0) {\n\t\tlet pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\treturn this._getBounds(null, true);\n\t}\n\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {Container} A clone of the current Container instance.\n\t */\n\tclone (recursive = false) {\n\t\tlet o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\tlet child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @method cloneChildren\n\t * @protected\n\t * @param {Container} o The target container.\n\t */\n\t_cloneChildren (o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tlet arr = o.children;\n\t\tconst l = this.children.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t}\n\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   * @method removeChildAt\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   **/\n  _removeChildAt (index, silent = false) {\n    if (index < 0 || index > this.children.length - 1) { return false; }\n    let child = this.children[index];\n    if (child) { child.parent = null; }\n    this.children.splice(index, 1);\n    if (!silent) { child.dispatchEvent(\"removed\"); }\n    return true;\n  }\n\n\t/**\n\t * @method _getObjectsUnderPoint\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t * @return {DisplayObject}\n\t * @protected\n\t */\n\t_getObjectsUnderPoint (x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tlet mtx, ctx = DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse && this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tlet children = this.children;\n\t\tconst l = children.length;\n\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\tlet child = children[i];\n\t\t\tlet hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tlet result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tlet props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea || child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @method _testMask\n\t * @param {DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t * @protected\n\t */\n\t_testMask (target, x, y) {\n\t\tlet mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n\t\tlet mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = super.getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tconst l = this.children.length;\n\t\tlet rect = null;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t}\n\n}\n","/*\n* @license MouseEvent\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n * @class MouseEvent\n * @extends Event\n * @module EaselJS\n */\nexport default class MouseEvent extends Event {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t */\n\tconstructor (type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tsuper (type, bubbles, cancelable);\n\n// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t */\n\t\tthis.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t */\n\t\tthis.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t *\n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\n// accessor properties:\n/**\n * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n * @property localX\n * @type {Number}\n * @readonly\n */\n\tget localX () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t}\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localY () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t}\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tget isTouch () {\n\t\treturn this.pointerID !== -1;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t */\n\tclone () {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t}\n\n}\n","/*\n* @license Stage\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport MouseEvent from \"../events/MouseEvent\";\n\n/**\n * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n * method is called, it will render its display list to its target canvas.\n *\n * <h4>Example</h4>\n * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvasElementId\");\n *      var image = new createjs.Bitmap(\"imagePath.png\");\n *      stage.addChild(image);\n *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n *      function handleTick(event) {\n *          image.x += 10;\n *          stage.update();\n *      }\n *\n * @class Stage\n * @extends Container\n * @module EaselJS\n */\nexport default class Stage extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t */\n\tconstructor (canvas) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t */\n\t\tthis.canvas = (typeof canvas === \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\n// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._nextStage = null;\n\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._prevStage = null;\n\n\t\tthis.enableDOMEvents(true);\n\t}\n\n// accessor properties:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t *\n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t *\n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t *\n\t *\ttargetStage.enableDOMEvents(false);\n\t *\n\t * @property nextStage\n\t * @type {Stage}\n\t */\n\tget nextStage () {\n\t\treturn this._nextStage;\n\t}\n\n\tset nextStage (stage) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (stage) { stage._prevStage = this; }\n\t\tthis._nextStage = stage;\n\t}\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t */\n\tupdate (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tlet r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t}\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t *\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t *\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t *\n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t */\n\ttick (props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tlet evtObj = new Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (let n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t}\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage\");\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t */\n\thandleEvent (evt) {\n\t\tif (evt.type === \"tick\") { this.update(evt); }\n\t}\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t */\n\tclear () {\n\t\tif (!this.canvas) { return; }\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t}\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t */\n\ttoDataURL (backgroundColor, mimeType = \"image/png\") {\n\t\tlet data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tlet dataURL = this.canvas.toDataURL(mimeType);\n\n\t\tif (backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t */\n\tenableMouseOver (frequency = 20) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency === 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency <= 0) { return; }\n\t\tthis._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000/Math.min(50,frequency));\n\t}\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t */\n\tenableDOMEvents (enable = true) {\n\t\tlet ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tlet t = window.addEventListener ? window : document;\n\t\t\tls = this._eventListeners = {\n\t\t\t\tmouseup: {t, f:e => this._handleMouseUp(e) },\n\t\t\t\tmousemove: {t, f:e => this._handleMouseMove(e) },\n\t\t\t\tdblclick: {t:this.canvas, f:e => this._handleDoubleClick(e) },\n\t\t\t\tmousedown: {t:this.canvas, f:e => this._handleMouseDown(e) }\n\t\t\t};\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t}\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t */\n\t_getElementRect (e) {\n\t\tlet bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top:e.offsetTop, left:e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tlet offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tlet offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tlet styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\t\tlet padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tlet padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tlet padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tlet padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t};\n\t}\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t */\n\t_getPointerData (id) {\n\t\tlet data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0, y:0}; }\n\t\treturn data;\n\t}\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} [e=window.event]\n\t */\n\t_handleMouseMove (e = window.event) {\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerMove (id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tlet nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tlet inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds === !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t}\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t */\n\t_updatePointerPosition (id, e, pageX, pageY) {\n\t\tlet rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tlet w = this.canvas.width;\n\t\tlet h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tlet o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseUp (e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t}\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerUp (id, e, clear, owner) {\n\t\tlet nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n\t\tif (target === oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t}\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseDown (e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerDown (id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tlet target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t}\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t */\n\t_testMouseOver (clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tlet o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds)) { return; }\n\n\t\tlet e = o.posEvtObj;\n\t\tlet isEventTarget = eventTarget || e&&(e.target === this.canvas);\n\t\tlet target=null, common = -1, cursor=\"\";\n\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tlet oldList = this._mouseOverTarget||[];\n\t\tlet oldTarget = oldList[oldList.length-1];\n\t\tlet list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tlet t = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t}\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handleDoubleClick (e, owner) {\n\t\tlet target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t}\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t */\n\t_dispatchMouseEvent (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tlet pt = this._mtx.transformPoint(o.x, o.y);\n\t\tlet evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tlet evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemousemove\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event stagemousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemouseup\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseleave\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseenter\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event tickstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event tickend\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event drawstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event drawend\n * @since 0.7.0\n */\n","/**\n* @license VideoBuffer\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n * \tvar myBitmap = new Bitmap(myBuffer);\n *\n * @class VideoBuffer\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n * @constructor\n **/\nexport default class VideoBuffer {\n\n  constructor (video) {\n// private properties:\n  \t/**\n  \t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n  \t * @property readyState\n  \t * @protected\n  \t * @type {Number}\n  \t * @default 0\n  \t **/\n  \tthis.readyState = video.readyState;\n\n  \t/**\n  \t * @property _video\n  \t * @protected\n  \t * @type {HTMLVideoElement}\n  \t * @default 0\n  \t **/\n  \tthis._video = video;\n\n  \t/**\n  \t * @property _canvas\n  \t * @protected\n  \t * @type {HTMLCanvasElement}\n  \t * @default 0\n  \t **/\n  \tthis._canvas = null;\n\n  \t/**\n  \t * @property _lastTime\n  \t * @protected\n  \t * @type {Number}\n  \t * @default -1\n  \t **/\n  \tthis._lastTime = -1;\n\n  \tif (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } //once:true isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n// public methods:\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   * @method getImage\n   **/\n  getImage () {\n  \tif (this.readyState < 2) { return; }\n  \tlet canvas = this._canvas, video = this._video;\n  \tif (!canvas) {\n\t\t\tcanvas = this._canvas = document.createElement(\"canvas\");\n  \t\tcanvas.width = video.videoWidth;\n  \t\tcanvas.height = video.videoHeight;\n  \t}\n  \tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n  \t\tconst ctx = canvas.getContext(\"2d\");\n  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \t\tthis._lastTime = video.currentTime;\n  \t}\n  \treturn canvas;\n  }\n\n  // private methods:\n  /**\n   * @method _videoReady\n   * @protected\n   **/\n  _videoReady () {\n  \tthis.readyState = 2;\n  }\n\n}\n","/*\n* @license Bitmap\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport VideoBuffer from \"../utils/VideoBuffer\";\n\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <h4>Example</h4>\n *\n *      var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @class Bitmap\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Bitmap extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t * @constructor\n\t */\n\tconstructor (imageOrUri) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t */\n\t\tif (typeof imageOrUri === \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet image = this.image;\n\t\tlet hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tlet img = this.image, rect = this.sourceRect;\n\t\tif (img instanceof VideoBuffer) { img = img.getImage(); }\n\t\tif (img == null) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tlet rect = super.getBounds();\n\t\tif (rect) { return rect; }\n\t\tlet image = this.image, o = this.sourceRect || image;\n\t\tlet hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t}\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t */\n\tclone (node) {\n\t\tlet img = this.image;\n\t\tif (img != null && node != null) { img = img.cloneNode(); }\n\t\tlet bmp = new Bitmap(img);\n\t\tif (this.sourceRect) { bmp.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(bmp);\n\t\treturn bmp;\n\t}\n\n}\n","/*\n* @license Sprite\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n *\n * <h4>Example</h4>\n *\n *      var instance = new createjs.Sprite(spriteSheet);\n *      instance.gotoAndStop(\"frameName\");\n *\n * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @class Sprite\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Sprite extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t */\n\tconstructor (spriteSheet, frameOrAnimation) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t */\n\t\tthis.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = 0;\n\n\n// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tlet o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tlet rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t */\n\tgotoAndPlay (frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t */\n\tgotoAndStop (frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet fps = this.framerate || this.spriteSheet.framerate;\n\t\tlet t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t */\n\tgetBounds () {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t}\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t}\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t */\n\t_tick (evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t * @param {Number} [frameDelta=0]\n\t */\n\t_normalizeFrame (frameDelta = 0) {\n\t\tlet animation = this._animation;\n\t\tlet paused = this.paused;\n\t\tlet frame = this._currentFrame;\n\n\t\tif (animation) {\n\t\t\tlet speed = animation.speed || 1;\n\t\t\tlet animFrame = this.currentAnimationFrame;\n\t\t\tlet l = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tlet next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tlet l = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @method _dispatchAnimationEnd\n\t * @param animation\n\t * @param frame\n\t * @param paused\n\t * @param next\n\t * @param end\n\t * @private\n\t */\n\t_dispatchAnimationEnd (animation, frame, paused, next, end) {\n\t\tlet name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tlet evt = new Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tlet changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t */\n\t_goto (frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tlet data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when an animation reaches its ends.\n * @event animationend\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {String} name The name of the animation that just ended.\n * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event change\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n */\n","/*\n* @license BitmapText\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport Sprite from \"./Sprite\";\n\n// ES6 does not support static properties, this is a work around.\nlet _maxPoolSize = 100;\nlet _spritePool = [];\n\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n * property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @class BitmapText\n * @extends Container\n * @module EaselJS\n */\nexport default class BitmapText extends Container {\n\n// constructor:\n\t/**\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t */\n\tconstructor (text = \"\", spriteSheet = null) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t *\n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.spaceWidth = 0;\n\n\n// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\n\t}\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t */\n\tstatic get maxPoolSize () { return _maxPoolSize; }\n\tstatic set maxPoolSize (maxPoolSize) { _maxPoolSize = maxPoolSize;}\n\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t * @readonly\n\t */\n\tstatic get _spritePool () { return _spritePool; }\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (this.drawCache(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tthis._updateText();\n\t\treturn super.getBounds();\n\t}\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t}\n\n\tclone () {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t */\n\taddChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t */\n\taddChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t */\n\tremoveChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t */\n\tremoveChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tthis._updateText();\n\t}\n\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getFrameIndex (character, spriteSheet) {\n\t\tlet c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t}\n\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t */\n\t_getFrame (character, spriteSheet) {\n\t\tlet index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t}\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getLineHeight (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t}\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getSpaceWidth (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t */\n\t_updateText () {\n\t\tlet x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n\t\tlet pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n\t\tfor (let n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\n\t\tlet hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\n\t\tfor (let i = 0, l = this.text.length; i < l; i++) {\n\t\t\tlet character = this.text.charAt(i);\n\t\t\tif (character === \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n\t\t\t\tif (character === \"\\r\" && this.text.charAt(i+1) === \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t}\n\n}\n","/*\n* @license DOMElement\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport DisplayProps from \"../geom/DisplayProps\";\n\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @class DOMElement\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class DOMElement extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLElement|String} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tconstructor (htmlElement) {\n\t\tsuper();\n\n\t\tif (typeof(htmlElement) === \"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\n\t\tlet style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\n// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn this.htmlElement != null;\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tcache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tuncache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tupdateCache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\thitTest () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tlocalToGlobal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tglobalToLocal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tlocalToLocal () {}\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tif (stage != null && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\t_handleDrawEnd (evt) {\n\t\tlet o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tlet style = o.style;\n\n\t\tlet props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n\t\tlet visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\n\t\tlet oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tlet n = 10000; // precision\n\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tlet str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t}\n\n}\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mousedown\n */\n\n/**\n * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mouseover\n */\n\n/**\n * Not applicable to DOMElement.\n * @event tick\n */\n","/**\n* @license Graphics\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n *      var g = new createjs.Graphics();\n *      g.setStrokeStyle(1);\n *      g.beginStroke(\"#000000\");\n *      g.beginFill(\"red\");\n *      g.drawCircle(0,0,30);\n *\n * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n *\n *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n *\n *      var fillCommand = myGraphics.beginFill(\"red\").command;\n *      // ... later, update the fill style/color:\n *      fillCommand.style = \"blue\";\n *      // or change it to a bitmap fill:\n *      fillCommand.bitmap(myImage);\n *\n * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n *      myGraphics.append(createjs.Graphics.beginCmd);\n *      // we need to define the path before applying the fill:\n *      var circle = new createjs.Graphics.Circle(0,0,30);\n *      myGraphics.append(circle);\n *      // fill the path we just defined:\n *      var fill = new createjs.Graphics.Fill(\"red\");\n *      myGraphics.append(fill);\n *\n * These approaches can be used together, for example to insert a custom command:\n *\n *      myGraphics.beginFill(\"red\");\n *      var customCommand = new CustomSpiralCommand(etc);\n *      myGraphics.append(customCommand);\n *      myGraphics.beginFill(\"blue\");\n *      myGraphics.drawCircle(0, 0, 30);\n *\n * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n * </table>\n *\n * Here is the above example, using the tiny API instead.\n *\n *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @class Graphics\n * @module EaselJS\n */\nexport default class Graphics {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t */\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t */\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._strokeStyle = null;\n\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._strokeDash = null;\n\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t */\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t */\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._storeIndex = 0;\n\n// ActionScript mappings:\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method curveTo\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.curveTo = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method drawRect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.drawRect = this.rect;\n\n// tiny API:\n\t\t/**\n\t\t * Shortcut to moveTo.\n\t\t * @method mt\n\t\t * @param {Number} x The x coordinate the drawing point should move to.\n\t\t * @param {Number} y The y coordinate the drawing point should move to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.mt = this.moveTo;\n\n\t\t/**\n\t\t * Shortcut to lineTo.\n\t\t * @method lt\n\t\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lt = this.lineTo;\n\n\t\t/**\n\t\t * Shortcut to arcTo.\n\t\t * @method at\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.at = this.arcTo;\n\n\t\t/**\n\t\t * Shortcut to bezierCurveTo.\n\t\t * @method bt\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bt = this.bezierCurveTo;\n\n\t\t/**\n\t\t * Shortcut to quadraticCurveTo / curveTo.\n\t\t * @method qt\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.qt = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Shortcut to arc.\n\t\t * @method a\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle Measured in radians.\n\t\t * @param {Number} endAngle Measured in radians.\n\t\t * @param {Boolean} anticlockwise\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.a = this.arc;\n\n\t\t/**\n\t\t * Shortcut to rect.\n\t\t * @method r\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.r = this.rect;\n\n\t\t/**\n\t\t * Shortcut to closePath.\n\t\t * @method cp\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.cp = this.closePath;\n\n\t\t/**\n\t\t * Shortcut to clear.\n\t\t * @method c\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.c = this.clear;\n\n\t\t/**\n\t\t * Shortcut to beginFill.\n\t\t * @method f\n\t\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no fill.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.f = this.beginFill;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientFill.\n\t\t * @method lf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t\t * drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t\t * the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lf = this.beginLinearGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientFill.\n\t\t * @method rf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rf = this.beginRadialGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapFill.\n\t\t * @method bf\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t\t * will be applied relative to the parent transform.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bf = this.beginBitmapFill;\n\n\t\t/**\n\t\t * Shortcut to endFill.\n\t\t * @method ef\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ef = this.endFill;\n\n\t\t/**\n\t\t * Shortcut to setStrokeStyle.\n\t\t * @method ss\n\t\t * @param {Number} thickness The width of the stroke.\n\t\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t\t * the tiny API.\n\t\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t\t * for use with the tiny API.\n\t\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t\t * controls at what point a mitered joint will be clipped.\n\t\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t\t * of active transformations.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ss = this.setStrokeStyle;\n\n\t\t/**\n\t\t * Shortcut to setStrokeDash.\n\t\t * @method sd\n\t\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t\t * Passing null or an empty array will clear any existing dash.\n\t\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.sd = this.setStrokeDash;\n\n\t\t/**\n\t\t * Shortcut to beginStroke.\n\t\t * @method s\n\t\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no stroke.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.s = this.beginStroke;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientStroke.\n\t\t * @method ls\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ls = this.beginLinearGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientStroke.\n\t\t * @method rs\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t\t * to 100%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rs = this.beginRadialGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapStroke.\n\t\t * @method bs\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bs = this.beginBitmapStroke;\n\n\t\t/**\n\t\t * Shortcut to endStroke.\n\t\t * @method es\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.es = this.endStroke;\n\n\t\t/**\n\t\t * Shortcut to drawRect.\n\t\t * @method dr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dr = this.drawRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRect.\n\t\t * @method rr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radius Corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rr = this.drawRoundRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRectComplex.\n\t\t * @method rc\n\t\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t\t * @param {Number} w The width of the round rect.\n\t\t * @param {Number} h The height of the round rect.\n\t\t * @param {Number} radiusTL Top left corner radius.\n\t\t * @param {Number} radiusTR Top right corner radius.\n\t\t * @param {Number} radiusBR Bottom right corner radius.\n\t\t * @param {Number} radiusBL Bottom left corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rc = this.drawRoundRectComplex;\n\n\t\t/**\n\t\t * Shortcut to drawCircle.\n\t\t * @method dc\n\t\t * @param {Number} x x coordinate center point of circle.\n\t\t * @param {Number} y y coordinate center point of circle.\n\t\t * @param {Number} radius Radius of circle.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dc = this.drawCircle;\n\n\t\t/**\n\t\t * Shortcut to drawEllipse.\n\t\t * @method de\n\t\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from center.\n\t\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from the center.\n\t\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t\t * number.\n\t\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.de = this.drawEllipse;\n\n\t\t/**\n\t\t * Shortcut to drawPolyStar.\n\t\t * @method dp\n\t\t * @param {Number} x Position of the center of the shape.\n\t\t * @param {Number} y Position of the center of the shape.\n\t\t * @param {Number} radius The outer radius of the shape.\n\t\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t\t * directly to the right of the center.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dp = this.drawPolyStar;\n\n\t\t/**\n\t\t * Shortcut to decodePath.\n\t\t * @method p\n\t\t * @param {String} str The path string to decode.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.p = this.decodePath;\n\n\t\tthis.clear();\n\t}\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t */\n\tstatic getRGB (r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn `rgb(${r},${g},${b})`;\n\t\t} else {\n\t\t\treturn `rgba(${r},${g},${b},${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t */\n\tstatic getHSL (hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t\t} else {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget instructions () {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t */\n\tisEmpty () {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t */\n\tdraw (ctx, data) {\n\t\tthis._updateInstructions();\n\t\tlet instr = this._instructions;\n\t\tconst l = instr.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t}\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t */\n\tdrawAsPath (ctx) {\n\t\tthis._updateInstructions();\n\t\tlet instr, instrs = this._instructions;\n\t\tconst l = instrs.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t}\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t */\n\tmoveTo (x, y) {\n\t\treturn this.append(new MoveTo(x,y), true);\n\t}\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tlineTo (x, y) {\n\t\treturn this.append(new LineTo(x,y));\n\t}\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarcTo (x1, y1, x2, y2, radius) {\n\t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarc (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tquadraticCurveTo (cpx, cpy, x, y) {\n\t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t}\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbezierCurveTo (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t}\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\trect (x, y, w, h) {\n\t\treturn this.append(new Rect(x, y, w, h));\n\t}\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclosePath () {\n\t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t}\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclear () {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginFill (color) {\n\t\treturn this._setFill(color ? new Fill(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientFill (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientFill (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapFill (image, repetition, matrix) {\n\t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendFill () {\n\t\treturn this.beginFill();\n\t}\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeStyle (thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeDash (segments, offset = 0) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginStroke (color) {\n\t\treturn this._setStroke(color ? new Stroke(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientStroke (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientStroke (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapStroke (image, repetition = \"repeat\") {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendStroke () {\n\t\treturn this.beginStroke();\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRect (x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRectComplex (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t}\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\t  s.x = 100;\n\t *\t\t  s.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawCircle (x, y, radius) {\n\t\treturn this.append(new Circle(x, y, radius));\n\t}\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawEllipse (x, y, w, h) {\n\t\treturn this.append(new Ellipse(x, y, w, h));\n\t}\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawPolyStar (x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t}\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tappend (command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdecodePath (str) {\n\t\tlet instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tlet paramCount = [2, 2, 4, 6, 0];\n\t\tlet i = 0;\n\t\tconst l = str.length;\n\t\tlet params = [];\n\t\tlet x = 0, y = 0;\n\t\tlet base64 = Graphics.BASE_64;\n\n\t\twhile (i < l) {\n\t\t\tlet c = str.charAt(i);\n\t\t\tlet n = base64[c];\n\t\t\tlet fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tlet f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(`bad path data (@${i}):c`); }\n\t\t\tconst pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tlet charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (let p = 0; p < pl; p++) {\n\t\t\t\tlet num = base64[str.charAt(i)];\n\t\t\t\tlet sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount === 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this, params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tstore () {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tunstore () {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t */\n\tclone () {\n\t\tlet o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t */\n\t_updateInstructions (commit) {\n\t\tlet instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tconst l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (let i = 0; i < l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t */\n\t_setFill (fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t */\n\t_setStroke (stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t}\n\n}\n\n// Command Objects:\n\n/**\n * @namespace Graphics\n */\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class LineTo\n */\nexport class LineTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class MoveTo\n */\nexport class MoveTo {\n\t/**\n\t * @constructor\n   * @param {Number} x\n   * @param {Number} y\n\t */\n \tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n \t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n \texec (ctx) {\n \t\tctx.moveTo(this.x, this.y);\n \t}\n}\n\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ArcTo\n */\nexport class ArcTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t */\n \tconstructor (x1, y1, x2, y2, radius) {\n\t\t/**\n\t\t * @property x1\n\t\t * @type Number\n\t\t */\n\t \tthis.x1 = x1;\n\t\t/**\n\t\t * @property y1\n\t\t * @type Number\n\t\t */\n\t\tthis.y1 = y1;\n\t\t/**\n\t\t * @property x2\n\t\t * @type Number\n\t\t */\n\t \tthis.x2 = x2;\n\t\t/**\n\t\t * @property y2\n\t\t * @type Number\n\t\t */\n\t\tthis.y2 = y2;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Arc\n */\nexport class Arc {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t */\n \tconstructor (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property startAngle\n\t\t * @type Number\n\t\t */\n\t \tthis.startAngle = startAngle;\n\t\t/**\n\t\t * @property endAngle\n\t\t * @type Number\n\t\t */\n\t\tthis.endAngle = endAngle;\n\t\t/**\n\t\t * @property anticlockwise\n\t\t * @type Number\n\t\t */\n\t \tthis.anticlockwise = !!anticlockwise;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class QuadraticCurveTo\n */\nexport class QuadraticCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cpx, cpy, x, y) {\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t \tthis.cpx = cpx;\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\tthis.cpy = cpy;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BezierCurveTo\n */\nexport class BezierCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t/**\n\t\t * @property cp1x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp1x = cp1x;\n\t\t/**\n\t\t * @property cp1y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp1y = cp1y;\n\t\t/**\n\t\t * @property cp2x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp2x = cp2x;\n\t\t/**\n\t\t * @property cp2y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp2y = cp2y;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Rect\n */\nexport class Rect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.rect(this.x, this.y, this.w, this.h);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ClosePath\n */\nexport class ClosePath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BeginPath\n */\nexport class BeginPath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.beginPath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Fill\n */\nexport class Fill {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t */\n\tconstructor (style, matrix) {\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t\tthis.matrix = matrix;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tlet mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tlinearGradient (colors, ratios, x0, y0, x1, y1) {\n\t\tlet o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, x1, y1, type:\"linear\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tradialGradient (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tlet o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, r0, x1, y1, r1, type: \"radial\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tbitmap (image, repetition = \"\") {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tlet o = this.style = Graphics._ctx.createPattern(image, repetition);\n\t\t\to.props = {image, repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Stroke\n */\nexport class Stroke {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t */\n\tconstructor (style, ignoreScale) {\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tlinearGradient (...args) {\n\t\t// TODO-ES6: Anything but this...\n\t\tFill.prototype.linearGradient.apply(this, args);\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tradialGradient (...args) {\n \t\tFill.prototype.radialGradient.apply(this, args);\n \t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tbitmap (...args) {\n \t\tFill.prototype.bitmap.apply(this, args);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeStyle\n */\nexport class StrokeStyle {\n\t/**\n\t * @constructor\n\t * @param {Number} [width=1]\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t * @type {String}\n\t */\n\tconstructor (width, caps = \"butt\", joints = \"miter\", miterLimit = 10, ignoreScale = false) {\n\t\t/**\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\t\tthis.width = width;\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @property caps\n\t\t * @type String\n\t\t */\n\t\tthis.caps = caps;\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @property joints\n\t\t * @type String\n\t\t */\n\t\tthis.joints = joints;\n\t\t/**\n\t\t * @property miterLimit\n\t\t * @type Number\n\t\t */\n\t\tthis.miterLimit = miterLimit;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineWidth = this.width;\n\t\tctx.lineCap = (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]);\n\t\tctx.lineJoin = (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]);\n\t\tctx.miterLimit = this.miterLimit;\n\t\tctx.ignoreScale = this.ignoreScale;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeDash\n */\nexport class StrokeDash {\n\t/**\n\t * @constructor\n\t * @param {Array} [segments=[]]\n\t * @param {Number} [offset=0]\n\t */\n \tconstructor (segments = StrokeDash.EMPTY_SEGMENTS, offset = 0) {\n\t\t/**\n\t\t * @property segments\n\t\t * @type Array\n\t\t */\n\t \tthis.segments = segments;\n\t\t/**\n\t\t * @property offset\n\t\t * @type Number\n\t\t */\n\t \tthis.offset = offset;\n \t}\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * Used instead of [] to reduce churn.\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t */\n\tstatic get EMPTY_SEGMENTS () { return _EMPTY_SEGMENTS; }\n\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tif (ctx.setLineDash) { // feature detection.\n\t \t\tctx.setLineDash(this.segments);\n\t \t\tctx.lineDashOffset = this.offset;\n\t \t}\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class RoundRect\n */\nexport class RoundRect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t */\n \tconstructor (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n\t\t/**\n\t\t * @property radiusTL\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusTL = radiusTL;\n\t\t/**\n\t\t * @property radiusTR\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusTR = radiusTR;\n\t\t/**\n\t\t * @property radiusBR\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusBR = radiusBR;\n\t\t/**\n\t\t * @property radiusBL\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusBL = radiusBL;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet max = (w<h?w:h)/2;\n\t \tlet mTL=0, mTR=0, mBR=0, mBL=0;\n\t \tlet x = this.x, y = this.y, w = this.w, h = this.h;\n\t \tlet rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t \tif (rTL < 0) { rTL *= (mTL=-1); }\n\t \tif (rTL > max) { rTL = max; }\n\t \tif (rTR < 0) { rTR *= (mTR=-1); }\n\t \tif (rTR > max) { rTR = max; }\n\t \tif (rBR < 0) { rBR *= (mBR=-1); }\n\t \tif (rBR > max) { rBR = max; }\n\t \tif (rBL < 0) { rBL *= (mBL=-1); }\n\t \tif (rBL > max) { rBL = max; }\n\n\t \tctx.moveTo(x+w-rTR, y);\n\t \tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t \tctx.lineTo(x+w, y+h-rBR);\n\t \tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t \tctx.lineTo(x+rBL, y+h);\n\t \tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t \tctx.lineTo(x, y+rTL);\n\t \tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Circle\n */\nexport class Circle {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t */\n \tconstructor (x, y, radius) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Ellipse\n */\nexport class Ellipse {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet w = this.w, h = this.h;\n\n\t \tlet k = 0.5522848;\n\t \tlet ox = (w / 2) * k;\n\t \tlet oy = (h / 2) * k;\n\t \tlet xe = x + w;\n\t \tlet ye = y + h;\n\t \tlet xm = x + w / 2;\n\t \tlet ym = y + h / 2;\n\n\t \tctx.moveTo(x, ym);\n\t \tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t \tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t \tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t \tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class PolyStar\n */\nexport class PolyStar {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} [pointSize=0]\n\t * @param {Number} [angle=0]\n\t */\n \tconstructor (x, y, radius, sides, pointSize = 0, angle = 0) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property sides\n\t\t * @type Number\n\t\t */\n\t \tthis.sides = sides;\n\t\t/**\n\t\t * @property pointSize\n\t\t * @type Number\n\t\t */\n\t \tthis.pointSize = pointSize;\n\t\t/**\n\t\t * @property angle\n\t\t * @type Number\n\t\t */\n\t \tthis.angle = angle;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet radius = this.radius;\n\t \tlet angle = this.angle/180*Math.PI;\n\t \tlet sides = this.sides;\n\t \tlet ps = 1-this.pointSize;\n\t \tlet a = Math.PI/sides;\n\n\t \tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \tfor (let i = 0; i < sides; i++) {\n\t \t\tangle += a;\n\t \t\tif (ps != 1) {\n\t \t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t \t\t}\n\t \t\tangle += a;\n\t \t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \t}\n\t \tctx.closePath();\n \t}\n}\n\n// static properties:\n/**\n * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n * unnecessary instantiation.\n * @property beginCmd\n * @type {Graphics.BeginPath}\n * @static\n * @readonly\n */\n/**\n * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n * @property BASE_64\n * @static\n * @final\n * @readonly\n * @type {Object}\n */\n/**\n * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"butt\", 1 to \"round\", and 2 to \"square\".\n * For example, to set the line caps to \"square\":\n *\n *      myGraphics.ss(16, 2);\n *\n * @property STROKE_CAPS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n * For example, to set the line joints to \"bevel\":\n *\n *      myGraphics.ss(16, 0, 2);\n *\n * @property STROKE_JOINTS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * @property _ctx\n * @static\n * @protected\n * @type {CanvasRenderingContext2D}\n */\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\tGraphics.beginCmd = new BeginPath();\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\tGraphics.EMPTY_SEGMENTS = [];\n}\n","/*\n* @license MovieClip\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Tween from \"@createjs/tweenjs/src/Tween\";\nimport Timeline from \"@createjs/tweenjs/src/Timeline\";\n\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * <h4>Example</h4>\n * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvas\");\n *      createjs.Ticker.addEventListener(\"tick\", stage);\n *\n *      var mc = new createjs.MovieClip(null, 0, true, {start:20});\n *      stage.addChild(mc);\n *\n *      var child1 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#999999\")\n *              .drawCircle(30,30,30));\n *      var child2 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n *              .drawCircle(30,30,30));\n *\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child1)\n *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child2)\n *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n *\n *      mc.gotoAndPlay(\"start\");\n *\n * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n *\n * @class MovieClip\n * @extends Container\n * @module EaselJS\n */\nexport default class MovieClip extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n   * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n   * specified.<UL>\n   *    <LI> `mode`</LI>\n   *    <LI> `startPosition`</LI>\n   *    <LI> `frameBounds`</LI>\n   * </UL>\n   *\n   * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n   * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t */\n\tconstructor ({ mode = MovieClip.INDEPENDENT, startPosition = 0, loop = -1, paused = false, frameBounds = null, labels = null }) {\n\t\tsuper();\n\t\t!MovieClip.inited && MovieClip.init();\n\n// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.mode = mode;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition;\n\n\t\t/**\n    * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n    * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n\t\tthis.loop = loop === true ? -1 : (loop || 0);\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * <h4>Example</h4>\n     *\n     *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     *      var mc = new createjs.MovieClip();\n     *      mc.timeline.addTween(tween);\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     *      var tween = createjs.Tween.get(target).to({_off:false})\n     *          .wait(1).to({_off:true})\n     *          .wait(1).to({_off:false});\n     *\n     * @property timeline\n     * @type Timeline\n\t\t * @default Timeline\n\t\t */\n\t\tthis.timeline = new Timeline({ useTicks: true, paused: true, mode, startPosition, loop, frameBounds, labels });\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = paused;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.framerate = null;\n\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t}\n\n// static methods:\n\tstatic init () {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t}\n\n// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n// accessor properties:\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * Shortcut to TweenJS: Timeline.getLabels();\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget labels () {\n\t\treturn this.timeline.labels;\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\n\t * for more information.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t */\n\tget currentLabel () {\n\t\treturn this.timeline.getCurrentLabel();\n\t}\n\n\t /**\n \t * Returns the duration of this MovieClip in seconds or ticks.\n \t * @property duration\n \t * @type {Number}\n \t * @readonly\n \t */\n \tget duration () {\n\t\treturn this.timeline.duration;\n\t}\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget totalFrames () {\n\t\treturn this.duration;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.drawCache(ctx, ignoreCache)) { return true; }\n    this._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet INDEPENDENT = MovieClip.INDEPENDENT;\n\t\tif (this.mode !== INDEPENDENT) { return; } // update happens in draw for synched clips\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tlet o = this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) {\n\t\t\tif (o.mode === INDEPENDENT) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\n\t\tif (this.paused) { return; }\n\t\t// calculate how many frames to advance:\n\t\tlet t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n\t\tlet frames = t | 0;\n\t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n\t\twhile (frames--) {\n\t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n\t\t}\n\t}\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow \"MovieClip cannot be cloned.\";\n\t}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tthis.advance(evtObj && evtObj.delta);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t}\n\n\t/**\n\t * @method _reset\n\t * @private\n\t */\n\t_reset () {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * @method _updateTimeline\n\t * @param {Number} rawPosition\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t */\n\t_updateTimeline (rawPosition, jump) {\n\t\tlet synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n\t\tif (rawPosition < 1) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t}\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n\t_renderFirstFrame () {\n\t\tconst tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t}\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t */\n\t_resolveState () {\n\t\tlet tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\n\t\tfor (let n in this._managed) { this._managed[n] = 1; }\n\n\t\tlet tweens = tl.tweens;\n\t\tfor (let tween of tweens) {\n\t\t\tlet target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\t\t\tlet offset = tween._stepPosition;\n\n\t\t\tif (target instanceof DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tlet kids = this.children;\n\t\tfor (let i=kids.length-1; i>=0; i--) {\n\t\t\tlet id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t */\n\t_setState (state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (let i = state.length - 1; i >= 0; i--) {\n\t\t\tlet o = state[i];\n\t\t\tlet target = o.t;\n\t\t\tlet props = o.p;\n\t\t\tfor (let n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t */\n\t_addManagedChild (child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child, 0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = this.getBounds();\n\t\tif (!bounds && this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn super._getBounds(matrix, ignoreTransform);\n\t}\n\n}\n\n// static constants:\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @property INDEPENDENT\n * @static\n * @type String\n * @default \"independent\"\n * @readonly\n */\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @property SINGLE_FRAME\n * @static\n * @type String\n * @default \"single\"\n * @readonly\n */\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @property SYNCHED\n * @static\n * @type String\n * @default \"synched\"\n * @readonly\n */\n{\n\tMovieClip.INDEPENDENT = \"independent\";\n\tMovieClip.SINGLE_FRAME = \"single\";\n\tMovieClip.SYNCHED = \"synched\";\n\tMovieClip.inited = false;\n}\n\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n * property from tweening.\n * @class MovieClipPlugin\n * @todo update to new plugin model\n * @static\n * @private\n */\nclass MovieClipPlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n\t}\n\n\t/**\n\t * @method install\n\t * @private\n\t */\n\tstatic install () {\n\t\tTween._installPlugin(MovieClipPlugin);\n\t}\n\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t */\n\tstatic init (tween, prop, value) {\n\t\treturn value;\n\t}\n\n\t/**\n\t * @method tween\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio === 1 ? endValues[prop] : startValues[prop]);\n\t}\n\n}\n\n/**\n * @property priority\n * @static\n */\n{\n\tMovieClipPlugin.priority = 100;\n}\n","/*\n* @license Shadow\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n * via its <code>shadow</code> property.\n *\n * <h4>Example</h4>\n *\n *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n *\n * @class Shadow\n * @module EaselJS\n */\nexport default class Shadow {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t */\n\tconstructor (color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n// public properties:\n\t\t/**\n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default black\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX;\n\n\t\t/**\n\t\t * The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY;\n\n\t\t/**\n\t\t * The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t */\n\tclone () {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t}\n\n}\n\n// static public properties:\n/**\n * An identity shadow object (all properties are set to 0).\n * @property identity\n * @type Shadow\n * @static\n * @final\n * @readonly\n */\n{\n\tShadow.identity = new Shadow(\"transparent\");\n}\n","/*\n* @license Shape\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Graphics from \"./Graphics\";\n\n/**\n * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not\n * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n * rendering cost.\n *\n * <h4>Example</h4>\n *\n *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *      var shape = new createjs.Shape(graphics);\n *\n *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n *      var shape = new createjs.Shape();\n *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @class Shape\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Shape extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Graphics} [graphics=Graphics] Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t */\n\tconstructor (graphics = new Graphics()) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t */\n\t\tthis.graphics = graphics;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t */\n\tclone (recursive = false) {\n\t\tlet g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t}\n\n}\n","/*\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n *\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @class SpriteSheet\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheet extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n   * @param {Object} data An object describing the SpriteSheet data.\n\t */\n\tconstructor (data) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t */\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._margin = 0;\n\n\t\tthis._parseData(data);\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget animations () {\n\t\treturn this._animations.slice();\n\t}\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tgetNumFrames (animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tlet data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t */\n\tgetAnimation (name) {\n\t\treturn this._data[name];\n\t}\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t */\n\tgetFrame (frameIndex) {\n\t\tlet frame;\n\t\tif (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle=Rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetFrameBounds (frameIndex, rectangle = new Rectangle()) {\n\t\tlet frame = this.getFrame(frameIndex);\n\t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO-ES6: Add throw docs\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t */\n\t_parseData (data) {\n\t\tif (data == null) { return; }\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images) {\n\t\t\tfor (let img of data.images) {\n\t\t\t\tlet a = this._images = [];\n\t\t\t\tlet src;\n\t\t\t\tif (typeof img === \"string\") {\n\t\t\t\t\tsrc = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\timg.onload = () => this._handleImageLoad(src);\n\t\t\t\t\timg.onerror = () => this._handleImageError(src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames != null) {\n\t\t\tif (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\tfor (let arr of data.frames) {\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet o = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount === 0) { this._calculateFrames(); }\n\t\t\t}\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif (data.animations != null) {\n\t\t\tthis._data = {};\n\t\t\tlet o = data.animations;\n\t\t\tfor (let name in o) {\n\t\t\t\tlet anim = { name };\n\t\t\t\tlet obj = o[name];\n\t\t\t\tlet a;\n\t\t\t\tif (typeof obj === \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length === 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (let i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tlet frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames === \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next === name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t */\n\t _handleImageLoad (src) {\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\t_handleImageError (src) {\n\t\tlet errorEvent = new Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t */\n\t_calculateFrames () {\n\t\tif (this._frames || this._frameWidth === 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tlet maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tlet frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tlet spacing = this._spacing, margin = this._margin;\n\n\t\timgLoop:\n\t\tfor (let i=0, imgs=this._images, l=imgs.length; i<l; i++) {\n\t\t\tlet img = imgs[i],\n\t\t\t\timgW = (img.width||img.naturalWidth),\n\t\t\t\timgH = (img.height||img.naturalHeight);\n\n\t\t\tlet y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tlet x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\timage: img,\n\t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n * when doing on-demand rendering.\n * @event getframe\n * @param {Number} index The frame index.\n * @param {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n * event once all images are finished processing, even if an error is encountered.\n * @event error\n * @param {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n","/*\n* @license Text\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\nconst _V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\nimport DisplayObject from \"./DisplayObject\";\n\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * <h4>Example</h4>\n *\n *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n *      text.x = 100;\n *      text.textBaseline = \"alphabetic\";\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n * @class Text\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Text extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t */\n\tconstructor (text, font, color) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t */\n\t\tthis.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t */\n\t\tthis.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t */\n\t\tthis.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t */\n\t\tthis.lineWidth = null;\n\t}\n\n// static constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get H_OFFSETS () { return _H_OFFSETS; }\n\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get V_OFFSETS () { return _V_OFFSETS; }\n\n// public methods:\n \t/**\n \t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n \t * This does not account for whether it would be visible within the boundaries of the stage.\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method isVisible\n \t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n \t */\n \tisVisible () {\n \t\tlet hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n \t}\n\n \t/**\n \t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n \t * Returns true if the draw was handled (useful for overriding functionality).\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method draw\n \t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n \t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n \t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n \t * into itself).\n \t */\n \tdraw (ctx, ignoreCache) {\n \t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n \t\tlet col = this.color || \"#000\";\n \t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n \t\telse { ctx.fillStyle = col; }\n\n \t\tthis._drawText(this._prepContext(ctx));\n \t\treturn true;\n \t}\n\n \t/**\n \t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n \t * @method getMeasuredWidth\n \t * @return {Number} The measured, untransformed width of the text.\n \t */\n \tgetMeasuredWidth () {\n \t\treturn this._getMeasuredWidth(this.text);\n \t}\n\n \t/**\n \t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n \t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n \t * @method getMeasuredLineHeight\n \t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n \t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n \t */\n \tgetMeasuredLineHeight () {\n \t\treturn this._getMeasuredWidth(\"M\")*1.2;\n \t}\n\n \t/**\n \t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n \t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n \t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n \t * @method getMeasuredHeight\n \t * @return {Number} The approximate height of the untransformed multi-line text.\n \t */\n \tgetMeasuredHeight () {\n \t\treturn this._drawText(null, {}).height;\n \t}\n\n \t/**\n \t * Docced in superclass.\n \t */\n \tgetBounds () {\n \t\tlet rect = super.getBounds();\n \t\tif (rect) { return rect; }\n \t\tif (this.text == null || this.text === \"\") { return null; }\n \t\tlet o = this._drawText(null, {});\n \t\tlet w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n \t\tlet x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n \t\tlet y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._rectangle.setValues(x, y, w, o.height);\n \t}\n\n \t/**\n \t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n \t * of the drawn text. The lines property contains an array of strings, one for\n \t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n \t * whitespace removed.\n \t * @method getMetrics\n \t * @return {Object} An object with width, height, and lines properties.\n \t */\n \tgetMetrics () {\n \t\tlet o = {lines:[]};\n \t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n \t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._drawText(null, o, o.lines);\n \t}\n\n \t/**\n \t * Returns a clone of the Text instance.\n \t * @method clone\n \t * @return {Text} a clone of the Text instance.\n \t */\n \tclone () {\n \t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n \t}\n\n \t/**\n \t * Returns a string representation of this object.\n \t * @method toString\n \t * @return {String} a string representation of the instance.\n \t */\n \ttoString () {\n \t\treturn `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n \t}\n\n// private methods:\n \t/**\n \t * @method _cloneProps\n \t * @param {Text} o\n \t * @protected\n \t * @return {Text} o\n \t */\n \t_cloneProps (o) {\n \t\tsuper._cloneProps(o);\n \t\to.textAlign = this.textAlign;\n \t\to.textBaseline = this.textBaseline;\n \t\to.maxWidth = this.maxWidth;\n \t\to.outline = this.outline;\n \t\to.lineHeight = this.lineHeight;\n \t\to.lineWidth = this.lineWidth;\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _getWorkingContext\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @return {CanvasRenderingContext2D}\n \t * @protected\n \t */\n \t_prepContext (ctx) {\n \t\tctx.font = this.font||\"10px sans-serif\";\n \t\tctx.textAlign = this.textAlign||\"left\";\n \t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t */\n \t_drawText (ctx, o, lines) {\n \t\tconst paint = !!ctx;\n \t\tif (!paint) {\n \t\t\tctx = Text._workingContext;\n \t\t\tctx.save();\n \t\t\tthis._prepContext(ctx);\n \t\t}\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\n \t\tlet maxW = 0, count = 0;\n \t\tlet hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n \t\tfor (let str of hardLines) {\n \t\t\tlet w = null;\n\n \t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n \t\t\t\t// text wrapping:\n \t\t\t\tlet words = str.split(/(\\s)/);\n \t\t\t\tstr = words[0];\n \t\t\t\tw = ctx.measureText(str).width;\n\n\t\t\t\tconst l = words.length;\n \t\t\t\tfor (let i=1; i<l; i+=2) {\n \t\t\t\t\t// Line needs to wrap:\n \t\t\t\t\tlet wordW = ctx.measureText(words[i] + words[i+1]).width;\n \t\t\t\t\tif (w + wordW > this.lineWidth) {\n \t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\t\t\t\tif (lines) { lines.push(str); }\n \t\t\t\t\t\tif (w > maxW) { maxW = w; }\n \t\t\t\t\t\tstr = words[i+1];\n \t\t\t\t\t\tw = ctx.measureText(str).width;\n \t\t\t\t\t\tcount++;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tstr += words[i] + words[i+1];\n \t\t\t\t\t\tw += wordW;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n\n \t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\tif (lines) { lines.push(str); }\n \t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n \t\t\tif (w > maxW) { maxW = w; }\n \t\t\tcount++;\n \t\t}\n\n \t\tif (o) {\n \t\t\to.width = maxW;\n \t\t\to.height = count*lineHeight;\n \t\t}\n \t\tif (!paint) { ctx.restore(); }\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _drawTextLine\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @param {String} text\n \t * @param {Number} y\n \t * @protected\n \t */\n \t_drawTextLine (ctx, text, y) {\n \t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n \t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n \t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n \t}\n\n \t/**\n \t * @method _getMeasuredWidth\n \t * @param {String} text\n \t * @protected\n \t */\n \t_getMeasuredWidth (text) {\n \t\tlet ctx = Text._workingContext;\n \t\tctx.save();\n \t\tlet w = this._prepContext(ctx).measureText(text).width;\n \t\tctx.restore();\n \t\treturn w;\n \t}\n\n}\n\n{\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t * @static\n\t */\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\tif (canvas.getContext) {\n\t\tText._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n * better performance.\n *\n * <h4>Example</h4>\n * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n *\n *       var box = new createjs.Shape();\n *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n *       box.graphics.drawRect(0, 0, 100, 100);\n *       box.cache(0, 0, 100, 100);\n *\n *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *       bmp.filters = [\n *           new createjs.AlphaMapFilter(box.cacheCanvas)\n *       ];\n *       bmp.cache(0, 0, 100, 100);\n *       stage.addChild(bmp);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMapFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMapFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t */\n\tconstructor (alphaMap) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.alphaMap = alphaMap;\n\n// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis._alphaMap = null;\n\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t */\n\t\tthis._mapData = null;\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * TODO: Docs\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tclone () {\n\t\tlet o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\t_applyFilter (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tlet data = imageData.data;\n\t\tlet map = this._mapData;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t */\n\t_prepAlphaMap () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap === this._alphaMap && this._mapData) { return true; }\n\t\tthis._mapData = null;\n\n\t\tlet map = this._alphaMap = this.alphaMap;\n\t\tlet canvas = map;\n\t\tlet ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n}\n","/*\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * <h4>Example</h4>\n * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n *\n *      var box = new createjs.Shape();\n *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n *      box.graphics.drawRect(0, 0, 100, 100);\n *      box.cache(0, 0, 100, 100);\n *\n *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *      bmp.filters = [\n *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n *      ];\n *      bmp.cache(0, 0, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMaskFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMaskFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t */\n\tconstructor (mask) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.mask = mask;\n\n\t\t/** docced in super class **/\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t}\n\n\t/**\n\t * Docced in superclass\n\t */\n\tclone () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t}\n\n\t/**\n\t * TODO: Doc\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n}\n","/*\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @module EaselJS\n */\n\nconst _MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\nconst _SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * <h4>Example</h4>\n * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n * method to account for the spread that the blur causes.\n *\n *      let shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      let blurFilter = new createjs.BlurFilter(5, 5, 1);\n *      shape.filters = [blurFilter];\n *      let bounds = blurFilter.getBounds();\n *\n *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class BlurFilter\n * @extends Filter\n */\nexport default class BlurFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t */\n\tconstructor (blurX = 0, blurY = 0, quality = 1) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurX = blurX;\n\t\tthis._blurXTable = [];\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurY = blurY;\n\t\tthis._blurYTable = [];\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t */\n\t\tthis._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n\t\tthis._lastQuality = null;\n\t\tthis.quality = this._quality | 0;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n\t\tthis.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t}\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get MUL_TABLE () { return _MUL_TABLE; }\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get SHG_TABLE () { return _SHG_TABLE; }\n\n// accessor properties:\n// TODO: Docs for these.\n\tget blurX () {\n\t\treturn this._blurX;\n\t}\n\n\tset blurX (blurX) {\n\t\tif (isNaN(blurX) || blurX < 0) { blurX = 0; }\n\t\tthis._blurX = blurX;\n\t}\n\n\tget blurY () {\n\t\treturn this._blurY;\n\t}\n\n\tset blurY (blurY) {\n\t\tif (isNaN(blurY) || blurY < 0){ blurY = 0; }\n\t\tthis._blurY = blurY;\n\t}\n\n\tget quality () {\n\t\treturn this._quality;\n\t}\n\n\tset quality (quality) {\n\t\tif (isNaN(quality) || quality < 0) { quality = 0; }\n\t\tthis._quality = quality | 0;\n\t}\n\n\tget _buildShader () {\n\t\tconst xChange = this._lastBlurX !== this._blurX;\n\t\tconst yChange = this._lastBlurY !== this._blurY;\n\t\tconst qChange = this._lastQuality !== this._quality;\n\t\tif (xChange || yChange || qChange) {\n\t\t\t\tif (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\t\tif (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\t\tthis._updateShader();\n\t\t\t\tthis._lastBlurX = this._blurX;\n\t\t\t\tthis._lastBlurY = this._blurY;\n\t\t\t\tthis._lastQuality = this._quality;\n\t\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t}\n\n\tset _builtShader (value) {\n\t\tthis._compiledShader;\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tgetBounds (rect) {\n\t\tlet x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tlet q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass\n\t */\n\t_updateShader () {\n\t\tlet result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t}\n\t/**\n\t * Docced in superclass\n\t */\n\t_getTable (spread) {\n\t\tconst EDGE = 4.2;\n\t\tif (spread <= 1) { return [1]; }\n\n\t\tlet result = [];\n\t\tlet count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tlet adjust = (count/2)|0;\n\t\tfor (let i = -adjust; i<=adjust; i++) {\n\t\t\tlet x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tlet factor = result.reduce((a, b) => a + b, 0);\n\t\treturn result.map(currentValue => currentValue / factor);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tlet radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX === 0 && radiusY === 0) return false;\n\n\t\tlet iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tlet px = imageData.data;\n\t\tlet x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tlet divx = (radiusX + radiusX + 1) | 0;\n\t\tlet divy = (radiusY + radiusY + 1) | 0;\n\t\tlet w = imageData.width | 0;\n\t\tlet h = imageData.height | 0;\n\n\t\tlet w1 = (w - 1) | 0;\n\t\tlet h1 = (h - 1) | 0;\n\t\tlet rxp1 = (radiusX + 1) | 0;\n\t\tlet ryp1 = (radiusY + 1) | 0;\n\n\t\tlet ssx = {r:0,b:0,g:0,a:0};\n\t\tlet sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tlet ssy = {r:0,b:0,g:0,a:0};\n\t\tlet sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tlet si = null;\n\n\n\t\tlet mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tlet stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tlet mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tlet sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tlet ms = mtx;\n\t\t\tlet ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a color transform to DisplayObjects.\n *\n * <h4>Example</h4>\n * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      shape.filters = [\n *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n *      ];\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorFilter\n * @extends Filter\n */\nexport default class ColorFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t */\n\tconstructor (redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.redMultiplier = redMultiplier;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.greenMultiplier = greenMultiplier;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.blueMultiplier = blueMultiplier;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.redOffset = redOffset;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.greenOffset = greenOffset;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.blueOffset = blueOffset;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaOffset = alphaOffset;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorMatrix\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nconst _DELTA_INDEX = [\n \t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n \t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n \t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n \t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n \t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n \t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n \t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n \t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n \t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n \t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n \t10.0\n];\nconst _IDENTITY_MATRIX = [\n \t1,0,0,0,0,\n \t0,1,0,0,0,\n \t0,0,1,0,0,\n \t0,0,0,1,0,\n \t0,0,0,0,1\n];\nconst _LENGTH = 25;\n\n/**\n * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n * Most methods return the instance to facilitate chained calls.\n *\n * <h4>Example</h4>\n *\n *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n * for an example of how to use ColorMatrix to change a DisplayObject's color.\n * @class ColorMatrix\n */\nexport default class ColorMatrix {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t */\n\tconstructor (brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get DELTA_INDEX () { return _DELTA_INDEX; }\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get IDENTITY_MATRIX () { return _IDENTITY_MATRIX; }\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t */\n\tstatic get LENGTH () { return _LENGTH; }\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetColor (brightness, contrast, saturation, hue) {\n\t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\treset () {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t}\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustColor (brightness, contrast, saturation, hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t}\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustBrightness (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustContrast (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x === 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustSaturation (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tlet lumR = 0.3086;\n\t\tlet lumG = 0.6094;\n\t\tlet lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustHue (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 180)/180*Math.PI;\n\t\tlet cosVal = Math.cos(value);\n\t\tlet sinVal = Math.sin(value);\n\t\tlet lumR = 0.213;\n\t\tlet lumG = 0.715;\n\t\tlet lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tconcat (matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t */\n\tclone () {\n\t\treturn (new ColorMatrix()).copy(this);\n\t}\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t */\n\ttoArray () {\n\t\tlet arr = [];\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tcopy (matrix) {\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_multiplyMatrix (matrix) {\n\t\tlet col = [];\n\n\t\tfor (let i=0;i<5;i++) {\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tlet val=0;\n\t\t\t\tfor (let k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t */\n\t_cleanValue (value, limit) {\n\t\treturn Math.min(limit, Math.max(-limit, value));\n\t}\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_fixMatrix (matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t}\n\n}\n","/*\n* @license ColorMatrixFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n *      shape.filters = [\n *          new createjs.ColorMatrixFilter(matrix)\n *      ];\n *\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorMatrixFilter\n * @extends Filter\n */\nexport default class ColorMatrixFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t */\n\tconstructor (matrix) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t */\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tlet mat = this.matrix;\n\t\tlet colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tlet r,g,b,a;\n\t\tlet mtx = this.matrix;\n\t\tlet m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tlet m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tlet m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tlet m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n *\n *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n *      myInstance.addEventListener(\"click\", handleClick);\n *      function handleClick(event) {\n *          // Click Happened.\n *      }\n *\n * @class ButtonHelper\n * @module EaselJS\n */\nexport default class ButtonHelper {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t */\n\tconstructor (target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.overLabel = overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.outLabel = outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.downLabel = downLabel == null;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t */\n\t\tthis.play = play;\n\n\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isPressed = false;\n\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isOver = false;\n\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._enabled = false;\n\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t */\n\tget enabled () {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled (enabled) {\n\t\tif (enabled === this._enabled) { return; }\n\t\tlet o = this.target;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t */\n\thandleEvent (evt) {\n\t\tlet label, t = this.target, type = evt.type;\n\t\tif (type === \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type === \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type === \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t}\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t */\n\t_reset () {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tlet p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t}\n\n}\n","/*\n* @license Touch\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n * @module EaselJS\n */\nexport default class Touch {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t */\n\tstatic isSupported () {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t}\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t */\n\tstatic enable (stage, singleTouch = false, allowDefault = false) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t */\n\tstatic disable (stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\n\t\tdelete stage.__touch;\n\t}\n\n\n// private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IOS_handleEvent(stage, e);\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_disable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tlet f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t */\n\tstatic _IOS_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tlet touches = e.changedTouches;\n\t\tlet type = e.type;\n\t\tconst l = touches.length;\n\t\tfor (let touch of touches) {\n\t\t\tlet id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type === \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IE_handleEvent(stage,e);\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t}\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_disable (stage) {\n\t\tlet f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t */\n\tstatic _IE_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tlet type = e.type;\n\t\tlet id = e.pointerId;\n\t\tlet ids = stage.__touch.activeIDs;\n\n\t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\"\n\t\t\t\t\t|| type === \"pointerup\" || type === \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleStart (stage, id, e, x, y) {\n\t\tlet props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tlet ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleMove (stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t */\n\tstatic _handleEnd (stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tlet props = stage.__touch;\n\t\tlet ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t}\n\n}\n","/*\n* @license SpriteSheetBuilder\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\nconst _ERR_RUNNING = \"a build is already running\";\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Rectangle from \"../geom/Rectangle\";\nimport SpriteSheet from \"../display/SpriteSheet\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n * @class SpriteSheetBuilder\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheetBuilder extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t */\n\tconstructor (framerate = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t */\n\t\tthis.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t */\n\t\tthis.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t*/\n\t\tthis.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t */\n\t\tthis.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate;\n\n// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = [];\n\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = {};\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._timerID = null;\n\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._scale = 1;\n\t}\n\n// constants:\n\tstatic get ERR_DIMENSIONS () { return _ERR_DIMENSIONS; }\n\tstatic get ERR_RUNNING () { return _ERR_RUNNING; }\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t */\n\taddFrame (source, sourceRect, scale = 1, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect) { return null; }\n\t\treturn this._frames.push({source, sourceRect:rect, scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t}\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t */\n\taddAnimation (name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames, next, speed};\n\t}\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t */\n\taddMovieClip (source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rects = source.frameBounds;\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect && !rects) { return; }\n\n\t\tlet baseFrameIndex = this._frames.length;\n\t\tconst duration = source.timeline.duration;\n\t\tfor (let i=0; i<duration; i++) {\n\t\t\tlet r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i, f:setupFunction, d:setupData});\n\t\t}\n\t\tconst labels = source.timeline._labels;\n\t\tlet lbls = [];\n\t\tfor (let n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort((a, b) => a.index-b.index);\n\t\t\tfor (let i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tlet label = lbls[i].label;\n\t\t\t\tlet start = baseFrameIndex+lbls[i].index;\n\t\t\t\tlet end = baseFrameIndex+((i === l-1) ? duration : lbls[i+1].index);\n\t\t\t\tlet frames = [];\n\t\t\t\tfor (let i=start; i<end; i++) { frames.push(i); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t */\n\tbuild () {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t}\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t */\n\tbuildAsync (timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tthis._timerID = setTimeout(() => this._run(), 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t}\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t */\n\tstopAsync () {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t}\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow \"SpriteSheetBuilder cannot be cloned.\";\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t */\n\t_startBuild () {\n\t\tlet pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tlet dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tlet frames = this._frames.slice();\n\t\tframes.sort((a, b) => (a.height<=b.height) ? -1 : 1);\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tlet y=0, x=0;\n\t\tlet img = 0;\n\t\twhile (frames.length) {\n\t\t\tlet o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tlet canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_setupMovieClipFrame (source, data) {\n\t\tlet ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t}\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_getSize (size, max) {\n\t\tlet pow = 4;\n\t\twhile (Math.pow(2, ++pow) < size) {}\n\t\treturn Math.min(max, Math.pow(2, pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_fillRow (frames, y, img, dataFrames, pad) {\n\t\tlet w = this.maxWidth;\n\t\tlet maxH = this.maxHeight;\n\t\ty += pad;\n\t\tlet h = maxH-y;\n\t\tlet x = pad;\n\t\tlet height = 0;\n\t\tfor (let i=frames.length-1; i>=0; i--) {\n\t\t\tlet frame = frames[i];\n\t\t\tlet sc = this._scale*frame.scale;\n\t\t\tlet rect = frame.sourceRect;\n\t\t\tlet source = frame.source;\n\t\t\tlet rx = Math.floor(sc*rect.x-pad);\n\t\t\tlet ry = Math.floor(sc*rect.y-pad);\n\t\t\tlet rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tlet rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t}\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t */\n\t_endBuild () {\n\t\tthis.spriteSheet = new SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t}\n\n\t/**\n\t * @method _run\n\t * @protected\n\t */\n\t_run () {\n\t\tlet ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tlet t = (new Date()).getTime()+ts;\n\t\tlet complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tthis._timerID = setTimeout(() => this._run(), 50-ts);\n\t\t}\n\t\tlet p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tlet evt = new Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t}\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t */\n\t_drawNext () {\n\t\tlet frame = this._frames[this._index];\n\t\tlet sc = frame.scale*this._scale;\n\t\tlet rect = frame.rect;\n\t\tlet sourceRect = frame.sourceRect;\n\t\tlet canvas = this._data.images[frame.img];\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when a build completes.\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event progress\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n","/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n * @class SpriteSheetUtils\n * @static\n * @module EaselJS\n */\nexport default class SpriteSheetUtils {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t * @method extractFrame\n\t * @static\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t*/\n\tstatic extractFrame (spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tlet data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tlet r = data.rect;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tlet img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t}\n\n\t/**\n\t * Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\n\t * JPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\n\t * images (those with detail that lend itself to JPEG compression) this can provide significant file size savings\n\t * versus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).\n\t * @method mergeAlpha\n\t * @static\n\t * @param {HTMLImageElement} rbgImage The image (or canvas) containing the RGB channels to use.\n\t * @param {HTMLImageElement} alphaImage The image (or canvas) containing the alpha channel to use.\n\t * @param {HTMLCanvasElement} [canvas] If specified, this canvas will be used and returned. If not, a new canvas will be created.\n\t * @return {HTMLCanvasElement} A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.\n\t * @deprecated Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.\n\t*/\n\tstatic mergeAlpha (rgbImage, alphaImage, canvas) {\n\t\tif (!canvas) { canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\n\t\tcanvas.width = Math.max(alphaImage.width, rgbImage.width);\n\t\tcanvas.height = Math.max(alphaImage.height, rgbImage.height);\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tctx.save();\n\t\tctx.drawImage(rgbImage,0,0);\n\t\tctx.globalCompositeOperation = \"destination-in\";\n\t\tctx.drawImage(alphaImage,0,0);\n\t\tctx.restore();\n\t\treturn canvas;\n\t}\n\n\n// private static methods:\n\tstatic _flip (spriteSheet, count, h, v) {\n\t\tlet imgs = spriteSheet._images;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tlet ctx = SpriteSheetUtils._workingContext;\n\t\tconst il = imgs.length/count;\n\t\tfor (let i=0; i<il; i++) {\n\t\t\tlet src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tlet img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tlet frames = spriteSheet._frames;\n\t\tconst fl = frames.length/count;\n\t\tfor (let i=0; i<fl; i++) {\n\t\t\tlet src = frames[i];\n\t\t\tlet rect = src.rect.clone();\n\t\t\tlet img = imgs[src.image.__tmp+il*count];\n\n\t\t\tlet frame = {image:img,rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tlet sfx = `_${h?\"h\":\"\"}${v?\"v\":\"\"}`;\n\t\tlet names = spriteSheet._animations;\n\t\tlet data = spriteSheet._data;\n\t\tconst al = names.length/count;\n\t\tfor (let i=0; i<al; i++) {\n\t\t\tlet name = names[i];\n\t\t\tlet src = data[name];\n\t\t\tlet anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tlet frames = src.frames;\n\t\t\tfor (let i=0,l=frames.length;i<l;i++) {\n\t\t\t\tanim.frames.push(frames[i]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t}\n\n}\n\n// private static properties:\n/**\n * @property _workingCanvas\n * @static\n * @type HTMLCanvasElement | Object\n * @protected\n*/\n/**\n * @property _workingContext\n * @static\n * @type CanvasRenderingContext2D\n * @protected\n*/\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tSpriteSheetUtils._workingCanvas = canvas;\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet _alternateOutput = null;\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\n\n /**\n  * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n  * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n  * utilities.\n  * @class WebGLInspector\n  * @extends EventDispatcher\n  * @module EaselJS\n  */\nexport default class WebGLInspector extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {StageGL} stage The default stage to use when none is supplied.\n\t */\n\tconstructor (stage) {\n\t\tsuper();\n\n// private properties:\n\t\t/**\n\t\t * The internal reference to the default stage this Inspector is for.\n\t\t * @property _stage\n\t\t * @protected\n\t\t * @type {StageGL}\n\t\t */\n\t\tthis._stage = stage;\n\t}\n\n// static properties:\n\t/**\n\t * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n\t * Expects object with a \"log\" function that takes any number of params.\n\t * @property alternateOutput\n\t * @type {Console}\n\t * @default null\n\t * @static\n\t * @protected\n\t */\n\tstatic get alternateOutput () { return _alternateOutput; }\n\tstatic set alternateOutput (alternateOutput) { _alternateOutput = alternateOutput; }\n\n// static methods:\n\t/**\n\t * Utility function for use with {{#crossLink \"logDepth\"))((/crossLink}}. Logs an item's position and registration.\n\t * Useful to see if something is being forced off screen or has an integer position.\n\t * @method dispProps\n\t * @param {DisplayObject} item The item we're currently logging about.\n\t * @param {String} [prepend=\"\"] The string to show before the item, usually formatting for a tree view.\n\t * @static\n\t */\n\tstatic dispProps (item, prepend = \"\") {\n\t\tlet p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t\tlet r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\t\tWebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t}\n\n// private static methods:\n\t/**\n\t * Log with alternateOutput if available, defaulting to the console.\n\t * @method _log\n\t * @param {...*} info The info to log.\n\t * @static\n\t */\n\tstatic _log (...info) {\n\t\tif (WebGLInspector.alternateOutput) {\n\t\t\tWebGLInspector.alternateOutput.log(...info);\n\t\t} else {\n\t\t\tconsole.log(...info);\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Perform all of the logging reports at once.\n\t * @method log\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlog (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\t\tWebGLInspector._log(`Batches Per Draw: ${(stage._batchID/stage._drawID).toFixed(4)}`);\n\t\tthis.logContextInfo(stage._webGLContext);\n\t\tthis.logDepth(stage.children, \"\");\n\t\tthis.logTextureFill(stage);\n\t}\n\n\t/**\n\t * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring\n\t * rendering.\n\t * @method toggleGPUDraw\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t */\n\ttoggleGPUDraw (stage, enabled) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tif (enabled === undefined) {\n\t\t\tenabled = !!stage._drawBuffers_;\n\t\t}\n\n\t\tif (enabled && stage._drawBuffers_) {\n\t\t\tstage._drawBuffers = stage._drawBuffers_;\n\t\t\tstage._drawBuffers_ = undefined;\n\t\t} else {\n\t\t\tstage._drawBuffers_ = stage._drawBuffers;\n\t\t\tstage._drawBuffers = function _inspectorDrawBuffers (gl) {\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tWebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t * @method logDepth\n\t * @param {Array} [children=this._stage.children] The children array to walk through.\n\t * @param {String} [prepend=\"\"] What to prepend to this output from this point onwards.\n\t * @param {Function} [logFunc=WebGLInspector._log] Custom logging function, mainly for filtering or formatting output.\n\t */\n\tlogDepth (children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t\tif (!children) { children = this._stage.children; }\n\t\tconst l = children.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet child = children[i];\n\t\t\tlogFunc(`${prepend}-`, child);\n\t\t\tif (child.children && child.children.length) {\n\t\t\t\tthis.logDepth(child.children, `|${prepend}`, logFunc);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Examine the context and provide information about its capabilities.\n\t * @method logContextInfo\n\t * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t */\n\tlogContextInfo (gl) {\n\t\tif (!gl) { gl = this._stage._webGLContext; }\n\t\tlet data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE)/2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)/2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\t\tWebGLInspector._log(data);\n\t}\n\n\t/**\n\t * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t * in place.\n\t * @method logTextureFill\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlogTextureFill (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tlet dict = stage._textureDictionary;\n\t\tlet count = stage._batchTextureCount;\n\t\tWebGLInspector._log(`${textureMax}: ${count}`);\n\t\tlet output = [];\n\t\tfor (let n in dict) {\n\t\t\tlet str = n.replace(window.location.origin, \"\");\n\t\t\tlet tex = dict[n];\n\t\t\tlet shifted = tex._lastActiveIndex?tex._lastActiveIndex === tex._activeIndex:false;\n\t\t\toutput.push({src, element:tex, shifted});\n\t\t\ttex._lastActiveIndex = tex._activeIndex;\n\t\t}\n\n\t\toutput.sort((a,b) => {\n\t\t\tif (a.element._drawID === stage._drawID) { return 1; }\n\t\t\tif (a.element._drawID < b.element._drawID) { return -1; }\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst l = output.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet out = output[i];\n\t\t\tlet active = out.element._drawID === stage._drawID;\n\t\t\tWebGLInspector._log(`[${out.src}] ${active?\"ACTIVE\":\"stale\"} ${out.shifted?\"steady\":\"DRIFT\"}`, out.element);\n\t\t}\n\t}\n\n}\n"]}