{"version":3,"sources":["../../src/display/StageGL.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/Event.js","C:/Users/Patrick/Documents/Repos/CreateJS/EaselJS/node_modules/@createjs/core/src/events/EventDispatcher.js","../../src/utils/UID.js","../../src/geom/Point.js","../../src/geom/Matrix2D.js","../../src/geom/DisplayProps.js","../../src/geom/Rectangle.js","../../src/filters/Filter.js","../../src/filters/BitmapCache.js","../../src/display/DisplayObject.js","../../src/display/Container.js","../../src/events/MouseEvent.js","../../src/display/Stage.js","../../src/utils/VideoBuffer.js","../../src/display/Bitmap.js","../../src/display/Sprite.js","../../src/display/BitmapText.js","../../src/display/DOMElement.js","../../src/display/Graphics.js","../../src/display/MovieClip.js","../../src/display/Shadow.js","../../src/display/Shape.js","../../src/display/SpriteSheet.js","../../src/display/Text.js","../../src/filters/AlphaMapFilter.js","../../src/filters/AlphaMaskFilter.js","../../src/filters/BlurFilter.js","../../src/filters/ColorFilter.js","../../src/filters/ColorMatrix.js","../../src/filters/ColorMatrixFilter.js","../../src/ui/ButtonHelper.js","../../src/ui/Touch.js","../../src/utils/SpriteSheetBuilder.js","../../src/utils/SpriteSheetUtils.js","../../src/utils/WebGLInspector.js"],"names":["StageGL","Error","Event","type","bubbles","arguments","length","undefined","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","this","stopPropagation","stopImmediatePropagation","remove","clone","event","n","hasOwnProperty","set","props","toString","constructor","name","EventDispatcher","initialize","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","l","i","splice","eventObj","e","parent","top","list","captureListeners","o","slice","_nextID","UID","get","nextID","Point","x","y","setValues","copy","point","Matrix2D","a","b","c","d","tx","ty","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","Math","prependTransform","rotate","angle","skew","scale","translate","identity","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","delta","abs","PI","DisplayProps","visible","alpha","shadow","compositeOperation","Rectangle","width","height","extend","pad","left","bottom","right","rectangle","contains","union","rect","intersection","x1","y1","x2","y2","intersects","isEmpty","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","getBounds","shaderParamSetup","gl","stage","shaderProgram","applyFilter","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","_Filter","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","getFilterBounds","output","filters","filterCount","f","test","define","options","_options","_useWebGL","update","filterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","release","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","getCacheDataURL","toDataURL","draw","drawImage","setValue","window","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","_EventDispatcher","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","isVisible","ignoreCache","drawCache","cache","updateContext","mtx","graphics","getMatrix","transform","drawAsPath","clip","_snapToPixelEnabled","globalAlpha","_applyShadow","updateCache","uncache","getDataURL","localToGlobal","getConcatenatedMatrix","globalToLocal","localToLocal","getConcatenatedDisplayProps","hitTest","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","_tick","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","_MOUSE_EVENTS","value","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","_DisplayObject","children","mouseChildren","tickChildren","hasContent","child","addChild","Array","_len","_key","silent","_removeChildAt","indexOf","addChildAt","_len2","_key2","index","pop","removeChild","_len3","_key3","good","removeChildAt","indexes","_len4","_key4","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","mode","_getObjectsUnderPoint","recursive","_cloneChildren","mouse","activeListener","currentDepth","_testMask","result","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","_Event","Stage","_Container","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","tick","beginPath","clear","backgroundColor","mimeType","fillRect","dataURL","enableMouseOver","frequency","_testMouseOver","setInterval","_this2","min","enable","_eventListeners","t","_this3","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","nextStage","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","unshift","style","pointerId","VideoBuffer","video","readyState","_video","_canvas","_lastTime","_videoReady","bind","getImage","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","paused","currentAnimationFrame","framerate","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","play","stop","_goto","gotoAndStop","advance","time","fps","getFrameBounds","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","_maxPoolSize","_spritePool","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","ss","_getSpaceWidth","change","spaceW","lineH","pool","childIndex","numKids","sprite","hasSpace","charAt","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","getRGB","g","getHSL","hue","saturation","lightness","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","instructions","paramCount","params","base64","BASE_64","fi","pl","charCount","num","sign","apply","store","unstore","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","args","lineWidth","lineCap","STROKE_CAPS_MAP","lineJoin","STROKE_JOINTS_MAP","EMPTY_SEGMENTS","setLineDash","lineDashOffset","_EMPTY_SEGMENTS","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","_ref$mode","INDEPENDENT","startPosition","_ref$startPosition","loop","_ref$loop","_ref$paused","frameBounds","_ref$frameBounds","labels","_ref$labels","inited","init","timeline","Timeline","useTicks","actionsEnabled","autoReset","_this","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","install","positionOrLabel","_framerate","_updateTimeline","pos","resolve","_reset","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","_renderFirstFrame","tweens","_isArray","isArray","_iterator","_i","Symbol","iterator","tween","_ref2","passive","_stepPosition","_addManagedChild","_setState","state","_off","getCurrentLabel","duration","SYNCHED","MovieClipPlugin","installPlugin","prop","startValues","endValues","ratio","wait","priority","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","frameIndex","images","onload","_handleImageLoad","onerror","_handleImageError","_img","_ref","_isArray2","_iterator2","_i2","spacing","margin","count","_calculateFrames","animations","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgs","imgW","imgH","naturalHeight","imgLoop","_H_OFFSETS","start","center","_V_OFFSETS","hanging","middle","alphabetic","ideographic","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","H_OFFSETS","V_OFFSETS","getMetrics","lines","vOffset","substr","paint","_workingContext","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","HTMLCanvasElement","AlphaMaskFilter","_MUL_TABLE","_SHG_TABLE","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","_updateShader","replace","toFixed","_getTable","spread","EDGE","adjust","factor","reduce","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","xChange","yChange","qChange","_compiledShader","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","_DELTA_INDEX","_IDENTITY_MATRIX","_LENGTH","ColorMatrix","brightness","contrast","setColor","reset","adjustColor","IDENTITY_MATRIX","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","LENGTH","toArray","val","limit","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","label","__reset","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","disable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","_ERR_DIMENSIONS","_ERR_RUNNING","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","addFrame","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","setTimeout","_run","stopAsync","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","extractFrame","_workingCanvas","mergeAlpha","rgbImage","alphaImage","_flip","il","__tmp","fl","sfx","names","al","_alternateOutput","WebGLInspector","_stage","dispProps","item","_log","alternateOutput","log","_WebGLInspector$alter","_console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","toggleGPUDraw","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out"],"mappings":"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","file":"../easeljs-NEXT.js","sourcesContent":["/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass StageGL {\n\tconstructor () {\n\t\tthrow new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t}\n}\n\nexport default StageGL;\n","/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\nexport default Event;\n","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/*\n* @license UID\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet _nextID = 0;\n\n/**\n * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n * and should not be instantiated.\n * @class UID\n * @static\n * @module EaselJS\n */\nexport default class UID {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t */\n\tstatic get _nextID () { return _nextID; }\n\tstatic set _nextID (nextID) { _nextID = nextID; }\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t */\n\tstatic get () {\n\t\treturn UID._nextID++;\n\t}\n\n}\n","/*\n* @license Point\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * <h4>Example</h4>\n *\n *      var point = new createjs.Point(0, 100);\n *\n * @class Point\n */\nexport default class Point {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t */\n\tconstructor (x = 0, y = 0) {\n\t\tthis.setValues(x, y);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t */\n\tclone () {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t}\n\n}\n","/*\n* @license Matrix2D\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Point from \"./Point\";\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n *\n * @class Matrix2D\n */\nexport default class Matrix2D {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t */\n\tconstructor (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tsetValues (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprepend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet c1 = this.c;\n\t\tlet tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendMatrix (matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependMatrix (matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t *\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tappendTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c;\n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t *\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\trotate (angle) {\n\t\tangle *= Matrix2D.DEG_TO_RAD;\n\t\tlet cos = Math.cos(angle);\n\t\tlet sin = Math.sin(angle);\n\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tskew (skewX, skewY) {\n\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tscale (x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\ttranslate (x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tidentity () {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tinvert () {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tlet tx1 = this.tx;\n\t\tlet n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t */\n\tisIdentity () {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t}\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t */\n\tequals (matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t}\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t */\n\ttransformPoint (x, y, pt = new Point()) {\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t}\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} [target={}] The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tdecompose (target = {}) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tlet skewX = Math.atan2(-this.c, this.d);\n\t\tlet skewY = Math.atan2(this.b, this.a);\n\n\t\tlet delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tcopy (matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t */\n\tclone () {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t}\n\n}\n\n// constants:\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @property DEG_TO_RAD\n * @static\n * @final\n * @type Number\n * @readonly\n */\n// static public properties:\n/**\n * An identity matrix, representing a null transformation.\n * @property identity\n * @static\n * @type Matrix2D\n * @readonly\n */\n{\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\tMatrix2D.identity = new Matrix2D();\n}\n","/*\n* @license DisplayProps\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Matrix2D from \"./Matrix2D\";\n\n/**\n * Used for calculating and encapsulating display related properties.\n * @class DisplayProps\n */\nexport default class DisplayProps {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t */\n\tconstructor (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t */\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t */\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t */\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible;\n\t\tthis.alpha = alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new Matrix2D();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tappend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t *\n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t *\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tprepend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tidentity () {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t */\n\tclone () {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t}\n\n}\n","/*\n* @license Rectangle\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n *\n * <h4>Example</h4>\n *\n *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n *\n * @class Rectangle\n * @module EaselJS\n */\nexport default class Rectangle {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t */\n\tconstructor (x = 0, y = 0, width = 0, height = 0) {\n\t\tthis.setValues(x, y, width, height);\n\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t */\n\t}\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0, width = 0, height = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\textend (x, y, width = 0, height = 0) {\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tpad (top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t}\n\n\t/**\n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tcontains (x, y, width = 0, height = 0) {\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tunion (rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tintersection (rect) {\n\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t}\n\n\t/**\n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tintersects (rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t}\n\n\t/**\n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tisEmpty () {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t}\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t */\n\tclone () {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n *\n * <h4>Example</h4>\n *\n *      myInstance.filters = [\n *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *          new createjs.BlurFilter(5, 5, 10)\n *      ];\n *      myInstance.cache(0,0, 100, 100);\n *\n * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @class Filter\n */\nexport default class Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @property usesContext\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @property _multiPass\n\t\t * @type {Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @property VTX_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @property FRAG_SHADER\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t */\n\tgetBounds (rect) {\n\t\treturn rect;\n\t}\n\n\t/**\n\t * Assign any unique uniforms or other setup functionality here.\n\t * @method shaderParamSetup\n\t * @virtual\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\n\t}\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t */\n\tclone () {\n\t\treturn new Filter();\n\t}\n\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t */\n\t_applyFilter (imageData) {\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license Filter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\nimport StageGL from \"../display/StageGL\";\n\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n * method in {{#crossLink \"DisplayObject\"}}{{/crossLink}}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {{#crossLink \"DisplayObject/cacheCanvas:property\"}}{{/crossLink}}.\n *\n * Working with a singular image like a {{#crossLink \"Bitmap\"}}{{/crossLink}}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {{#crossLink \"Stage/update\"}}{{/crossLink}},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {{#crossLink \"Filter\"}}{{/crossLink}}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @class BitmapCache\n * @module EaselJS\n */\nexport default class BitmapCache extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @property width\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @property height\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t * @todo Should the width and height be protected?\n\t\t */\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @property x\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @property y\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t\t * with decreased scales can save on rendering performance.\n\t\t * @property scale\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/x:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offX\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The relative offset of the {{#crossLink \"BitmapCache/y:property\"}}{{/crossLink}} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @property offY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t\t * useful to see if a cache has been updated.\n\t\t * @property cacheID\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.cacheID = 0;\n\n// private properties:\n\t\t/**\n\t\t * Relative offset of the x position, used for drawing the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offX.\n\t\t */\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @property _filterOffY\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offY.\n\t\t */\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @property _cacheDataURLID\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @property _cacheDataURL\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawWidth\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the\n\t\t * actual value.\n\t\t * @property _drawHeight\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation\n\t\t * @property _boundRect\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default Rectangle\n\t\t */\n\t\tthis._boundRect = new Rectangle();\n\n\t}\n\n\t/**\n\t * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes\n\t * bounds.\n\t * @method getFilterBounds\n\t * @param {DisplayObject} target The object to check the filter bounds for.\n\t * @param {Rectangle} [output=Rectangle] Optional parameter, if provided then calculated bounds will be applied to that\n\t * object.\n\t * @return {Rectangle} a string representation of the instance.\n\t * @todo Please clarify if the return type is a Rectangle or string.\n\t * @static\n\t */\n\tstatic getFilterBounds (target, output = new Rectangle()) {\n\t\tlet filters = target.filters;\n\t\tlet filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor (let i=0; i<filterCount; i++) {\n\t\t\tlet f = filters[i];\n\t\t\tif (!f || !f.getBounds) { continue; }\n\t\t\tlet test = f.getBounds();\n\t\t\tif (!test) { continue; }\n\t\t\tif (i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n// public methods:\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}. Creates and sets properties needed\n\t * for a cache to function, and performs the initial update.\n\t * @method define\n\t * @param {DisplayObject} target The DisplayObject this cache is linked to.\n\t * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t * @param {Number} [width=1] The width of the cache region.\n\t * @param {Number} [height=1] The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t * and rotate cached elements with greater fidelity.\n\t * @param {Object} [options] When using things like {{#crossLink \"StageGL\"}}{{/crossLink}} there may be\n\t * extra caching opportunities or requirements.\n\t */\n\tdefine (target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t\tif (!target) { throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis._useWebGL = options !== undefined;\n\t\tthis.target = target;\n\n\t\tthis.width = width >= 1 ? width : 1;\n\t\tthis.height = height >= 1 ? height : 1;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scale = scale;\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Directly called via {{#crossLink \"DisplayObject/updateCache:method\"}}{{/crossLink}}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {{#crossLink \"BitmapCache/_updateSurface\"}}{{/crossLink}}\n\t * and {{#crossLink \"BitmapCache/_drawToCache\"}}{{/crossLink}} respectively.\n\t * @method update\n\t * @param {String} [compositeOperation=null] The DisplayObject this cache is linked to.\n\t */\n\tupdate (compositeOperation) {\n\t\tif (!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tlet filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tlet surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t}\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t * @method release\n\t */\n\trelease () {\n\t\tlet stage = this.target.stage;\n\t\tif (this._useWebGL && this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT) { this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else if (stage instanceof StageGL) {\n\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t}\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {{#crossLink \"BitmapCache/cacheID:property\"}}{{/crossLink}} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\tlet cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t}\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t */\n\tdraw (ctx) {\n\t\tif (!this.target) { return false; }\n\t\tctx.drawImage(\n\t\t\tthis.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\n\t\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\n\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @method getBounds\n\t * @returns {Rectangle}\n\t */\n\tgetBounds () {\n\t\tconst scale = this.scale;\n\t\treturn this._boundRect.setValue(\n\t\t\tthis._filterOffX/scale,\n\t\t\tthis._filterOffY/scale,\n\t\t\tthis.width/scale,\n\t\t\tthis.height/scale\n\t\t);\n\t}\n\n\n// private methods:\n\t/**\n\t * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t * create and or size the canvas as needed.\n\t * @method _updateSurface\n\t * @protected\n\t */\n\t_updateSurface () {\n\t\tlet surface;\n\t\tif (!this._useWebGL) {\n\t\t\tsurface = this.target.cacheCanvas;\n\t\t\t// create it if it's missing\n\t\t\tif (!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\t// skip the webgl-only updates\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t\t\t\t\tthrow `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\t\t\t} else if (this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;    // use this flag to control stage sizing and final output\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tlet stageGL = this._webGLCache;\n\t\tsurface = this.target.cacheCanvas;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else if (!stageGL.isCacheControlled) {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t}\n\t}\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @method _drawToCache\n\t * @protected\n\t */\n\t_drawToCache (compositeOperation) {\n\t\tlet target = this.target;\n\t\tlet surface = target.cacheCanvas;\n\t\tlet webGL = this._webGLCache;\n\n\t\tif (!this._useWebGL || !webGL) {\n\t\t\tlet ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(target);\n\t\t\t}\n\t\t\tsurface._invalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n\t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\t\tsurface = this.target.cacheCanvas;\n\t\tsurface.width = this._drawWidth;\n\t\tsurface.height = this._drawHeight;\n\t\tsurface._invalid = true;\n\t}\n\n\t/**\n\t * Work through every filter and apply its individual transformation to it.\n\t * @method _applyFilters\n\t * @protected\n\t */\n\t_applyFilters () {\n\t\tlet surface = this.target.cacheCanvas;\n\t\tlet filters = this.target.filters;\n\n\t\tlet w = this._drawWidth;\n\t\tlet h = this._drawHeight;\n\n\t\t// setup\n\t\tlet data = surface.getContext(\"2d\").getImageData(0,0, w,h);\n\n\t\t// apply\n\t\tlet l = filters.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tfilters[i]._applyFilter(data);\n\t\t}\n\n\t\t//done\n\t\tsurface.getContext(\"2d\").putImageData(data, 0,0);\n\t}\n\n}\n\n/**\n * Functionality injected to {{#crossLink \"BitmapCache\"}}{{/crossLink}}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n * <h4>Example</h4>\n * Using WebGL cache with a 2d context\n *\n *     var stage = new createjs.Stage();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, true);          // no StageGL to use, so make one\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * <h4>Example</h4>\n * Using WebGL cache with a WebGL context:\n *\n *     var stageGL = new createjs.StageGL();\n *     var bmp = new createjs.Bitmap(src);\n *     bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL);       // use our StageGL to cache\n *     var shape = new createjs.Shape();\n *     shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n *     shape.cache(0, 0, 20, 20, 1);                             // cannot use WebGL cache\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n * @method cache\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity. Default is 1.\n * @param {Boolean|StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n","/*\n* @license DisplayObject\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport UID from \"../utils/UID\";\nimport DisplayProps from \"../geom/DisplayProps\";\nimport Rectangle from \"../geom/Rectangle\";\nimport Point from \"../geom/Point\";\nimport Matrix2D from \"../geom/Matrix2D\";\nimport BitmapCache from \"../filters/BitmapCache\";\n\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n * @class DisplayObject\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class DisplayObject extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t* If a cache is active, this returns the canvas that holds the image of this display object. See {{#crossLink \"DisplayObject/cache:method\"}}{{/crossLink}}\n\t\t* for more information. Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @property cacheCanvas\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties. See {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t\t * for more information.\n\t\t * @property bitmapCache\n\t\t * @type {BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @property id\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tthis.id = UID.get();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\n\t\t * provided in the next release of EaselJS.\n\t\t * @property mouseEnabled\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\n\t\t * debugging.\n\t\t * @property name\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\n\t\t * contains this display object, or null if it has not been added\n\t\t * to one.\n\t\t * @property parent\n\t\t * @final\n\t\t * @type {Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\n\t\t * @property regX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\n\t\t * @property regY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @property scaleX\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @property scaleY\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @property skewX\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @property skewY\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @property shadow\n\t\t * @type {Shadow}\n\t\t * @default null\n\t\t */\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.x = 0;\n\n\t\t/**\n\t\t * The y (vertical) position of the display object, relative to its parent.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @property transformMatrix\n\t\t * @type {Matrix2D}\n\t\t * @default null\n\t\t */\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t\t * whatwg spec on compositing</a>.\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @property snapToPixel\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\n\t\t * cached.\n\t\t * @property filters\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @property mask\n\t\t * @type {Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t *\n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t * @property cursor\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\n// private properties:\n\t\t/**\n\t\t * @property _props\n\t\t * @protected\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis._props = new DisplayProps();\n\n\t\t/**\n\t\t * @property _rectangle\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._rectangle = new Rectangle();\n\n\t\t/**\n\t\t * @property _bounds\n\t\t * @protected\n\t\t * @type {Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @property stage\n\t * @type {Stage}\n\t * @readonly\n\t */\n\tget stage () {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tlet o = this;\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) { return o; }\n\t\treturn null;\n\t}\n\n\tget scale () {\n\t\treturn this.scaleX;\n\t}\n\n\t/**\n\t * Set both the {{#crossLink \"DisplayObject/scaleX:property\"}}{{/crossLink}} and the {{#crossLink \"DisplayObject/scaleY\"}}{{/crossLink}}\n\t * property to the same value. Note that when you get the value, if the `scaleX` and `scaleY` are different values,\n\t * it will return only the `scaleX`.\n\t * @property scale\n\t * @type {Number}\n\t * @default 1\n\t */\n\tset scale (value) {\n\t\tthis.scaleX = this.scaleY = value;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Alias for draw(). Used by grandchildren (or deeper) in their draw method to directly call DisplayObject.draw, bypassing\n\t * their parent(s).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\treturn this.drawCache(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawCache\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdrawCache (ctx, ignoreCache = false) {\n\t\tlet cache = this.bitmapCache;\n\t\tif (cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\n\t * @method updateContext\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t */\n\tupdateContext (ctx) {\n\t\tlet o=this, mask=o.mask, mtx=o._props.matrix;\n\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\n\t\tthis.getMatrix(mtx);\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t}\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling <code>updateCache()</code> again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * <h4>Example</h4>\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t *\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      myShape.cache(-25, -25, 50, 50);\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {{#crossLink \"Filter\"}}{{/crossLink}} class for more information. Some filters\n\t * (ex. BlurFilter) may not work as expected in conjunction with the scale param.\n\t *\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method cache\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t */\n\tcache (x, y, width, height, scale = 1, options) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthis.bitmapCache = new BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t}\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * <h4>Example</h4>\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\n\t * will be drawn on top of the old one.\n\t *\n\t *      // Not shown: Creating the shape, and caching it.\n\t *      shapeInstance.clear();\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n\t *      shapeInstance.updateCache();\n\t *\n\t * Actual implementation of the caching mechanism can change with a {{#crossLink \"StageGL\"}}{{/crossLink}} and so\n\t * all caching and filter behaviour has been moved to the {{#crossLink \"BitmapCache\"}}{{/crossLink}}\n\t *\n\t * @method updateCache\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\n\t * whatwg spec on compositing</a>.\n\t */\n\tupdateCache (compositeOperation) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthrow \"cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t}\n\n\t/**\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\n\t * @method uncache\n\t */\n\tuncache () {\n\t\tif (this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @method getCacheDataURL\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.localToGlobal(100, 100);\n\t *      // Results in x=400, y=300\n\t *\n\t * @method localToGlobal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t */\n\tlocalToGlobal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.x = 300;\n\t *      displayObject.y = 200;\n\t *      stage.addChild(displayObject);\n\t *      var point = displayObject.globalToLocal(100, 100);\n\t *      // Results in x=-200, y=-100\n\t *\n\t * @method globalToLocal\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t */\n\tglobalToLocal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t *\n\t *      var pt = this.localToGlobal(x, y);\n\t *      pt = target.globalToLocal(pt.x, pt.y);\n\t *\n\t * @method localToLocal\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t */\n\tlocalToLocal (x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t}\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @method setTransform\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\n\t * @chainable\n\t*/\n\tsetTransform (x=0, y=0, scaleX=1, scaleY=1, rotation=0, skewX=0, skewY=0, regX=0, regY=0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scaleX = scaleX;\n\t\tthis.scaleY = scaleY;\n\t\tthis.rotation = rotation;\n\t\tthis.skewX = skewX;\n\t\tthis.skewY = skewY;\n\t\tthis.regX = regX;\n\t\tthis.regY = regY;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @method getMatrix\n\t * @param {Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new\n\t * Matrix object is returned.\n\t * @return {Matrix2D} A matrix representing this display object's transform.\n\t */\n\tgetMatrix (matrix) {\n\t\tlet o = this, mtx = matrix&&matrix.identity() || new Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t}\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\t * @method getConcatenatedMatrix\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new Matrix2D object is returned.\n\t * @return {Matrix2D} The combined matrix.\n\t */\n\tgetConcatenatedMatrix (matrix) {\n\t\tlet o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t}\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\n\t * @method getConcatenatedDisplayProps\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\n\t * If null, a new DisplayProps object is returned.\n\t * @return {DisplayProps} The combined display properties.\n\t */\n\tgetConcatenatedDisplayProps (props) {\n\t\tprops = props ? props.identity() : new DisplayProps();\n\t\tlet o = this, mtx = o.getMatrix(props.matrix);\n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\n\t *      function handleMouseDown(event) {\n\t *          var hit = myShape.hitTest(event.stageX, event.stageY);\n\t *      }\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\thitTest (x, y) {\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tlet hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t *      var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t *\n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly:\n\t *\n\t * \tvar bounds = obj.getBounds();\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * \t// getBounds will now use the set values, instead of recalculating\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * \tvar myBounds = obj.getBounds().clone();\n\t * \t// OR:\n\t * \tmyRect.copy(obj.getBounds());\n\t *\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\n\t * object.\n\t */\n\tgetBounds () {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tlet cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tlet scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\n\t * bounds.\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @method getTransformedBounds\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t *\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t * @method setBounds\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t */\n\tsetBounds (x, y, width, height) {\n\t\tif (x == null) { this._bounds = x; }\n\t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t}\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t * @method clone\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new DisplayObject());\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\n// private methods:\n\t// separated so it can be used more easily in subclasses:\n\t/**\n\t * @method _cloneProps\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {DisplayObject} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _applyShadow\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Shadow} [shadow=Shadow]\n\t */\n\t_applyShadow (ctx, shadow = Shadow.identity) {\n\t\tshadow = shadow;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tlet ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t}\n\n\t/**\n\t * @method _testHit\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t */\n\t_testHit (ctx) {\n\t\ttry {\n\t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t}\n\n\t/**\n\t * @method _transformBounds\n\t * @param {Rectangle} bounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_transformBounds (bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tlet { x, y, width, height } = bounds;\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tlet x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tlet y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\n\t\tlet minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t}\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @method _hasMouseEventListener\n\t * @return {Boolean}\n\t * @protected\n\t */\n\t_hasMouseEventListener () {\n\t\tlet evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (let i=0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t}\n\n}\n\n// static properties:\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @property _MOUSE_EVENTS\n * @protected\n * @static\n * @type {Array}\n * @readonly\n */\n\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @property suppressCrossDomainErrors\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _snapToPixelEnabled\n * @protected\n * @static\n * @type {Boolean}\n * @default false\n */\n/**\n * @property _hitTestCanvas\n * @type {HTMLCanvasElement | Object}\n * @static\n * @protected\n */\n/**\n * @property _hitTestContext\n * @type {CanvasRenderingContext2D}\n * @static\n * @protected\n */\n{\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\t// ES6 does not support static properties, this is a work around.\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\tDisplayObject.suppressCrossDomainErrors = false;\n\tDisplayObject.snapToPixelEnabled = false;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_NONE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_NONE = 0;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_SPRITE\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_SPRITE = 1;\n\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @property _StageGL_BITMAP\n\t * @protected\n\t * @static\n\t * @type {number}\n\t */\n\tDisplayObject._StageGL_BITMAP = 2;\n\n}\n\n// events:\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object. See the\n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\n\t * myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t * @event pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t * @event pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\n\t * dispatched on their parent.\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\n\t * @since 0.6.0\n\t */\n","/*\n* @license Container\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from './DisplayObject';\n\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * <h4>Example</h4>\n *\n *      var container = new createjs.Container();\n *      container.addChild(bitmapInstance, shapeInstance);\n *      container.x = 100;\n *\n * @class Container\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Container extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\n\t\t * included for advanced uses.\n\t\t * @property children\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @property mouseChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @property tickChildren\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickChildren = true;\n\t\t}\n\n// accessor properties:\n\t/**\n\t * Returns the number of children in the container.\n\t * @property numChildren\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget numChildren () {\n\t\treturn this.children.length;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tlet list = this.children.slice();\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tlet child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance);\n\t *\n\t * You can also add multiple children at once:\n\t *\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @method addChild\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\n\t */\n\taddChild (...children) {\n\t\tconst l = children.length;\n\t\tif (l === 0) { return null; }\n\t\tlet child = children[0];\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { child = this.addChild(children[i]); }\n\t\t\treturn child;\n\t\t}\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this Container.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      addChildAt(child1, index);\n\t *\n\t * You can also add multiple children, such as:\n\t *\n\t *      addChildAt(child1, child2, ..., index);\n\t *\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\n\t * you could use:\n\t *\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t *\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @method addChildAt\n\t * @param {...DisplayObject} children The display object(s) to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t */\n\taddChildAt (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return null; }\n    let index = children.pop();\n\t\tif (index < 0 || index > this.children.length) { return children[l - 2]; }\n\t\tif (l > 2) {\n\t\t\tfor (let i = 0; i < l - 1; i++) { this.addChildAt(children[i], index++); }\n\t\t\treturn children[l - 2];\n\t\t}\n\t\tlet child = children[0];\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index++, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChild(child);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      removeChild(child1, child2, ...);\n\t *\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\n\t * @method removeChild\n\t * @param {DisplayObject} children The display object(s) to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t */\n\tremoveChild (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeChild(children[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n\t}\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.removeChildAt(2);\n\t *\n\t * You can also remove multiple children:\n\t *\n\t *      container.removeChild(2, 7, ...)\n\t *\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\n\t * @method removeChildAt\n\t * @param {...Number} indexes The indexes of children to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t */\n\tremoveChildAt (...indexes) {\n\t\tconst l = indexes.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tindexes.sort((a, b) => b - a);\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this._removeChildAt(indexes[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(indexes[0]);\n\t}\n\n\t/**\n\t * Removes all children from the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tcontainer.removeAllChildren();\n\t *\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {\n\t\tlet kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t}\n\n\t/**\n\t * Returns the child at the specified index.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      container.getChildAt(2);\n\t *\n\t * @method getChildAt\n\t * @param {Number} index The index of the child to return.\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t */\n\tgetChildAt (index) {\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @method getChildByName\n\t * @param {String} name The name of the child to return.\n\t * @return {DisplayObject} The child with the specified name.\n\t */\n\tgetChildByName (name) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (kids[i].name === name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * <h4>Example: Display children with a higher y in front.</h4>\n\t *\n\t *      var sortFunction = function(obj1, obj2, options) {\n\t *          if (obj1.y > obj2.y) { return 1; }\n\t *          if (obj1.y < obj2.y) { return -1; }\n\t *          return 0;\n\t *      }\n\t *      container.sortChildren(sortFunction);\n\t *\n\t * @method sortChildren\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\n\t * documentation for details.\n\t */\n\tsortChildren (sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t}\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var index = container.getChildIndex(child);\n\t *\n\t * @method getChildIndex\n\t * @param {DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t */\n\tgetChildIndex (child) {\n\t\treturn this.children.indexOf(child);\n\t}\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @method swapChildrenAt\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t */\n\tswapChildrenAt (index1, index2) {\n\t\tlet kids = this.children;\n\t\tlet o1 = kids[index1];\n\t\tlet o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @method swapChildren\n\t * @param {DisplayObject} child1\n\t * @param {DisplayObject} child2\n\t */\n\tswapChildren (child1, child2) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tlet index1,index2;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child1) { index1 = i; }\n\t\t\tif (kids[i] === child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i === l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t}\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {DisplayObject} child\n\t * @param {Number} index\n\t * @method setChildIndex\n\t */\n\tsetChildIndex (child, index) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child) { break; }\n\t\t}\n\t\tif (i === l || i === index) { return; }\n\t\tkids.splice(i, 1);\n\t\tkids.splice(index, 0, child);\n\t}\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @method contains\n\t * @param {DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t */\n\tcontains (child) {\n\t\twhile (child) {\n\t\t\tif (child === this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @method hitTest\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t */\n\thitTest (x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn this.getObjectUnderPoint(x, y) != null;\n\t}\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\n\t * and only if the mouse's position has changed.\n\t *\n\t * <ul>\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n\t * </li>\n\t *\n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\n\t * @method getObjectsUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\n\t */\n\tgetObjectsUnderPoint (x, y, mode = 0) {\n\t\tlet arr = [];\n\t\tlet pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\n\t * @method getObjectUnderPoint\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\n\t */\n\tgetObjectUnderPoint (x, y, mode = 0) {\n\t\tlet pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\treturn this._getBounds(null, true);\n\t}\n\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {Container} A clone of the current Container instance.\n\t */\n\tclone (recursive = false) {\n\t\tlet o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\tlet child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @method cloneChildren\n\t * @protected\n\t * @param {Container} o The target container.\n\t */\n\t_cloneChildren (o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tlet arr = o.children;\n\t\tconst l = this.children.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t}\n\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   * @method removeChildAt\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   **/\n  _removeChildAt (index, silent = false) {\n    if (index < 0 || index > this.children.length - 1) { return false; }\n    let child = this.children[index];\n    if (child) { child.parent = null; }\n    this.children.splice(index, 1);\n    if (!silent) { child.dispatchEvent(\"removed\"); }\n    return true;\n  }\n\n\t/**\n\t * @method _getObjectsUnderPoint\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t * @return {DisplayObject}\n\t * @protected\n\t */\n\t_getObjectsUnderPoint (x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tlet mtx, ctx = DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse && this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tlet children = this.children;\n\t\tconst l = children.length;\n\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\tlet child = children[i];\n\t\t\tlet hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tlet result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tlet props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea || child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @method _testMask\n\t * @param {DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t * @protected\n\t */\n\t_testMask (target, x, y) {\n\t\tlet mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n\t\tlet mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = super.getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tconst l = this.children.length;\n\t\tlet rect = null;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t}\n\n}\n","/*\n* @license MouseEvent\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n * @class MouseEvent\n * @extends Event\n * @module EaselJS\n */\nexport default class MouseEvent extends Event {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t */\n\tconstructor (type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tsuper (type, bubbles, cancelable);\n\n// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t */\n\t\tthis.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t */\n\t\tthis.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t *\n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\n// accessor properties:\n/**\n * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n * @property localX\n * @type {Number}\n * @readonly\n */\n\tget localX () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t}\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localY () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t}\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tget isTouch () {\n\t\treturn this.pointerID !== -1;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t */\n\tclone () {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t}\n\n}\n","/*\n* @license Stage\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport MouseEvent from \"../events/MouseEvent\";\n\n/**\n * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n * method is called, it will render its display list to its target canvas.\n *\n * <h4>Example</h4>\n * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvasElementId\");\n *      var image = new createjs.Bitmap(\"imagePath.png\");\n *      stage.addChild(image);\n *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n *      function handleTick(event) {\n *          image.x += 10;\n *          stage.update();\n *      }\n *\n * @class Stage\n * @extends Container\n * @module EaselJS\n */\nexport default class Stage extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t */\n\tconstructor (canvas) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t */\n\t\tthis.canvas = (typeof canvas === \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\n// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._nextStage = null;\n\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t */\n\t\tthis._prevStage = null;\n\n\t\tthis.enableDOMEvents(true);\n\t}\n\n// accessor properties:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t *\n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t *\n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t *\n\t *\ttargetStage.enableDOMEvents(false);\n\t *\n\t * @property nextStage\n\t * @type {Stage}\n\t */\n\tget nextStage () {\n\t\treturn this._nextStage;\n\t}\n\n\tset nextStage (stage) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (stage) { stage._prevStage = this; }\n\t\tthis._nextStage = stage;\n\t}\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t */\n\tupdate (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tlet r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t}\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t *\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t *\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t *\n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t */\n\ttick (props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tlet evtObj = new Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (let n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t}\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage\");\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t */\n\thandleEvent (evt) {\n\t\tif (evt.type === \"tick\") { this.update(evt); }\n\t}\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t */\n\tclear () {\n\t\tif (!this.canvas) { return; }\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t}\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t */\n\ttoDataURL (backgroundColor, mimeType = \"image/png\") {\n\t\tlet data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tlet dataURL = this.canvas.toDataURL(mimeType);\n\n\t\tif (backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t */\n\tenableMouseOver (frequency = 20) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency === 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency <= 0) { return; }\n\t\tthis._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000/Math.min(50,frequency));\n\t}\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t */\n\tenableDOMEvents (enable = true) {\n\t\tlet ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tlet t = window.addEventListener ? window : document;\n\t\t\tls = this._eventListeners = {\n\t\t\t\tmouseup: {t, f:e => this._handleMouseUp(e) },\n\t\t\t\tmousemove: {t, f:e => this._handleMouseMove(e) },\n\t\t\t\tdblclick: {t:this.canvas, f:e => this._handleDoubleClick(e) },\n\t\t\t\tmousedown: {t:this.canvas, f:e => this._handleMouseDown(e) }\n\t\t\t};\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t}\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t */\n\t_getElementRect (e) {\n\t\tlet bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top:e.offsetTop, left:e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tlet offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tlet offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tlet styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\t\tlet padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tlet padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tlet padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tlet padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t};\n\t}\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t */\n\t_getPointerData (id) {\n\t\tlet data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0, y:0}; }\n\t\treturn data;\n\t}\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} [e=window.event]\n\t */\n\t_handleMouseMove (e = window.event) {\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerMove (id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tlet nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tlet inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds === !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t}\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t */\n\t_updatePointerPosition (id, e, pageX, pageY) {\n\t\tlet rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tlet w = this.canvas.width;\n\t\tlet h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tlet o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseUp (e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t}\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerUp (id, e, clear, owner) {\n\t\tlet nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n\t\tif (target === oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t}\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t */\n\t_handleMouseDown (e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerDown (id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tlet target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t}\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t */\n\t_testMouseOver (clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tlet o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds)) { return; }\n\n\t\tlet e = o.posEvtObj;\n\t\tlet isEventTarget = eventTarget || e&&(e.target === this.canvas);\n\t\tlet target=null, common = -1, cursor=\"\";\n\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tlet oldList = this._mouseOverTarget||[];\n\t\tlet oldTarget = oldList[oldList.length-1];\n\t\tlet list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tlet t = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t}\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handleDoubleClick (e, owner) {\n\t\tlet target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t}\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t */\n\t_dispatchMouseEvent (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tlet pt = this._mtx.transformPoint(o.x, o.y);\n\t\tlet evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tlet evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemousemove\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event stagemousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n * @event stagemouseup\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseleave\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n * class for a listing of event properties.\n * @event mouseenter\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event tickstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event tickend\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event drawstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event drawend\n * @since 0.7.0\n */\n","/**\n* @license VideoBuffer\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * \tvar myBuffer = new createjs.VideoBuffer(myVideo);\n * \tvar myBitmap = new Bitmap(myBuffer);\n *\n * @class VideoBuffer\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n * @constructor\n **/\nexport default class VideoBuffer {\n\n  constructor (video) {\n// private properties:\n  \t/**\n  \t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n  \t * @property readyState\n  \t * @protected\n  \t * @type {Number}\n  \t * @default 0\n  \t **/\n  \tthis.readyState = video.readyState;\n\n  \t/**\n  \t * @property _video\n  \t * @protected\n  \t * @type {HTMLVideoElement}\n  \t * @default 0\n  \t **/\n  \tthis._video = video;\n\n  \t/**\n  \t * @property _canvas\n  \t * @protected\n  \t * @type {HTMLCanvasElement}\n  \t * @default 0\n  \t **/\n  \tthis._canvas = null;\n\n  \t/**\n  \t * @property _lastTime\n  \t * @protected\n  \t * @type {Number}\n  \t * @default -1\n  \t **/\n  \tthis._lastTime = -1;\n\n  \tif (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } //once:true isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n// public methods:\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n   * @method getImage\n   **/\n  getImage () {\n  \tif (this.readyState < 2) { return; }\n  \tlet canvas = this._canvas, video = this._video;\n  \tif (!canvas) {\n\t\t\tcanvas = this._canvas = document.createElement(\"canvas\");\n  \t\tcanvas.width = video.videoWidth;\n  \t\tcanvas.height = video.videoHeight;\n  \t}\n  \tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n  \t\tconst ctx = canvas.getContext(\"2d\");\n  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \t\tthis._lastTime = video.currentTime;\n  \t}\n  \treturn canvas;\n  }\n\n  // private methods:\n  /**\n   * @method _videoReady\n   * @protected\n   **/\n  _videoReady () {\n  \tthis.readyState = 2;\n  }\n\n}\n","/*\n* @license Bitmap\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport VideoBuffer from \"../utils/VideoBuffer\";\n\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <h4>Example</h4>\n *\n *      var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {{#crossLink \"VideoBuffer\"}}{{/crossLink}} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @class Bitmap\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Bitmap extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t * @constructor\n\t */\n\tconstructor (imageOrUri) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type CanvasImageSource | Object\n\t\t */\n\t\tif (typeof imageOrUri === \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet image = this.image;\n\t\tlet hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tlet img = this.image, rect = this.sourceRect;\n\t\tif (img instanceof VideoBuffer) { img = img.getImage(); }\n\t\tif (img == null) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tlet rect = super.getBounds();\n\t\tif (rect) { return rect; }\n\t\tlet image = this.image, o = this.sourceRect || image;\n\t\tlet hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t}\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t */\n\tclone (node) {\n\t\tlet img = this.image;\n\t\tif (img != null && node != null) { img = img.cloneNode(); }\n\t\tlet bmp = new Bitmap(img);\n\t\tif (this.sourceRect) { bmp.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(bmp);\n\t\treturn bmp;\n\t}\n\n}\n","/*\n* @license Sprite\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n *\n * <h4>Example</h4>\n *\n *      var instance = new createjs.Sprite(spriteSheet);\n *      instance.gotoAndStop(\"frameName\");\n *\n * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @class Sprite\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Sprite extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t */\n\tconstructor (spriteSheet, frameOrAnimation) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t */\n\t\tthis.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = 0;\n\n\n// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @property _webGLRenderStyle\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tlet o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tlet rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t */\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t */\n\tgotoAndPlay (frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t */\n\tgotoAndStop (frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet fps = this.framerate || this.spriteSheet.framerate;\n\t\tlet t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t */\n\tgetBounds () {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t}\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t}\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t */\n\t_tick (evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t * @param {Number} [frameDelta=0]\n\t */\n\t_normalizeFrame (frameDelta = 0) {\n\t\tlet animation = this._animation;\n\t\tlet paused = this.paused;\n\t\tlet frame = this._currentFrame;\n\n\t\tif (animation) {\n\t\t\tlet speed = animation.speed || 1;\n\t\t\tlet animFrame = this.currentAnimationFrame;\n\t\t\tlet l = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tlet next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tlet l = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @method _dispatchAnimationEnd\n\t * @param animation\n\t * @param frame\n\t * @param paused\n\t * @param next\n\t * @param end\n\t * @private\n\t */\n\t_dispatchAnimationEnd (animation, frame, paused, next, end) {\n\t\tlet name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tlet evt = new Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tlet changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t */\n\t_goto (frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tlet data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when an animation reaches its ends.\n * @event animationend\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {String} name The name of the animation that just ended.\n * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event change\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n */\n","/*\n* @license BitmapText\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport Sprite from \"./Sprite\";\n\n// ES6 does not support static properties, this is a work around.\nlet _maxPoolSize = 100;\nlet _spritePool = [];\n\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n * property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @class BitmapText\n * @extends Container\n * @module EaselJS\n */\nexport default class BitmapText extends Container {\n\n// constructor:\n\t/**\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t */\n\tconstructor (text = \"\", spriteSheet = null) {\n\t\tsuper();\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t *\n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.spaceWidth = 0;\n\n\n// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\n\t}\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t */\n\tstatic get maxPoolSize () { return _maxPoolSize; }\n\tstatic set maxPoolSize (maxPoolSize) { _maxPoolSize = maxPoolSize;}\n\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t * @readonly\n\t */\n\tstatic get _spritePool () { return _spritePool; }\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\tif (this.drawCache(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tgetBounds () {\n\t\tthis._updateText();\n\t\treturn super.getBounds();\n\t}\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t}\n\n\tclone () {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t */\n\taddChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t */\n\taddChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t */\n\tremoveChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t */\n\tremoveChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t */\n\tremoveAllChildren () {}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tthis._updateText();\n\t}\n\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getFrameIndex (character, spriteSheet) {\n\t\tlet c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t}\n\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t */\n\t_getFrame (character, spriteSheet) {\n\t\tlet index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t}\n\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getLineHeight (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t}\n\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getSpaceWidth (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _updateText\n\t * @protected\n\t */\n\t_updateText () {\n\t\tlet x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n\t\tlet pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n\t\tfor (let n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\n\t\tlet hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\n\t\tfor (let i = 0, l = this.text.length; i < l; i++) {\n\t\t\tlet character = this.text.charAt(i);\n\t\t\tif (character === \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n\t\t\t\tif (character === \"\\r\" && this.text.charAt(i+1) === \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t}\n\n}\n","/*\n* @license DOMElement\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport DisplayProps from \"../geom/DisplayProps\";\n\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @class DOMElement\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class DOMElement extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLElement|String} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tconstructor (htmlElement) {\n\t\tsuper();\n\n\t\tif (typeof(htmlElement) === \"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\n\t\tlet style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\n// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @property _oldStage\n\t\t * @type Stage\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @property _drawAction\n\t\t * @type function\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn this.htmlElement != null;\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tcache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tuncache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tupdateCache () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\thitTest () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tlocalToGlobal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tglobalToLocal () {}\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tlocalToLocal () {}\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tif (stage != null && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\t_handleDrawEnd (evt) {\n\t\tlet o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tlet style = o.style;\n\n\t\tlet props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n\t\tlet visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\n\t\tlet oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tlet n = 10000; // precision\n\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tlet str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t}\n\n}\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mousedown\n */\n\n/**\n * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event mouseover\n */\n\n/**\n * Not applicable to DOMElement.\n * @event tick\n */\n","/**\n* @license Graphics\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n *      var g = new createjs.Graphics();\n *      g.setStrokeStyle(1);\n *      g.beginStroke(\"#000000\");\n *      g.beginFill(\"red\");\n *      g.drawCircle(0,0,30);\n *\n * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n *\n *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n *\n *      var fillCommand = myGraphics.beginFill(\"red\").command;\n *      // ... later, update the fill style/color:\n *      fillCommand.style = \"blue\";\n *      // or change it to a bitmap fill:\n *      fillCommand.bitmap(myImage);\n *\n * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n *      myGraphics.append(createjs.Graphics.beginCmd);\n *      // we need to define the path before applying the fill:\n *      var circle = new createjs.Graphics.Circle(0,0,30);\n *      myGraphics.append(circle);\n *      // fill the path we just defined:\n *      var fill = new createjs.Graphics.Fill(\"red\");\n *      myGraphics.append(fill);\n *\n * These approaches can be used together, for example to insert a custom command:\n *\n *      myGraphics.beginFill(\"red\");\n *      var customCommand = new CustomSpiralCommand(etc);\n *      myGraphics.append(customCommand);\n *      myGraphics.beginFill(\"blue\");\n *      myGraphics.drawCircle(0, 0, 30);\n *\n * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n * </table>\n *\n * Here is the above example, using the tiny API instead.\n *\n *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @class Graphics\n * @module EaselJS\n */\nclass Graphics {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t */\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t */\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._strokeStyle = null;\n\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t */\n\t\tthis._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._strokeDash = null;\n\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t */\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t */\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t */\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._storeIndex = 0;\n\n// ActionScript mappings:\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method curveTo\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.curveTo = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method drawRect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.drawRect = this.rect;\n\n// tiny API:\n\t\t/**\n\t\t * Shortcut to moveTo.\n\t\t * @method mt\n\t\t * @param {Number} x The x coordinate the drawing point should move to.\n\t\t * @param {Number} y The y coordinate the drawing point should move to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.mt = this.moveTo;\n\n\t\t/**\n\t\t * Shortcut to lineTo.\n\t\t * @method lt\n\t\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lt = this.lineTo;\n\n\t\t/**\n\t\t * Shortcut to arcTo.\n\t\t * @method at\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.at = this.arcTo;\n\n\t\t/**\n\t\t * Shortcut to bezierCurveTo.\n\t\t * @method bt\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bt = this.bezierCurveTo;\n\n\t\t/**\n\t\t * Shortcut to quadraticCurveTo / curveTo.\n\t\t * @method qt\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.qt = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Shortcut to arc.\n\t\t * @method a\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle Measured in radians.\n\t\t * @param {Number} endAngle Measured in radians.\n\t\t * @param {Boolean} anticlockwise\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @protected\n\t\t * @chainable\n\t\t */\n\t\tthis.a = this.arc;\n\n\t\t/**\n\t\t * Shortcut to rect.\n\t\t * @method r\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.r = this.rect;\n\n\t\t/**\n\t\t * Shortcut to closePath.\n\t\t * @method cp\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.cp = this.closePath;\n\n\t\t/**\n\t\t * Shortcut to clear.\n\t\t * @method c\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.c = this.clear;\n\n\t\t/**\n\t\t * Shortcut to beginFill.\n\t\t * @method f\n\t\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no fill.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.f = this.beginFill;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientFill.\n\t\t * @method lf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t\t * drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t\t * the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.lf = this.beginLinearGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientFill.\n\t\t * @method rf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rf = this.beginRadialGradientFill;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapFill.\n\t\t * @method bf\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t\t * will be applied relative to the parent transform.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bf = this.beginBitmapFill;\n\n\t\t/**\n\t\t * Shortcut to endFill.\n\t\t * @method ef\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ef = this.endFill;\n\n\t\t/**\n\t\t * Shortcut to setStrokeStyle.\n\t\t * @method ss\n\t\t * @param {Number} thickness The width of the stroke.\n\t\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t\t * the tiny API.\n\t\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t\t * for use with the tiny API.\n\t\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t\t * controls at what point a mitered joint will be clipped.\n\t\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t\t * of active transformations.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ss = this.setStrokeStyle;\n\n\t\t/**\n\t\t * Shortcut to setStrokeDash.\n\t\t * @method sd\n\t\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t\t * Passing null or an empty array will clear any existing dash.\n\t\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.sd = this.setStrokeDash;\n\n\t\t/**\n\t\t * Shortcut to beginStroke.\n\t\t * @method s\n\t\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no stroke.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.s = this.beginStroke;\n\n\t\t/**\n\t\t * Shortcut to beginLinearGradientStroke.\n\t\t * @method ls\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.ls = this.beginLinearGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginRadialGradientStroke.\n\t\t * @method rs\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t\t * to 100%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rs = this.beginRadialGradientStroke;\n\n\t\t/**\n\t\t * Shortcut to beginBitmapStroke.\n\t\t * @method bs\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.bs = this.beginBitmapStroke;\n\n\t\t/**\n\t\t * Shortcut to endStroke.\n\t\t * @method es\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.es = this.endStroke;\n\n\t\t/**\n\t\t * Shortcut to drawRect.\n\t\t * @method dr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dr = this.drawRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRect.\n\t\t * @method rr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radius Corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rr = this.drawRoundRect;\n\n\t\t/**\n\t\t * Shortcut to drawRoundRectComplex.\n\t\t * @method rc\n\t\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t\t * @param {Number} w The width of the round rect.\n\t\t * @param {Number} h The height of the round rect.\n\t\t * @param {Number} radiusTL Top left corner radius.\n\t\t * @param {Number} radiusTR Top right corner radius.\n\t\t * @param {Number} radiusBR Bottom right corner radius.\n\t\t * @param {Number} radiusBL Bottom left corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.rc = this.drawRoundRectComplex;\n\n\t\t/**\n\t\t * Shortcut to drawCircle.\n\t\t * @method dc\n\t\t * @param {Number} x x coordinate center point of circle.\n\t\t * @param {Number} y y coordinate center point of circle.\n\t\t * @param {Number} radius Radius of circle.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dc = this.drawCircle;\n\n\t\t/**\n\t\t * Shortcut to drawEllipse.\n\t\t * @method de\n\t\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from center.\n\t\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from the center.\n\t\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t\t * number.\n\t\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.de = this.drawEllipse;\n\n\t\t/**\n\t\t * Shortcut to drawPolyStar.\n\t\t * @method dp\n\t\t * @param {Number} x Position of the center of the shape.\n\t\t * @param {Number} y Position of the center of the shape.\n\t\t * @param {Number} radius The outer radius of the shape.\n\t\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t\t * directly to the right of the center.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.dp = this.drawPolyStar;\n\n\t\t/**\n\t\t * Shortcut to decodePath.\n\t\t * @method p\n\t\t * @param {String} str The path string to decode.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t */\n\t\tthis.p = this.decodePath;\n\n\t\tthis.clear();\n\t}\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t */\n\tstatic getRGB (r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn `rgb(${r},${g},${b})`;\n\t\t} else {\n\t\t\treturn `rgba(${r},${g},${b},${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t */\n\tstatic getHSL (hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t\t} else {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget instructions () {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t */\n\tisEmpty () {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t */\n\tdraw (ctx, data) {\n\t\tthis._updateInstructions();\n\t\tlet instr = this._instructions;\n\t\tconst l = instr.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t}\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t */\n\tdrawAsPath (ctx) {\n\t\tthis._updateInstructions();\n\t\tlet instr, instrs = this._instructions;\n\t\tconst l = instrs.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t}\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t */\n\tmoveTo (x, y) {\n\t\treturn this.append(new MoveTo(x,y), true);\n\t}\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tlineTo (x, y) {\n\t\treturn this.append(new LineTo(x,y));\n\t}\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarcTo (x1, y1, x2, y2, radius) {\n\t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarc (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tquadraticCurveTo (cpx, cpy, x, y) {\n\t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t}\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbezierCurveTo (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t}\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\trect (x, y, w, h) {\n\t\treturn this.append(new Rect(x, y, w, h));\n\t}\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclosePath () {\n\t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t}\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclear () {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginFill (color) {\n\t\treturn this._setFill(color ? new Fill(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientFill (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientFill (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapFill (image, repetition, matrix) {\n\t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendFill () {\n\t\treturn this.beginFill();\n\t}\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeStyle (thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeDash (segments, offset = 0) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginStroke (color) {\n\t\treturn this._setStroke(color ? new Stroke(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientStroke (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientStroke (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapStroke (image, repetition = \"repeat\") {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendStroke () {\n\t\treturn this.beginStroke();\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRect (x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRectComplex (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t}\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\t  s.x = 100;\n\t *\t\t  s.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawCircle (x, y, radius) {\n\t\treturn this.append(new Circle(x, y, radius));\n\t}\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawEllipse (x, y, w, h) {\n\t\treturn this.append(new Ellipse(x, y, w, h));\n\t}\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawPolyStar (x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t}\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tappend (command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdecodePath (str) {\n\t\tlet instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tlet paramCount = [2, 2, 4, 6, 0];\n\t\tlet i = 0;\n\t\tconst l = str.length;\n\t\tlet params = [];\n\t\tlet x = 0, y = 0;\n\t\tlet base64 = Graphics.BASE_64;\n\n\t\twhile (i < l) {\n\t\t\tlet c = str.charAt(i);\n\t\t\tlet n = base64[c];\n\t\t\tlet fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tlet f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(`bad path data (@${i}):c`); }\n\t\t\tconst pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tlet charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (let p = 0; p < pl; p++) {\n\t\t\t\tlet num = base64[str.charAt(i)];\n\t\t\t\tlet sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount === 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this, params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tstore () {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tunstore () {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t */\n\tclone () {\n\t\tlet o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t */\n\t_updateInstructions (commit) {\n\t\tlet instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tconst l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (let i = 0; i < l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t */\n\t_setFill (fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t */\n\t_setStroke (stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic get LineTo () { return LineTo; }\n\tstatic get MoveTo () { return MoveTo; }\n\tstatic get ArcTo () { return ArcTo; }\n\tstatic get Arc () { return Arc; }\n\tstatic get QuadraticCurveTo () { return QuadraticCurveTo; }\n\tstatic get BezierCurveTo () { return BezierCurveTo; }\n\tstatic get Rect () { return Rect; }\n\tstatic get ClosePath () { return ClosePath; }\n\tstatic get BeginPath () { return BeginPath; }\n\tstatic get Fill () { return Fill; }\n\tstatic get Stroke () { return Stroke; }\n\tstatic get StrokeStyle () { return StrokeStyle; }\n\tstatic get StrokeDash () { return StrokeDash; }\n\tstatic get RoundRect () { return RoundRect; }\n\tstatic get Circle () { return Circle; }\n\tstatic get Ellipse () { return Ellipse; }\n\tstatic get PolyStar () { return PolyStar; }\n\n}\n\n// Command Objects:\n\n/**\n * @namespace Graphics\n */\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class LineTo\n */\nclass LineTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class MoveTo\n */\nclass MoveTo {\n\t/**\n\t * @constructor\n   * @param {Number} x\n   * @param {Number} y\n\t */\n \tconstructor (x, y) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n \t\tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n \texec (ctx) {\n \t\tctx.moveTo(this.x, this.y);\n \t}\n}\n\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ArcTo\n */\nclass ArcTo {\n\t/**\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t */\n \tconstructor (x1, y1, x2, y2, radius) {\n\t\t/**\n\t\t * @property x1\n\t\t * @type Number\n\t\t */\n\t \tthis.x1 = x1;\n\t\t/**\n\t\t * @property y1\n\t\t * @type Number\n\t\t */\n\t\tthis.y1 = y1;\n\t\t/**\n\t\t * @property x2\n\t\t * @type Number\n\t\t */\n\t \tthis.x2 = x2;\n\t\t/**\n\t\t * @property y2\n\t\t * @type Number\n\t\t */\n\t\tthis.y2 = y2;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Arc\n */\nclass Arc {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t */\n \tconstructor (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property startAngle\n\t\t * @type Number\n\t\t */\n\t \tthis.startAngle = startAngle;\n\t\t/**\n\t\t * @property endAngle\n\t\t * @type Number\n\t\t */\n\t\tthis.endAngle = endAngle;\n\t\t/**\n\t\t * @property anticlockwise\n\t\t * @type Number\n\t\t */\n\t \tthis.anticlockwise = !!anticlockwise;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class QuadraticCurveTo\n */\nclass QuadraticCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cpx, cpy, x, y) {\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t \tthis.cpx = cpx;\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\tthis.cpy = cpy;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BezierCurveTo\n */\nclass BezierCurveTo {\n\t/**\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n \tconstructor (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t/**\n\t\t * @property cp1x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp1x = cp1x;\n\t\t/**\n\t\t * @property cp1y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp1y = cp1y;\n\t\t/**\n\t\t * @property cp2x\n\t\t * @type Number\n\t\t */\n\t \tthis.cp2x = cp2x;\n\t\t/**\n\t\t * @property cp2y\n\t\t * @type Number\n\t\t */\n\t\tthis.cp2y = cp2y;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Rect\n */\nclass Rect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.rect(this.x, this.y, this.w, this.h);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class ClosePath\n */\nclass ClosePath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class BeginPath\n */\nclass BeginPath {\n\t/**\n\t * @constructor\n\t */\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.beginPath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Fill\n */\nclass Fill {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t */\n\tconstructor (style, matrix) {\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t\tthis.matrix = matrix;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tlet mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tlinearGradient (colors, ratios, x0, y0, x1, y1) {\n\t\tlet o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, x1, y1, type:\"linear\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tradialGradient (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tlet o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, r0, x1, y1, r1, type: \"radial\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tbitmap (image, repetition = \"\") {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tlet o = this.style = Graphics._ctx.createPattern(image, repetition);\n\t\t\to.props = {image, repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Stroke\n */\nclass Stroke {\n\t/**\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t */\n\tconstructor (style, ignoreScale) {\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tlinearGradient (...args) {\n\t\t// TODO-ES6: Anything but this...\n\t\tFill.prototype.linearGradient.apply(this, args);\n\t}\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tradialGradient (...args) {\n \t\tFill.prototype.radialGradient.apply(this, args);\n \t}\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tbitmap (...args) {\n \t\tFill.prototype.bitmap.apply(this, args);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeStyle\n */\nclass StrokeStyle {\n\t/**\n\t * @constructor\n\t * @param {Number} [width=1]\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t * @type {String}\n\t */\n\tconstructor (width, caps = \"butt\", joints = \"miter\", miterLimit = 10, ignoreScale = false) {\n\t\t/**\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\t\tthis.width = width;\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @property caps\n\t\t * @type String\n\t\t */\n\t\tthis.caps = caps;\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @property joints\n\t\t * @type String\n\t\t */\n\t\tthis.joints = joints;\n\t\t/**\n\t\t * @property miterLimit\n\t\t * @type Number\n\t\t */\n\t\tthis.miterLimit = miterLimit;\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @property path\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineWidth = this.width;\n\t\tctx.lineCap = (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]);\n\t\tctx.lineJoin = (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]);\n\t\tctx.miterLimit = this.miterLimit;\n\t\tctx.ignoreScale = this.ignoreScale;\n\t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class StrokeDash\n */\nclass StrokeDash {\n\t/**\n\t * @constructor\n\t * @param {Array} [segments=[]]\n\t * @param {Number} [offset=0]\n\t */\n \tconstructor (segments = StrokeDash.EMPTY_SEGMENTS, offset = 0) {\n\t\t/**\n\t\t * @property segments\n\t\t * @type Array\n\t\t */\n\t \tthis.segments = segments;\n\t\t/**\n\t\t * @property offset\n\t\t * @type Number\n\t\t */\n\t \tthis.offset = offset;\n \t}\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * Used instead of [] to reduce churn.\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t */\n\tstatic get EMPTY_SEGMENTS () { return _EMPTY_SEGMENTS; }\n\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tif (ctx.setLineDash) { // feature detection.\n\t \t\tctx.setLineDash(this.segments);\n\t \t\tctx.lineDashOffset = this.offset;\n\t \t}\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class RoundRect\n */\nclass RoundRect {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t */\n \tconstructor (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n\t\t/**\n\t\t * @property radiusTL\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusTL = radiusTL;\n\t\t/**\n\t\t * @property radiusTR\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusTR = radiusTR;\n\t\t/**\n\t\t * @property radiusBR\n\t\t * @type Number\n\t\t */\n\t \tthis.radiusBR = radiusBR;\n\t\t/**\n\t\t * @property radiusBL\n\t\t * @type Number\n\t\t */\n\t\tthis.radiusBL = radiusBL;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet max = (w<h?w:h)/2;\n\t \tlet mTL=0, mTR=0, mBR=0, mBL=0;\n\t \tlet x = this.x, y = this.y, w = this.w, h = this.h;\n\t \tlet rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t \tif (rTL < 0) { rTL *= (mTL=-1); }\n\t \tif (rTL > max) { rTL = max; }\n\t \tif (rTR < 0) { rTR *= (mTR=-1); }\n\t \tif (rTR > max) { rTR = max; }\n\t \tif (rBR < 0) { rBR *= (mBR=-1); }\n\t \tif (rBR > max) { rBR = max; }\n\t \tif (rBL < 0) { rBL *= (mBL=-1); }\n\t \tif (rBL > max) { rBL = max; }\n\n\t \tctx.moveTo(x+w-rTR, y);\n\t \tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t \tctx.lineTo(x+w, y+h-rBR);\n\t \tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t \tctx.lineTo(x+rBL, y+h);\n\t \tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t \tctx.lineTo(x, y+rTL);\n\t \tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Circle\n */\nclass Circle {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t */\n \tconstructor (x, y, radius) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class Ellipse\n */\nclass Ellipse {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet w = this.w, h = this.h;\n\n\t \tlet k = 0.5522848;\n\t \tlet ox = (w / 2) * k;\n\t \tlet oy = (h / 2) * k;\n\t \tlet xe = x + w;\n\t \tlet ye = y + h;\n\t \tlet xm = x + w / 2;\n\t \tlet ym = y + h / 2;\n\n\t \tctx.moveTo(x, ym);\n\t \tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t \tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t \tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t \tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n \t}\n}\n\n/**\n * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n * @class PolyStar\n */\nclass PolyStar {\n\t/**\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} [pointSize=0]\n\t * @param {Number} [angle=0]\n\t */\n \tconstructor (x, y, radius, sides, pointSize = 0, angle = 0) {\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @property sides\n\t\t * @type Number\n\t\t */\n\t \tthis.sides = sides;\n\t\t/**\n\t\t * @property pointSize\n\t\t * @type Number\n\t\t */\n\t \tthis.pointSize = pointSize;\n\t\t/**\n\t\t * @property angle\n\t\t * @type Number\n\t\t */\n\t \tthis.angle = angle;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet radius = this.radius;\n\t \tlet angle = this.angle/180*Math.PI;\n\t \tlet sides = this.sides;\n\t \tlet ps = 1-this.pointSize;\n\t \tlet a = Math.PI/sides;\n\n\t \tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \tfor (let i = 0; i < sides; i++) {\n\t \t\tangle += a;\n\t \t\tif (ps != 1) {\n\t \t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t \t\t}\n\t \t\tangle += a;\n\t \t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \t}\n\t \tctx.closePath();\n \t}\n}\n\n// static properties:\n/**\n * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n * unnecessary instantiation.\n * @property beginCmd\n * @type {Graphics.BeginPath}\n * @static\n * @readonly\n */\n/**\n * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n * @property BASE_64\n * @static\n * @final\n * @readonly\n * @type {Object}\n */\n/**\n * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"butt\", 1 to \"round\", and 2 to \"square\".\n * For example, to set the line caps to \"square\":\n *\n *      myGraphics.ss(16, 2);\n *\n * @property STROKE_CAPS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n * For example, to set the line joints to \"bevel\":\n *\n *      myGraphics.ss(16, 0, 2);\n *\n * @property STROKE_JOINTS_MAP\n * @static\n * @final\n * @readonly\n * @type {Array}\n */\n/**\n * @property _ctx\n * @static\n * @protected\n * @type {CanvasRenderingContext2D}\n */\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\tGraphics.beginCmd = new BeginPath();\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\tGraphics.EMPTY_SEGMENTS = [];\n}\n\nexport default Graphics;\n","/*\n* @license MovieClip\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Tween from \"@createjs/tweenjs/src/Tween\";\nimport Timeline from \"@createjs/tweenjs/src/Timeline\";\n\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * <h4>Example</h4>\n * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n *\n *      var stage = new createjs.Stage(\"canvas\");\n *      createjs.Ticker.addEventListener(\"tick\", stage);\n *\n *      var mc = new createjs.MovieClip(null, 0, true, {start:20});\n *      stage.addChild(mc);\n *\n *      var child1 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#999999\")\n *              .drawCircle(30,30,30));\n *      var child2 = new createjs.Shape(\n *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n *              .drawCircle(30,30,30));\n *\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child1)\n *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n *      mc.timeline.addTween(\n *          createjs.Tween.get(child2)\n *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n *\n *      mc.gotoAndPlay(\"start\");\n *\n * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n *\n * @class MovieClip\n * @extends Container\n * @module EaselJS\n */\nexport default class MovieClip extends Container {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{mode:MovieClip.SYNCHED}`).\n   * Supported props for the MovieClip are listed below. These props are set on the corresponding instance properties except where\n   * specified.<UL>\n   *    <LI> `mode`</LI>\n   *    <LI> `startPosition`</LI>\n   *    <LI> `frameBounds`</LI>\n   * </UL>\n   *\n   * This object will also be passed into the Timeline instance associated with this MovieClip. See the documentation\n   * for Timeline for a list of supported props (ex. `paused`, `labels`, `loop`, `reversed`, etc.)\n\t */\n\tconstructor ({ mode = MovieClip.INDEPENDENT, startPosition = 0, loop = -1, paused = false, frameBounds = null, labels = null }) {\n\t\tsuper();\n\t\t!MovieClip.inited && MovieClip.init();\n\n// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.mode = mode;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition;\n\n\t\t/**\n    * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n    * 1 would cause it to loop once (ie. play a total of twice).\n\t\t * @property loop\n\t\t * @type Number\n\t\t * @default -1\n\t\t */\n\t\tthis.loop = loop === true ? -1 : (loop || 0);\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * <h4>Example</h4>\n     *\n     *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     *      var mc = new createjs.MovieClip();\n     *      mc.timeline.addTween(tween);\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     *      var tween = createjs.Tween.get(target).to({_off:false})\n     *          .wait(1).to({_off:true})\n     *          .wait(1).to({_off:false});\n     *\n     * @property timeline\n     * @type Timeline\n\t\t * @default Timeline\n\t\t */\n\t\tthis.timeline = new Timeline({ useTicks: true, paused: true, mode, startPosition, loop, frameBounds, labels });\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = paused;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.framerate = null;\n\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\n\t\t/**\n\t\t * @property _rawPosition\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\n\t\t/**\n\t\t * @property _bound_resolveState\n\t\t * @type Function\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t}\n\n// static methods:\n\tstatic init () {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t}\n\n// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n// accessor properties:\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * Shortcut to TweenJS: Timeline.getLabels();\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget labels () {\n\t\treturn this.timeline.labels;\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\n\t * for more information.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t */\n\tget currentLabel () {\n\t\treturn this.timeline.getCurrentLabel();\n\t}\n\n\t /**\n \t * Returns the duration of this MovieClip in seconds or ticks.\n \t * @property duration\n \t * @type {Number}\n \t * @readonly\n \t */\n \tget duration () {\n\t\treturn this.timeline.duration;\n\t}\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget totalFrames () {\n\t\treturn this.duration;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t */\n\tdraw (ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.drawCache(ctx, ignoreCache)) { return true; }\n    this._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tadvance (time) {\n\t\tlet INDEPENDENT = MovieClip.INDEPENDENT;\n\t\tif (this.mode !== INDEPENDENT) { return; } // update happens in draw for synched clips\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tlet o = this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) {\n\t\t\tif (o.mode === INDEPENDENT) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\n\t\tif (this.paused) { return; }\n\t\t// calculate how many frames to advance:\n\t\tlet t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n\t\tlet frames = t | 0;\n\t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n\t\twhile (frames--) {\n\t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n\t\t}\n\t}\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow \"MovieClip cannot be cloned.\";\n\t}\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\t_updateState () {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t}\n\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\t_tick (evtObj) {\n\t\tthis.advance(evtObj && evtObj.delta);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t}\n\n\t/**\n\t * @method _reset\n\t * @private\n\t */\n\t_reset () {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * @method _updateTimeline\n\t * @param {Number} rawPosition\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t */\n\t_updateTimeline (rawPosition, jump) {\n\t\tlet synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n\t\tif (rawPosition < 1) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t}\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @method _renderFirstFrame\n\t * @protected\n\t **/\n\t_renderFirstFrame () {\n\t\tconst tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t}\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @method _resolveState\n\t * @protected\n\t */\n\t_resolveState () {\n\t\tlet tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\n\t\tfor (let n in this._managed) { this._managed[n] = 1; }\n\n\t\tlet tweens = tl.tweens;\n\t\tfor (let tween of tweens) {\n\t\t\tlet target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\t\t\tlet offset = tween._stepPosition;\n\n\t\t\tif (target instanceof DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tlet kids = this.children;\n\t\tfor (let i=kids.length-1; i>=0; i--) {\n\t\t\tlet id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t */\n\t_setState (state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (let i = state.length - 1; i >= 0; i--) {\n\t\t\tlet o = state[i];\n\t\t\tlet target = o.t;\n\t\t\tlet props = o.p;\n\t\t\tfor (let n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t */\n\t_addManagedChild (child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child, 0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t}\n\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = this.getBounds();\n\t\tif (!bounds && this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn super._getBounds(matrix, ignoreTransform);\n\t}\n\n}\n\n// static constants:\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @property INDEPENDENT\n * @static\n * @type String\n * @default \"independent\"\n * @readonly\n */\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @property SINGLE_FRAME\n * @static\n * @type String\n * @default \"single\"\n * @readonly\n */\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @property SYNCHED\n * @static\n * @type String\n * @default \"synched\"\n * @readonly\n */\n{\n\tMovieClip.INDEPENDENT = \"independent\";\n\tMovieClip.SINGLE_FRAME = \"single\";\n\tMovieClip.SYNCHED = \"synched\";\n\tMovieClip.inited = false;\n}\n\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n * property from tweening.\n * @class MovieClipPlugin\n * @todo update to new plugin model\n * @static\n * @private\n */\nclass MovieClipPlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n\t}\n\n\t/**\n\t * @method install\n\t * @private\n\t */\n\tstatic install () {\n\t\tTween.installPlugin(MovieClipPlugin);\n\t}\n\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t */\n\tstatic init (tween, prop, value) {\n\t\treturn value;\n\t}\n\n\t/**\n\t * @method tween\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio === 1 ? endValues[prop] : startValues[prop]);\n\t}\n\n}\n\n/**\n * @property priority\n * @static\n */\n{\n\tMovieClipPlugin.priority = 100;\n}\n","/*\n* @license Shadow\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n * via its <code>shadow</code> property.\n *\n * <h4>Example</h4>\n *\n *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n *\n * @class Shadow\n * @module EaselJS\n */\nexport default class Shadow {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t */\n\tconstructor (color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n// public properties:\n\t\t/**\n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default black\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX;\n\n\t\t/**\n\t\t * The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY;\n\n\t\t/**\n\t\t * The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur;\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t */\n\tclone () {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t}\n\n}\n\n// static public properties:\n/**\n * An identity shadow object (all properties are set to 0).\n * @property identity\n * @type Shadow\n * @static\n * @final\n * @readonly\n */\n{\n\tShadow.identity = new Shadow(\"transparent\");\n}\n","/*\n* @license Shape\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport DisplayObject from \"./DisplayObject\";\nimport Graphics from \"./Graphics\";\n\n/**\n * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not\n * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n * rendering cost.\n *\n * <h4>Example</h4>\n *\n *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *      var shape = new createjs.Shape(graphics);\n *\n *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n *      var shape = new createjs.Shape();\n *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @class Shape\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Shape extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Graphics} [graphics=Graphics] Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t */\n\tconstructor (graphics = new Graphics()) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t */\n\t\tthis.graphics = graphics;\n\t}\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t */\n\tclone (recursive = false) {\n\t\tlet g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t}\n\n}\n","/*\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n *\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @class SpriteSheet\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheet extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n   * @param {Object} data An object describing the SpriteSheet data.\n\t */\n\tconstructor (data) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t */\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._margin = 0;\n\n\t\tthis._parseData(data);\n\t}\n\n// accessor properties:\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget animations () {\n\t\treturn this._animations.slice();\n\t}\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tgetNumFrames (animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tlet data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t */\n\tgetAnimation (name) {\n\t\treturn this._data[name];\n\t}\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t */\n\tgetFrame (frameIndex) {\n\t\tlet frame;\n\t\tif (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle=Rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetFrameBounds (frameIndex, rectangle = new Rectangle()) {\n\t\tlet frame = this.getFrame(frameIndex);\n\t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t */\n\tclone () {\n\t\t// TODO-ES6: Add throw docs\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t */\n\t_parseData (data) {\n\t\tif (data == null) { return; }\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images) {\n\t\t\tfor (let img of data.images) {\n\t\t\t\tlet a = this._images = [];\n\t\t\t\tlet src;\n\t\t\t\tif (typeof img === \"string\") {\n\t\t\t\t\tsrc = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\timg.onload = () => this._handleImageLoad(src);\n\t\t\t\t\timg.onerror = () => this._handleImageError(src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames != null) {\n\t\t\tif (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\tfor (let arr of data.frames) {\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet o = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount === 0) { this._calculateFrames(); }\n\t\t\t}\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif (data.animations != null) {\n\t\t\tthis._data = {};\n\t\t\tlet o = data.animations;\n\t\t\tfor (let name in o) {\n\t\t\t\tlet anim = { name };\n\t\t\t\tlet obj = o[name];\n\t\t\t\tlet a;\n\t\t\t\tif (typeof obj === \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length === 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (let i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tlet frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames === \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next === name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t */\n\t _handleImageLoad (src) {\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\t_handleImageError (src) {\n\t\tlet errorEvent = new Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t */\n\t_calculateFrames () {\n\t\tif (this._frames || this._frameWidth === 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tlet maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tlet frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tlet spacing = this._spacing, margin = this._margin;\n\n\t\timgLoop:\n\t\tfor (let i=0, imgs=this._images, l=imgs.length; i<l; i++) {\n\t\t\tlet img = imgs[i],\n\t\t\t\timgW = (img.width||img.naturalWidth),\n\t\t\t\timgH = (img.height||img.naturalHeight);\n\n\t\t\tlet y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tlet x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\timage: img,\n\t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n * when doing on-demand rendering.\n * @event getframe\n * @param {Number} index The frame index.\n * @param {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n * event once all images are finished processing, even if an error is encountered.\n * @event error\n * @param {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n","/*\n* @license Text\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\nconst _V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\nimport DisplayObject from \"./DisplayObject\";\n\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * <h4>Example</h4>\n *\n *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n *      text.x = 100;\n *      text.textBaseline = \"alphabetic\";\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n * @class Text\n * @extends DisplayObject\n * @module EaselJS\n */\nexport default class Text extends DisplayObject {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t */\n\tconstructor (text, font, color) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t */\n\t\tthis.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t */\n\t\tthis.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t */\n\t\tthis.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t */\n\t\tthis.lineWidth = null;\n\t}\n\n// static constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get H_OFFSETS () { return _H_OFFSETS; }\n\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t */\n\t static get V_OFFSETS () { return _V_OFFSETS; }\n\n// public methods:\n \t/**\n \t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n \t * This does not account for whether it would be visible within the boundaries of the stage.\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method isVisible\n \t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n \t */\n \tisVisible () {\n \t\tlet hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n \t}\n\n \t/**\n \t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n \t * Returns true if the draw was handled (useful for overriding functionality).\n \t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n \t * @method draw\n \t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n \t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n \t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n \t * into itself).\n \t */\n \tdraw (ctx, ignoreCache) {\n \t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n \t\tlet col = this.color || \"#000\";\n \t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n \t\telse { ctx.fillStyle = col; }\n\n \t\tthis._drawText(this._prepContext(ctx));\n \t\treturn true;\n \t}\n\n \t/**\n \t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n \t * @method getMeasuredWidth\n \t * @return {Number} The measured, untransformed width of the text.\n \t */\n \tgetMeasuredWidth () {\n \t\treturn this._getMeasuredWidth(this.text);\n \t}\n\n \t/**\n \t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n \t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n \t * @method getMeasuredLineHeight\n \t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n \t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n \t */\n \tgetMeasuredLineHeight () {\n \t\treturn this._getMeasuredWidth(\"M\")*1.2;\n \t}\n\n \t/**\n \t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n \t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n \t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n \t * @method getMeasuredHeight\n \t * @return {Number} The approximate height of the untransformed multi-line text.\n \t */\n \tgetMeasuredHeight () {\n \t\treturn this._drawText(null, {}).height;\n \t}\n\n \t/**\n \t * Docced in superclass.\n \t */\n \tgetBounds () {\n \t\tlet rect = super.getBounds();\n \t\tif (rect) { return rect; }\n \t\tif (this.text == null || this.text === \"\") { return null; }\n \t\tlet o = this._drawText(null, {});\n \t\tlet w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n \t\tlet x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n \t\tlet y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._rectangle.setValues(x, y, w, o.height);\n \t}\n\n \t/**\n \t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n \t * of the drawn text. The lines property contains an array of strings, one for\n \t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n \t * whitespace removed.\n \t * @method getMetrics\n \t * @return {Object} An object with width, height, and lines properties.\n \t */\n \tgetMetrics () {\n \t\tlet o = {lines:[]};\n \t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n \t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._drawText(null, o, o.lines);\n \t}\n\n \t/**\n \t * Returns a clone of the Text instance.\n \t * @method clone\n \t * @return {Text} a clone of the Text instance.\n \t */\n \tclone () {\n \t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n \t}\n\n \t/**\n \t * Returns a string representation of this object.\n \t * @method toString\n \t * @return {String} a string representation of the instance.\n \t */\n \ttoString () {\n \t\treturn `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n \t}\n\n// private methods:\n \t/**\n \t * @method _cloneProps\n \t * @param {Text} o\n \t * @protected\n \t * @return {Text} o\n \t */\n \t_cloneProps (o) {\n \t\tsuper._cloneProps(o);\n \t\to.textAlign = this.textAlign;\n \t\to.textBaseline = this.textBaseline;\n \t\to.maxWidth = this.maxWidth;\n \t\to.outline = this.outline;\n \t\to.lineHeight = this.lineHeight;\n \t\to.lineWidth = this.lineWidth;\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _getWorkingContext\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @return {CanvasRenderingContext2D}\n \t * @protected\n \t */\n \t_prepContext (ctx) {\n \t\tctx.font = this.font||\"10px sans-serif\";\n \t\tctx.textAlign = this.textAlign||\"left\";\n \t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t */\n \t_drawText (ctx, o, lines) {\n \t\tconst paint = !!ctx;\n \t\tif (!paint) {\n \t\t\tctx = Text._workingContext;\n \t\t\tctx.save();\n \t\t\tthis._prepContext(ctx);\n \t\t}\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\n \t\tlet maxW = 0, count = 0;\n \t\tlet hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n \t\tfor (let str of hardLines) {\n \t\t\tlet w = null;\n\n \t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n \t\t\t\t// text wrapping:\n \t\t\t\tlet words = str.split(/(\\s)/);\n \t\t\t\tstr = words[0];\n \t\t\t\tw = ctx.measureText(str).width;\n\n\t\t\t\tconst l = words.length;\n \t\t\t\tfor (let i=1; i<l; i+=2) {\n \t\t\t\t\t// Line needs to wrap:\n \t\t\t\t\tlet wordW = ctx.measureText(words[i] + words[i+1]).width;\n \t\t\t\t\tif (w + wordW > this.lineWidth) {\n \t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\t\t\t\tif (lines) { lines.push(str); }\n \t\t\t\t\t\tif (w > maxW) { maxW = w; }\n \t\t\t\t\t\tstr = words[i+1];\n \t\t\t\t\t\tw = ctx.measureText(str).width;\n \t\t\t\t\t\tcount++;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tstr += words[i] + words[i+1];\n \t\t\t\t\t\tw += wordW;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n\n \t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\tif (lines) { lines.push(str); }\n \t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n \t\t\tif (w > maxW) { maxW = w; }\n \t\t\tcount++;\n \t\t}\n\n \t\tif (o) {\n \t\t\to.width = maxW;\n \t\t\to.height = count*lineHeight;\n \t\t}\n \t\tif (!paint) { ctx.restore(); }\n \t\treturn o;\n \t}\n\n \t/**\n \t * @method _drawTextLine\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @param {String} text\n \t * @param {Number} y\n \t * @protected\n \t */\n \t_drawTextLine (ctx, text, y) {\n \t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n \t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n \t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n \t}\n\n \t/**\n \t * @method _getMeasuredWidth\n \t * @param {String} text\n \t * @protected\n \t */\n \t_getMeasuredWidth (text) {\n \t\tlet ctx = Text._workingContext;\n \t\tctx.save();\n \t\tlet w = this._prepContext(ctx).measureText(text).width;\n \t\tctx.restore();\n \t\treturn w;\n \t}\n\n}\n\n{\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t * @static\n\t */\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\tif (canvas.getContext) {\n\t\tText._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n * better performance.\n *\n * <h4>Example</h4>\n * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n *\n *       var box = new createjs.Shape();\n *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n *       box.graphics.drawRect(0, 0, 100, 100);\n *       box.cache(0, 0, 100, 100);\n *\n *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *       bmp.filters = [\n *           new createjs.AlphaMapFilter(box.cacheCanvas)\n *       ];\n *       bmp.cache(0, 0, 100, 100);\n *       stage.addChild(bmp);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMapFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMapFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t */\n\tconstructor (alphaMap) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.alphaMap = alphaMap;\n\n// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis._alphaMap = null;\n\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t */\n\t\tthis._mapData = null;\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * TODO: Docs\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\tclone () {\n\t\tlet o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass.\n\t */\n\t_applyFilter (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tlet data = imageData.data;\n\t\tlet map = this._mapData;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t */\n\t_prepAlphaMap () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap === this._alphaMap && this._mapData) { return true; }\n\t\tthis._mapData = null;\n\n\t\tlet map = this._alphaMap = this.alphaMap;\n\t\tlet canvas = map;\n\t\tlet ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n}\n","/*\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * <h4>Example</h4>\n * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n *\n *      var box = new createjs.Shape();\n *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n *      box.graphics.drawRect(0, 0, 100, 100);\n *      box.cache(0, 0, 100, 100);\n *\n *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n *      bmp.filters = [\n *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n *      ];\n *      bmp.cache(0, 0, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n * @class AlphaMaskFilter\n * @extends Filter\n * @module EaselJS\n */\nexport default class AlphaMaskFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t */\n\tconstructor (mask) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t */\n\t\tthis.mask = mask;\n\n\t\t/** docced in super class **/\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t}\n\n\t/**\n\t * Docced in superclass\n\t */\n\tclone () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t}\n\n\t/**\n\t * TODO: Doc\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n}\n","/*\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @module EaselJS\n */\n\nconst _MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\nconst _SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * <h4>Example</h4>\n * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n * method to account for the spread that the blur causes.\n *\n *      let shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      let blurFilter = new createjs.BlurFilter(5, 5, 1);\n *      shape.filters = [blurFilter];\n *      let bounds = blurFilter.getBounds();\n *\n *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class BlurFilter\n * @extends Filter\n */\nexport default class BlurFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t */\n\tconstructor (blurX = 0, blurY = 0, quality = 1) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurX = blurX;\n\t\tthis._blurXTable = [];\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t */\n\t\tthis._blurY = blurY;\n\t\tthis._blurYTable = [];\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t */\n\t\tthis._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n\t\tthis._lastQuality = null;\n\t\tthis.quality = this._quality | 0;\n\n\t\t/**\n\t\t * This is a template to generate the shader for {{#crossLink FRAG_SHADER_BODY}}{{/crossLink}}\n\t\t */\n\t\tthis.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t}\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get MUL_TABLE () { return _MUL_TABLE; }\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get SHG_TABLE () { return _SHG_TABLE; }\n\n// accessor properties:\n// TODO: Docs for these.\n\tget blurX () {\n\t\treturn this._blurX;\n\t}\n\n\tset blurX (blurX) {\n\t\tif (isNaN(blurX) || blurX < 0) { blurX = 0; }\n\t\tthis._blurX = blurX;\n\t}\n\n\tget blurY () {\n\t\treturn this._blurY;\n\t}\n\n\tset blurY (blurY) {\n\t\tif (isNaN(blurY) || blurY < 0){ blurY = 0; }\n\t\tthis._blurY = blurY;\n\t}\n\n\tget quality () {\n\t\treturn this._quality;\n\t}\n\n\tset quality (quality) {\n\t\tif (isNaN(quality) || quality < 0) { quality = 0; }\n\t\tthis._quality = quality | 0;\n\t}\n\n\tget _buildShader () {\n\t\tconst xChange = this._lastBlurX !== this._blurX;\n\t\tconst yChange = this._lastBlurY !== this._blurY;\n\t\tconst qChange = this._lastQuality !== this._quality;\n\t\tif (xChange || yChange || qChange) {\n\t\t\t\tif (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\t\tif (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\t\tthis._updateShader();\n\t\t\t\tthis._lastBlurX = this._blurX;\n\t\t\t\tthis._lastBlurY = this._blurY;\n\t\t\t\tthis._lastQuality = this._quality;\n\t\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t}\n\n\tset _builtShader (value) {\n\t\tthis._compiledShader;\n\t}\n\n// public methods:\n\t/**\n\t * Docced in superclass\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tgetBounds (rect) {\n\t\tlet x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tlet q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t}\n\n\n// private methods:\n\t/**\n\t * Docced in superclass\n\t */\n\t_updateShader () {\n\t\tlet result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t}\n\t/**\n\t * Docced in superclass\n\t */\n\t_getTable (spread) {\n\t\tconst EDGE = 4.2;\n\t\tif (spread <= 1) { return [1]; }\n\n\t\tlet result = [];\n\t\tlet count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tlet adjust = (count/2)|0;\n\t\tfor (let i = -adjust; i<=adjust; i++) {\n\t\t\tlet x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tlet factor = result.reduce((a, b) => a + b, 0);\n\t\treturn result.map(currentValue => currentValue / factor);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tlet radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX === 0 && radiusY === 0) return false;\n\n\t\tlet iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tlet px = imageData.data;\n\t\tlet x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tlet divx = (radiusX + radiusX + 1) | 0;\n\t\tlet divy = (radiusY + radiusY + 1) | 0;\n\t\tlet w = imageData.width | 0;\n\t\tlet h = imageData.height | 0;\n\n\t\tlet w1 = (w - 1) | 0;\n\t\tlet h1 = (h - 1) | 0;\n\t\tlet rxp1 = (radiusX + 1) | 0;\n\t\tlet ryp1 = (radiusY + 1) | 0;\n\n\t\tlet ssx = {r:0,b:0,g:0,a:0};\n\t\tlet sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tlet ssy = {r:0,b:0,g:0,a:0};\n\t\tlet sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tlet si = null;\n\n\n\t\tlet mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tlet stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tlet mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tlet sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tlet ms = mtx;\n\t\t\tlet ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a color transform to DisplayObjects.\n *\n * <h4>Example</h4>\n * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      shape.filters = [\n *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n *      ];\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorFilter\n * @extends Filter\n */\nexport default class ColorFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t */\n\tconstructor (redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.redMultiplier = redMultiplier;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.greenMultiplier = greenMultiplier;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.blueMultiplier = blueMultiplier;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.redOffset = redOffset;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.greenOffset = greenOffset;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.blueOffset = blueOffset;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t */\n\t\tthis.alphaOffset = alphaOffset;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ColorMatrix\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nconst _DELTA_INDEX = [\n \t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n \t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n \t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n \t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n \t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n \t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n \t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n \t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n \t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n \t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n \t10.0\n];\nconst _IDENTITY_MATRIX = [\n \t1,0,0,0,0,\n \t0,1,0,0,0,\n \t0,0,1,0,0,\n \t0,0,0,1,0,\n \t0,0,0,0,1\n];\nconst _LENGTH = 25;\n\n/**\n * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n * Most methods return the instance to facilitate chained calls.\n *\n * <h4>Example</h4>\n *\n *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n * for an example of how to use ColorMatrix to change a DisplayObject's color.\n * @class ColorMatrix\n */\nexport default class ColorMatrix {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t */\n\tconstructor (brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get DELTA_INDEX () { return _DELTA_INDEX; }\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t */\n\tstatic get IDENTITY_MATRIX () { return _IDENTITY_MATRIX; }\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t */\n\tstatic get LENGTH () { return _LENGTH; }\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetColor (brightness, contrast, saturation, hue) {\n\t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\treset () {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t}\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustColor (brightness, contrast, saturation, hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t}\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustBrightness (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustContrast (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x === 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustSaturation (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tlet lumR = 0.3086;\n\t\tlet lumG = 0.6094;\n\t\tlet lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustHue (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 180)/180*Math.PI;\n\t\tlet cosVal = Math.cos(value);\n\t\tlet sinVal = Math.sin(value);\n\t\tlet lumR = 0.213;\n\t\tlet lumG = 0.715;\n\t\tlet lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tconcat (matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t */\n\tclone () {\n\t\treturn (new ColorMatrix()).copy(this);\n\t}\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t */\n\ttoArray () {\n\t\tlet arr = [];\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tcopy (matrix) {\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_multiplyMatrix (matrix) {\n\t\tlet col = [];\n\n\t\tfor (let i=0;i<5;i++) {\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tlet val=0;\n\t\t\t\tfor (let k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t */\n\t_cleanValue (value, limit) {\n\t\treturn Math.min(limit, Math.max(-limit, value));\n\t}\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_fixMatrix (matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t}\n\n}\n","/*\n* @license ColorMatrixFilter\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * @module EaselJS\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n *\n *      var shape = new createjs.Shape().set({x:100,y:100});\n *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n *\n *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n *      shape.filters = [\n *          new createjs.ColorMatrixFilter(matrix)\n *      ];\n *\n *      shape.cache(-50, -50, 100, 100);\n *\n * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n * @class ColorMatrixFilter\n * @extends Filter\n */\nexport default class ColorMatrixFilter extends Filter {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t */\n\tconstructor (matrix) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t */\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t}\n\n// public methods:\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tlet mat = this.matrix;\n\t\tlet colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t}\n\n\t/**\n\t * Docced in super class\n\t */\n\tclone () {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n\n// private methods:\n\t/**\n\t * Docced in super class\n\t */\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tlet r,g,b,a;\n\t\tlet mtx = this.matrix;\n\t\tlet m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tlet m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tlet m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tlet m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n *\n *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n *      myInstance.addEventListener(\"click\", handleClick);\n *      function handleClick(event) {\n *          // Click Happened.\n *      }\n *\n * @class ButtonHelper\n * @module EaselJS\n */\nexport default class ButtonHelper {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t */\n\tconstructor (target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.overLabel = overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.outLabel = outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t */\n\t\tthis.downLabel = downLabel == null;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t */\n\t\tthis.play = play;\n\n\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isPressed = false;\n\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._isOver = false;\n\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t */\n\t\tthis._enabled = false;\n\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\n// accessor properties:\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t */\n\tget enabled () {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled (enabled) {\n\t\tif (enabled === this._enabled) { return; }\n\t\tlet o = this.target;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t */\n\thandleEvent (evt) {\n\t\tlet label, t = this.target, type = evt.type;\n\t\tif (type === \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type === \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type === \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t}\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t */\n\t_reset () {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tlet p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t}\n\n}\n","/*\n* @license Touch\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n * @module EaselJS\n */\nexport default class Touch {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t */\n\tstatic isSupported () {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t}\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t */\n\tstatic enable (stage, singleTouch = false, allowDefault = false) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t */\n\tstatic disable (stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\n\t\tdelete stage.__touch;\n\t}\n\n\n// private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IOS_handleEvent(stage, e);\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IOS_disable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tlet f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t}\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t */\n\tstatic _IOS_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tlet touches = e.changedTouches;\n\t\tlet type = e.type;\n\t\tconst l = touches.length;\n\t\tfor (let touch of touches) {\n\t\t\tlet id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type === \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => Touch._IE_handleEvent(stage,e);\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t}\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t */\n\tstatic _IE_disable (stage) {\n\t\tlet f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t */\n\tstatic _IE_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tlet type = e.type;\n\t\tlet id = e.pointerId;\n\t\tlet ids = stage.__touch.activeIDs;\n\n\t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\"\n\t\t\t\t\t|| type === \"pointerup\" || type === \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleStart (stage, id, e, x, y) {\n\t\tlet props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tlet ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t */\n\tstatic _handleMove (stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t}\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t */\n\tstatic _handleEnd (stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tlet props = stage.__touch;\n\t\tlet ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t}\n\n}\n","/*\n* @license SpriteSheetBuilder\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst _ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\nconst _ERR_RUNNING = \"a build is already running\";\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Rectangle from \"../geom/Rectangle\";\nimport SpriteSheet from \"../display/SpriteSheet\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n * @class SpriteSheetBuilder\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n * @extends EventDispatcher\n * @module EaselJS\n */\nexport default class SpriteSheetBuilder extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t */\n\tconstructor (framerate = 0) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t */\n\t\tthis.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t */\n\t\tthis.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t*/\n\t\tthis.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t */\n\t\tthis.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate;\n\n// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._frames = [];\n\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._animations = {};\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._timerID = null;\n\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t */\n\t\tthis._scale = 1;\n\t}\n\n// constants:\n\tstatic get ERR_DIMENSIONS () { return _ERR_DIMENSIONS; }\n\tstatic get ERR_RUNNING () { return _ERR_RUNNING; }\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t */\n\taddFrame (source, sourceRect, scale = 1, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect) { return null; }\n\t\treturn this._frames.push({source, sourceRect:rect, scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t}\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t */\n\taddAnimation (name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames, next, speed};\n\t}\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t */\n\taddMovieClip (source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rects = source.frameBounds;\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect && !rects) { return; }\n\n\t\tlet baseFrameIndex = this._frames.length;\n\t\tconst duration = source.timeline.duration;\n\t\tfor (let i=0; i<duration; i++) {\n\t\t\tlet r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i, f:setupFunction, d:setupData});\n\t\t}\n\t\tconst labels = source.timeline._labels;\n\t\tlet lbls = [];\n\t\tfor (let n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort((a, b) => a.index-b.index);\n\t\t\tfor (let i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tlet label = lbls[i].label;\n\t\t\t\tlet start = baseFrameIndex+lbls[i].index;\n\t\t\t\tlet end = baseFrameIndex+((i === l-1) ? duration : lbls[i+1].index);\n\t\t\t\tlet frames = [];\n\t\t\t\tfor (let i=start; i<end; i++) { frames.push(i); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t */\n\tbuild () {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t}\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t */\n\tbuildAsync (timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tthis._timerID = setTimeout(() => this._run(), 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t}\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t */\n\tstopAsync () {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t}\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t */\n\tclone () {\n\t\tthrow \"SpriteSheetBuilder cannot be cloned.\";\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t */\n\t_startBuild () {\n\t\tlet pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tlet dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tlet frames = this._frames.slice();\n\t\tframes.sort((a, b) => (a.height<=b.height) ? -1 : 1);\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tlet y=0, x=0;\n\t\tlet img = 0;\n\t\twhile (frames.length) {\n\t\t\tlet o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tlet canvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_setupMovieClipFrame (source, data) {\n\t\tlet ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t}\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_getSize (size, max) {\n\t\tlet pow = 4;\n\t\twhile (Math.pow(2, ++pow) < size) {}\n\t\treturn Math.min(max, Math.pow(2, pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_fillRow (frames, y, img, dataFrames, pad) {\n\t\tlet w = this.maxWidth;\n\t\tlet maxH = this.maxHeight;\n\t\ty += pad;\n\t\tlet h = maxH-y;\n\t\tlet x = pad;\n\t\tlet height = 0;\n\t\tfor (let i=frames.length-1; i>=0; i--) {\n\t\t\tlet frame = frames[i];\n\t\t\tlet sc = this._scale*frame.scale;\n\t\t\tlet rect = frame.sourceRect;\n\t\t\tlet source = frame.source;\n\t\t\tlet rx = Math.floor(sc*rect.x-pad);\n\t\t\tlet ry = Math.floor(sc*rect.y-pad);\n\t\t\tlet rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tlet rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t}\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t */\n\t_endBuild () {\n\t\tthis.spriteSheet = new SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t}\n\n\t/**\n\t * @method _run\n\t * @protected\n\t */\n\t_run () {\n\t\tlet ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tlet t = (new Date()).getTime()+ts;\n\t\tlet complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tthis._timerID = setTimeout(() => this._run(), 50-ts);\n\t\t}\n\t\tlet p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tlet evt = new Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t}\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t */\n\t_drawNext () {\n\t\tlet frame = this._frames[this._index];\n\t\tlet sc = frame.scale*this._scale;\n\t\tlet rect = frame.rect;\n\t\tlet sourceRect = frame.sourceRect;\n\t\tlet canvas = this._data.images[frame.img];\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t}\n\n}\n\n// events:\n/**\n * Dispatched when a build completes.\n * @event complete\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event progress\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n","/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n * @class SpriteSheetUtils\n * @static\n * @module EaselJS\n */\nexport default class SpriteSheetUtils {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\n\t}\n\n// public static methods:\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t * @method extractFrame\n\t * @static\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t*/\n\tstatic extractFrame (spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tlet data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tlet r = data.rect;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tlet img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t}\n\n\t/**\n\t * Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\n\t * JPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\n\t * images (those with detail that lend itself to JPEG compression) this can provide significant file size savings\n\t * versus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).\n\t * @method mergeAlpha\n\t * @static\n\t * @param {HTMLImageElement} rbgImage The image (or canvas) containing the RGB channels to use.\n\t * @param {HTMLImageElement} alphaImage The image (or canvas) containing the alpha channel to use.\n\t * @param {HTMLCanvasElement} [canvas] If specified, this canvas will be used and returned. If not, a new canvas will be created.\n\t * @return {HTMLCanvasElement} A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.\n\t * @deprecated Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.\n\t*/\n\tstatic mergeAlpha (rgbImage, alphaImage, canvas) {\n\t\tif (!canvas) { canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\n\t\tcanvas.width = Math.max(alphaImage.width, rgbImage.width);\n\t\tcanvas.height = Math.max(alphaImage.height, rgbImage.height);\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tctx.save();\n\t\tctx.drawImage(rgbImage,0,0);\n\t\tctx.globalCompositeOperation = \"destination-in\";\n\t\tctx.drawImage(alphaImage,0,0);\n\t\tctx.restore();\n\t\treturn canvas;\n\t}\n\n\n// private static methods:\n\tstatic _flip (spriteSheet, count, h, v) {\n\t\tlet imgs = spriteSheet._images;\n\t\tlet canvas = SpriteSheetUtils._workingCanvas;\n\t\tlet ctx = SpriteSheetUtils._workingContext;\n\t\tconst il = imgs.length/count;\n\t\tfor (let i=0; i<il; i++) {\n\t\t\tlet src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tlet img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tlet frames = spriteSheet._frames;\n\t\tconst fl = frames.length/count;\n\t\tfor (let i=0; i<fl; i++) {\n\t\t\tlet src = frames[i];\n\t\t\tlet rect = src.rect.clone();\n\t\t\tlet img = imgs[src.image.__tmp+il*count];\n\n\t\t\tlet frame = {image:img,rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tlet sfx = `_${h?\"h\":\"\"}${v?\"v\":\"\"}`;\n\t\tlet names = spriteSheet._animations;\n\t\tlet data = spriteSheet._data;\n\t\tconst al = names.length/count;\n\t\tfor (let i=0; i<al; i++) {\n\t\t\tlet name = names[i];\n\t\t\tlet src = data[name];\n\t\t\tlet anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tlet frames = src.frames;\n\t\t\tfor (let i=0,l=frames.length;i<l;i++) {\n\t\t\t\tanim.frames.push(frames[i]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t}\n\n}\n\n// private static properties:\n/**\n * @property _workingCanvas\n * @static\n * @type HTMLCanvasElement | Object\n * @protected\n*/\n/**\n * @property _workingContext\n * @static\n * @type CanvasRenderingContext2D\n * @protected\n*/\n{\n\tlet canvas = (window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tSpriteSheetUtils._workingCanvas = canvas;\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n","/*\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet _alternateOutput = null;\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\n\n /**\n  * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n  * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n  * utilities.\n  * @class WebGLInspector\n  * @extends EventDispatcher\n  * @module EaselJS\n  */\nexport default class WebGLInspector extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {StageGL} stage The default stage to use when none is supplied.\n\t */\n\tconstructor (stage) {\n\t\tsuper();\n\n// private properties:\n\t\t/**\n\t\t * The internal reference to the default stage this Inspector is for.\n\t\t * @property _stage\n\t\t * @protected\n\t\t * @type {StageGL}\n\t\t */\n\t\tthis._stage = stage;\n\t}\n\n// static properties:\n\t/**\n\t * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n\t * Expects object with a \"log\" function that takes any number of params.\n\t * @property alternateOutput\n\t * @type {Console}\n\t * @default null\n\t * @static\n\t * @protected\n\t */\n\tstatic get alternateOutput () { return _alternateOutput; }\n\tstatic set alternateOutput (alternateOutput) { _alternateOutput = alternateOutput; }\n\n// static methods:\n\t/**\n\t * Utility function for use with {{#crossLink \"logDepth\"))((/crossLink}}. Logs an item's position and registration.\n\t * Useful to see if something is being forced off screen or has an integer position.\n\t * @method dispProps\n\t * @param {DisplayObject} item The item we're currently logging about.\n\t * @param {String} [prepend=\"\"] The string to show before the item, usually formatting for a tree view.\n\t * @static\n\t */\n\tstatic dispProps (item, prepend = \"\") {\n\t\tlet p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t\tlet r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\t\tWebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t}\n\n// private static methods:\n\t/**\n\t * Log with alternateOutput if available, defaulting to the console.\n\t * @method _log\n\t * @param {...*} info The info to log.\n\t * @static\n\t */\n\tstatic _log (...info) {\n\t\tif (WebGLInspector.alternateOutput) {\n\t\t\tWebGLInspector.alternateOutput.log(...info);\n\t\t} else {\n\t\t\tconsole.log(...info);\n\t\t}\n\t}\n\n// public methods:\n\t/**\n\t * Perform all of the logging reports at once.\n\t * @method log\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlog (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\t\tWebGLInspector._log(`Batches Per Draw: ${(stage._batchID/stage._drawID).toFixed(4)}`);\n\t\tthis.logContextInfo(stage._webGLContext);\n\t\tthis.logDepth(stage.children, \"\");\n\t\tthis.logTextureFill(stage);\n\t}\n\n\t/**\n\t * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring\n\t * rendering.\n\t * @method toggleGPUDraw\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t */\n\ttoggleGPUDraw (stage, enabled) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tif (enabled === undefined) {\n\t\t\tenabled = !!stage._drawBuffers_;\n\t\t}\n\n\t\tif (enabled && stage._drawBuffers_) {\n\t\t\tstage._drawBuffers = stage._drawBuffers_;\n\t\t\tstage._drawBuffers_ = undefined;\n\t\t} else {\n\t\t\tstage._drawBuffers_ = stage._drawBuffers;\n\t\t\tstage._drawBuffers = function _inspectorDrawBuffers (gl) {\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tWebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t * @method logDepth\n\t * @param {Array} [children=this._stage.children] The children array to walk through.\n\t * @param {String} [prepend=\"\"] What to prepend to this output from this point onwards.\n\t * @param {Function} [logFunc=WebGLInspector._log] Custom logging function, mainly for filtering or formatting output.\n\t */\n\tlogDepth (children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t\tif (!children) { children = this._stage.children; }\n\t\tconst l = children.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet child = children[i];\n\t\t\tlogFunc(`${prepend}-`, child);\n\t\t\tif (child.children && child.children.length) {\n\t\t\t\tthis.logDepth(child.children, `|${prepend}`, logFunc);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Examine the context and provide information about its capabilities.\n\t * @method logContextInfo\n\t * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t */\n\tlogContextInfo (gl) {\n\t\tif (!gl) { gl = this._stage._webGLContext; }\n\t\tlet data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE)/2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)/2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\t\tWebGLInspector._log(data);\n\t}\n\n\t/**\n\t * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t * in place.\n\t * @method logTextureFill\n\t * @param {StageGL} [stage=this._stage] The stage to log information for.\n\t */\n\tlogTextureFill (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tlet dict = stage._textureDictionary;\n\t\tlet count = stage._batchTextureCount;\n\t\tWebGLInspector._log(`${textureMax}: ${count}`);\n\t\tlet output = [];\n\t\tfor (let n in dict) {\n\t\t\tlet str = n.replace(window.location.origin, \"\");\n\t\t\tlet tex = dict[n];\n\t\t\tlet shifted = tex._lastActiveIndex?tex._lastActiveIndex === tex._activeIndex:false;\n\t\t\toutput.push({src, element:tex, shifted});\n\t\t\ttex._lastActiveIndex = tex._activeIndex;\n\t\t}\n\n\t\toutput.sort((a,b) => {\n\t\t\tif (a.element._drawID === stage._drawID) { return 1; }\n\t\t\tif (a.element._drawID < b.element._drawID) { return -1; }\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst l = output.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet out = output[i];\n\t\t\tlet active = out.element._drawID === stage._drawID;\n\t\t\tWebGLInspector._log(`[${out.src}] ${active?\"ACTIVE\":\"stale\"} ${out.shifted?\"steady\":\"DRIFT\"}`, out.element);\n\t\t}\n\t}\n\n}\n"]}